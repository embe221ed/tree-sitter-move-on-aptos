
Executing:       anoremenu PopUp.Go\ to\ definition      <Cmd>lua vim.lsp.buf.definition()<CR>
Executing:       amenu     PopUp.Open\ in\ web\ browser  gx
Executing:       anoremenu PopUp.Inspect                 <Cmd>Inspect<CR>
Executing:       anoremenu PopUp.-1-                     <Nop>
Executing:       vnoremenu PopUp.Cut                     "+x
Executing:       vnoremenu PopUp.Copy                    "+y
Executing:       anoremenu PopUp.Paste                   "+gP
Executing:       vnoremenu PopUp.Paste                   "+P
Executing:       vnoremenu PopUp.Delete                  "_x
Executing:       nnoremenu PopUp.Select\ All             ggVG
Executing:       vnoremenu PopUp.Select\ All             gg0oG$
Executing:       inoremenu PopUp.Select\ All             <C-Home><C-O>VG
Executing:       anoremenu PopUp.-2-                     <Nop>
Executing:       anoremenu PopUp.How-to\ disable\ mouse  <Cmd>help disable-mouse<CR>
Executing: 
Executing:       amenu disable PopUp.Go\ to\ definition
Executing:       amenu disable PopUp.Open\ in\ web\ browser
Executing:     
Searching for "ftplugin.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftplugin.vim"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin.vim"
sourcing "/opt/neovim/out/share/nvim/runtime/ftplugin.vim"
line 1: " Vim support file to switch on loading plugins for file types
line 2: "
line 3: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 4: " Last change:^I2023 Aug 10
line 5: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 6: 
line 7: if exists("did_load_ftplugin")
line 8:   finish
line 9: endif
line 10: let did_load_ftplugin = 1
line 11: 
line 12: augroup filetypeplugin
line 13:   au FileType * call s:LoadFTPlugin()
line 14: 
line 15:   func! s:LoadFTPlugin()
line 39: augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/ftplugin.vim
Searching for "/opt/neovim/out/lib/nvim/ftplugin.vim"
Searching for "indent.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/indent.vim"
Searching for "/Users/embe221ed/.local/share/nvim/site/indent.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/indent.vim"
sourcing "/opt/neovim/out/share/nvim/runtime/indent.vim"
line 1: " Vim support file to switch on loading indent files for file types
line 2: "
line 3: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 4: " Last Change:^I2023 Aug 10
line 5: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 6: 
line 7: if exists("did_indent_on")
line 8:   finish
line 9: endif
line 10: let did_indent_on = 1
line 11: 
line 12: augroup filetypeindent
line 13:   au FileType * call s:LoadIndent()
line 14:   func! s:LoadIndent()
line 33: augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/indent.vim
Searching for "/opt/neovim/out/lib/nvim/indent.vim"
could not source "/etc/xdg/nvim/sysinit.vim"
could not source "$VIM/sysinit.vim"
sourcing "/Users/embe221ed/.config/nvim/init.lua"
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /opt/neovim/out/share/nvim/runtime/filetype.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/filetype.lua"
Executing:   augroup filetypedetect
Executing:   runtime! ftdetect/*.{vim,lua}
Searching for "ftdetect/*.{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftdetect/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftdetect/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftdetect/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftdetect/*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftdetect/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftdetect/*.{vim,lua}"
not found in runtime path: "ftdetect/*.{vim,lua}"
Executing:   augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/filetype.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.vim"
line 1: function! luasnip#expandable()
line 4: 
line 5: function! luasnip#expand_or_jumpable()
line 8: 
line 9: function! luasnip#expand_or_locally_jumpable()
line 12: 
line 13: function! luasnip#locally_jumpable(direction)
line 16: 
line 17: function! luasnip#jumpable(direction)
line 20: 
line 21: function! luasnip#choice_active()
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/plugin/nvim-treesitter.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/plugin/nvim-treesitter.lua"
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#installed_parsers TSUninstall lua require'nvim-treesitter.install'.commands.TSUninstall['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -bang -complete=custom,nvim_treesitter#installable_parsers TSInstallFromGrammar lua require'nvim-treesitter.install'.commands.TSInstallFromGrammar['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -bang -complete=custom,nvim_treesitter#installable_parsers TSInstall lua require'nvim-treesitter.install'.commands.TSInstall['run<bang>'](<f-args>)
Executing: command! -bar -nargs=* -complete=custom,nvim_treesitter#installed_parsers TSUpdateSync lua require'nvim-treesitter.install'.commands.TSUpdateSync['run<bang>'](<f-args>)
Executing: command! -bar -nargs=* -complete=custom,nvim_treesitter#installed_parsers TSUpdate lua require'nvim-treesitter.install'.commands.TSUpdate['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -bang -complete=custom,nvim_treesitter#installable_parsers TSInstallSync lua require'nvim-treesitter.install'.commands.TSInstallSync['run<bang>'](<f-args>)
Executing: command! -bar -nargs=0 TSInstallInfo lua require'nvim-treesitter.info'.commands.TSInstallInfo['run<bang>'](<f-args>)
Executing: command! -bar -nargs=? -complete=custom,nvim_treesitter#available_modules TSModuleInfo lua require'nvim-treesitter.info'.commands.TSModuleInfo['run<bang>'](<f-args>)
Executing: command! -bar -nargs=1 -complete=custom,nvim_treesitter#available_modules TSBufEnable lua require'nvim-treesitter.configs'.commands.TSBufEnable['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_query_groups TSEditQueryUserAfter lua require'nvim-treesitter.configs'.commands.TSEditQueryUserAfter['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_query_groups TSEditQuery lua require'nvim-treesitter.configs'.commands.TSEditQuery['run<bang>'](<f-args>)
Executing: command! -bar -nargs=0 TSConfigInfo lua require'nvim-treesitter.configs'.commands.TSConfigInfo['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_modules TSToggle lua require'nvim-treesitter.configs'.commands.TSToggle['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_modules TSDisable lua require'nvim-treesitter.configs'.commands.TSDisable['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_modules TSEnable lua require'nvim-treesitter.configs'.commands.TSEnable['run<bang>'](<f-args>)
Executing: command! -bar -nargs=1 -complete=custom,nvim_treesitter#available_modules TSBufToggle lua require'nvim-treesitter.configs'.commands.TSBufToggle['run<bang>'](<f-args>)
Executing: command! -bar -nargs=1 -complete=custom,nvim_treesitter#available_modules TSBufDisable lua require'nvim-treesitter.configs'.commands.TSBufDisable['run<bang>'](<f-args>)
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/plugin/nvim-treesitter.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/plugin/treesitter-context.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/plugin/treesitter-context.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/plugin/treesitter-context.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/plugin/Comment.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/plugin/Comment.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/plugin/Comment.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/plugin/dressing.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/plugin/dressing.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/plugin/dressing.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/plugin/cmp.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/plugin/cmp.lua"
Executing: doautocmd <nomodeline> User CmpReady
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/plugin/cmp.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/plugin/nvim-web-devicons.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/plugin/nvim-web-devicons.vim"
line 1: if exists('g:loaded_devicons') | finish | endif
line 1:  finish | endif
line 1:  endif
line 2: 
line 3: let s:save_cpo = &cpo
line 4: set cpo&vim
line 5: 
line 6: " TODO change so its easier to get
line 7: let g:nvim_web_devicons = 1
line 8: 
line 9: let &cpo = s:save_cpo
line 10: unlet s:save_cpo
line 11: 
line 12: let g:loaded_devicons = 1
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/plugin/nvim-web-devicons.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/plugin/plenary.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/plugin/plenary.vim"
line 1: 
line 2: " Create command for running busted
line 3: command! -nargs=1 -complete=file PlenaryBustedFile lua require('plenary.test_harness').test_file([[<args>]])
line 5: 
line 6: command! -nargs=+ -complete=file PlenaryBustedDirectory lua require('plenary.test_harness').test_directory_command([[<args>]])
line 8: 
line 9: nnoremap <Plug>PlenaryTestFile :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/plugin/plenary.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/plugin/telescope.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/plugin/telescope.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/plugin/telescope.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/plugin/render-markdown.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/plugin/render-markdown.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/plugin/render-markdown.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/plugin/lspconfig.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/plugin/lspconfig.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/plugin/lspconfig.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/plugin/rhubarb.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/plugin/rhubarb.vim"
line 1: " rhubarb.vim - fugitive.vim extension for GitHub
line 2: " Maintainer:   Tim Pope <http://tpo.pe/>
line 3: 
line 4: if exists("g:loaded_rhubarb") || v:version < 700 || &cp
line 5:   finish
line 6: endif
line 7: let g:loaded_rhubarb = 1
line 8: 
line 9: if !exists('g:dispatch_compilers')
line 10:   let g:dispatch_compilers = {}
line 11: endif
line 12: let g:dispatch_compilers['hub'] = 'git'
line 13: 
line 14: function! s:SetUpMessage(filename) abort
line 31: 
line 32: augroup rhubarb
line 33:   autocmd!
line 34:   if exists('+omnifunc')
line 35:     autocmd FileType gitcommit call s:SetUpMessage(expand('<afile>:p'))
line 36:   endif
line 37:   autocmd BufEnter * if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
line 41:   autocmd BufNewFile,BufRead *.git/{PULLREQ_EDIT,ISSUE_EDIT,RELEASE_EDIT}MSG if &ft ==# '' || &ft ==# 'conf' |   set ft=gitcommit | endif
line 45: augroup END
line 46: 
line 47: if !exists('g:fugitive_browse_handlers')
line 48:   let g:fugitive_browse_handlers = []
line 49: endif
line 50: 
line 51: if index(g:fugitive_browse_handlers, function('rhubarb#FugitiveUrl')) < 0
line 52:   call insert(g:fugitive_browse_handlers, function('rhubarb#FugitiveUrl'))
line 53: endif
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/plugin/rhubarb.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim"
line 1: " fugitive.vim - A Git wrapper so awesome, it should be illegal
line 2: " Maintainer:   Tim Pope <http://tpo.pe/>
line 3: " Version:      3.7
line 4: " GetLatestVimScripts: 2975 1 :AutoInstall: fugitive.vim
line 5: 
line 6: if exists('g:loaded_fugitive')
line 7:   finish
line 8: endif
line 9: let g:loaded_fugitive = 1
line 10: 
line 11: let s:bad_git_dir = '/$\|^fugitive:'
line 12: 
line 13: " FugitiveGitDir() returns the detected Git dir for the given buffer number,
line 14: " or the current buffer if no argument is passed.  This will be an empty
line 15: " string if no Git dir was found.  Use !empty(FugitiveGitDir()) to check if
line 16: " Fugitive is active in the current buffer.  Do not rely on this for direct
line 17: " filesystem access; use FugitiveFind('.git/whatever') instead.
line 18: function! FugitiveGitDir(...) abort
line 47: 
line 48: " FugitiveReal() takes a fugitive:// URL and returns the corresponding path in
line 49: " the work tree.  This may be useful to get a cleaner path for inclusion in
line 50: " the statusline, for example.  Note that the file and its parent directories
line 51: " are not guaranteed to exist.
line 52: "
line 53: " This is intended as an abstract API to be used on any "virtual" path.  For a
line 54: " buffer named foo://bar, check for a function named FooReal(), and if it
line 55: " exists, call FooReal("foo://bar").
line 56: function! FugitiveReal(...) abort
line 70: 
line 71: " FugitiveFind() takes a Fugitive object and returns the appropriate Vim
line 72: " buffer name.  You can use this to generate Fugitive URLs ("HEAD:README") or
line 73: " to get the absolute path to a file in the Git dir (".git/HEAD"), the common
line 74: " dir (".git/config"), or the work tree (":(top)Makefile").
line 75: "
line 76: " An optional second argument provides the Git dir, or the buffer number of a
line 77: " buffer with a Git dir.  The default is the current buffer.
line 78: function! FugitiveFind(...) abort
line 85: 
line 86: " FugitiveParse() takes a fugitive:// URL and returns a 2 element list
line 87: " containing an object name ("commit:file") and the Git dir.  It's effectively
line 88: " the inverse of FugitiveFind().
line 89: function! FugitiveParse(...) abort
line 100: 
line 101: " FugitiveGitVersion() queries the version of Git in use.  Pass up to 3
line 102: " arguments to return a Boolean of whether a certain minimum version is
line 103: " available (FugitiveGitVersion(2,3,4) checks for 2.3.4 or higher) or no
line 104: " arguments to get a raw string.
line 105: function! FugitiveGitVersion(...) abort
line 108: 
line 109: " FugitiveResult() returns an object encapsulating the result of the most
line 110: " recent :Git command.  Will be empty if no result is available.  During a
line 111: " User FugitiveChanged event, this is guaranteed to correspond to the :Git
line 112: " command that triggered the event, or be empty if :Git was not the trigger.
line 113: " Pass in the name of a temp buffer to get the result object for that command
line 114: " instead.  Contains the following keys:
line 115: "
line 116: " * "args": List of command arguments, starting with the subcommand.  Will be
line 117: "   empty for usages like :Git --help.
line 118: " * "git_dir": Git dir of the relevant repository.
line 119: " * "exit_status": The integer exit code of the process.
line 120: " * "flags": Flags passed directly to Git, like -c and --help.
line 121: " * "file": Path to file containing command output.  Not guaranteed to exist,
line 122: "   so verify with filereadable() before trying to access it.
line 123: function! FugitiveResult(...) abort
line 126: 
line 127: " FugitiveExecute() runs Git with a list of arguments and returns a dictionary
line 128: " with the following keys:
line 129: "
line 130: " * "exit_status": The integer exit code of the process.
line 131: " * "stdout": The stdout produced by the process, as a list of lines.
line 132: " * "stderr": The stdout produced by the process, as a list of lines.
line 133: "
line 134: " An optional second argument provides the Git dir, or the buffer number of a
line 135: " buffer with a Git dir.  The default is the current buffer.
line 136: "
line 137: " An optional final argument is a callback Funcref, for asynchronous
line 138: " execution.
line 139: function! FugitiveExecute(args, ...) abort
line 142: 
line 143: " FugitiveShellCommand() turns an array of arguments into a Git command string
line 144: " which can be executed with functions like system() and commands like :!.
line 145: " Integer arguments will be treated as buffer numbers, and the appropriate
line 146: " relative path inserted in their place.
line 147: "
line 148: " An optional second argument provides the Git dir, or the buffer number of a
line 149: " buffer with a Git dir.  The default is the current buffer.
line 150: function! FugitiveShellCommand(...) abort
line 153: 
line 154: " FugitiveConfig() get returns an opaque structure that can be passed to other
line 155: " FugitiveConfig functions in lieu of a Git directory.  This can be faster
line 156: " when performing multiple config queries.  Do not rely on the internal
line 157: " structure of the return value as it is not guaranteed.  If you want a full
line 158: " dictionary of every config value, use FugitiveConfigGetRegexp('.*').
line 159: "
line 160: " An optional argument provides the Git dir, or the buffer number of a
line 161: " buffer with a Git dir.  The default is the current buffer.  Pass a blank
line 162: " string to limit to the global config.
line 163: function! FugitiveConfig(...) abort
line 166: 
line 167: " FugitiveConfigGet() retrieves a Git configuration value.  An optional second
line 168: " argument can be either the object returned by FugitiveConfig(), or a Git
line 169: " dir or buffer number to be passed along to FugitiveConfig().
line 170: function! FugitiveConfigGet(name, ...) abort
line 173: 
line 174: " FugitiveConfigGetAll() is like FugitiveConfigGet() but returns a list of
line 175: " all values.
line 176: function! FugitiveConfigGetAll(name, ...) abort
line 179: 
line 180: " FugitiveConfigGetRegexp() retrieves a dictionary of all configuration values
line 181: " with a key matching the given pattern.  Like git config --get-regexp, but
line 182: " using a Vim regexp.  Second argument has same semantics as
line 183: " FugitiveConfigGet().
line 184: function! FugitiveConfigGetRegexp(pattern, ...) abort
line 187: 
line 188: " FugitiveRemoteUrl() retrieves the remote URL for the given remote name,
line 189: " defaulting to the current branch's remote or "origin" if no argument is
line 190: " given.  Similar to `git remote get-url`, but also attempts to resolve HTTP
line 191: " redirects and SSH host aliases.
line 192: "
line 193: " An optional second argument provides the Git dir, or the buffer number of a
line 194: " buffer with a Git dir.  The default is the current buffer.
line 195: function! FugitiveRemoteUrl(...) abort
line 198: 
line 199: " FugitiveRemote() returns a data structure parsed from the remote URL.
line 200: " For example, for remote URL "https://me@example.com:1234/repo.git", the
line 201: " returned dictionary will contain the following:
line 202: "
line 203: " * "scheme": "https"
line 204: " * "authority": "user@example.com:1234"
line 205: " * "path": "/repo.git" (for SSH URLs this may be a relative path)
line 206: " * "pathname": "/repo.git" (always coerced to absolute path)
line 207: " * "host": "example.com:1234"
line 208: " * "hostname": "example.com"
line 209: " * "port": "1234"
line 210: " * "user": "me"
line 211: " * "path": "/repo.git"
line 212: " * "url": "https://me@example.com:1234/repo.git"
line 213: function! FugitiveRemote(...) abort
line 216: 
line 217: " FugitiveDidChange() triggers a FugitiveChanged event and reloads the summary
line 218: " buffer for the current or given buffer number's repository.  You can also
line 219: " give the result of a FugitiveExecute() and that context will be made
line 220: " available inside the FugitiveChanged() event.
line 221: "
line 222: " Passing the special argument 0 (the number zero) softly expires summary
line 223: " buffers for all repositories.  This can be used after a call to system()
line 224: " with unclear implications.
line 225: function! FugitiveDidChange(...) abort
line 228: 
line 229: " FugitiveHead() retrieves the name of the current branch. If the current HEAD
line 230: " is detached, FugitiveHead() will return the empty string, unless the
line 231: " optional argument is given, in which case the hash of the current commit
line 232: " will be truncated to the given number of characters.
line 233: "
line 234: " An optional second argument provides the Git dir, or the buffer number of a
line 235: " buffer with a Git dir.  The default is the current buffer.
line 236: function! FugitiveHead(...) abort
line 252: 
line 253: function! FugitivePath(...) abort
line 264: 
line 265: function! FugitiveStatusline(...) abort
line 271: 
line 272: let s:resolved_git_dirs = {}
line 273: function! FugitiveActualDir(...) abort
line 283: 
line 284: let s:commondirs = {}
line 285: function! FugitiveCommonDir(...) abort
line 307: 
line 308: function! FugitiveWorkTree(...) abort
line 316: 
line 317: function! FugitiveIsGitDir(...) abort
line 326: 
line 327: function! s:ReadFile(path, line_count) abort
line 337: 
line 338: let s:worktree_for_dir = {}
line 339: let s:dir_for_worktree = {}
line 340: function! s:Tree(path) abort
line 387: 
line 388: function! s:CeilingDirectories() abort
line 404: 
line 405: function! s:ResolveGitDir(git_dir) abort
line 422: 
line 423: function! FugitiveExtractGitDir(path) abort
line 471: 
line 472: function! FugitiveDetect(...) abort
line 484: 
line 485: function! FugitiveGitPath(path) abort
line 488: 
line 489: if exists('+shellslash')
line 490: 
line 491:   function! s:Slash(path) abort
line 494: 
line 495:   function! s:VimSlash(path) abort
line 498: 
line 499:   function FugitiveVimPath(path) abort
line 502: 
line 503: else
line 504: 
line 505:   function! s:Slash(path) abort
line 508: 
line 509:   function! s:VimSlash(path) abort
line 512: 
line 513:   if has('win32unix') && filereadable('/git-bash.exe')
line 514:     function! FugitiveVimPath(path) abort
line 517:   else
line 518:     function! FugitiveVimPath(path) abort
line 521:   endif
line 522: 
line 523: endif
line 524: 
line 525: function! s:ProjectionistDetect() abort
line 542: 
line 543: let s:addr_other = has('patch-8.1.560') || has('nvim-0.5.0') ? '-addr=other' : ''
line 544: let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''
line 545: let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''
line 546: 
line 547: if exists(':G') != 2
line 548:   command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 549: endif
line 550: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 551: 
line 552: if exists(':Gstatus') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 553:   exe 'command! -bang -bar     -range=-1' s:addr_other 'Gstatus exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gstatus is deprecated in favor of :Git (with no arguments)"|echohl NONE'
line 555: endif
line 556: 
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 564: unlet s:cmd
line 565: 
line 566: exe "command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Gcd  exe fugitive#Cd(<q-args>, 0)"
line 566: command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Gcd  exe fugitive#Cd(<q-args>, 0)
line 567: exe "command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Glcd exe fugitive#Cd(<q-args>, 1)"
line 567: command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Glcd exe fugitive#Cd(<q-args>, 1)
line 568: 
line 569: exe 'command! -bang -nargs=? -range=-1' s:addr_wins '-complete=customlist,fugitive#GrepComplete Ggrep  exe fugitive#GrepCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 569: command! -bang -nargs=? -range=-1 -addr=windows -complete=customlist,fugitive#GrepComplete Ggrep  exe fugitive#GrepCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 570: exe 'command! -bang -nargs=? -range=-1' s:addr_wins '-complete=customlist,fugitive#GrepComplete Glgrep exe fugitive#GrepCommand(0, <count> > 0 ? <count> : 0, +"<range>", <bang>0, "<mods>", <q-args>)'
line 570: command! -bang -nargs=? -range=-1 -addr=windows -complete=customlist,fugitive#GrepComplete Glgrep exe fugitive#GrepCommand(0, <count> > 0 ? <count> : 0, +"<range>", <bang>0, "<mods>", <q-args>)
line 571: 
line 572: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gclog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")'
line 572: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gclog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")
line 573: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GcLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")'
line 573: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GcLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")
line 574: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gllog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")'
line 574: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gllog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")
line 575: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GlLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")'
line 575: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GlLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")
line 576: 
line 577: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Ge       exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)'
line 577: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Ge       exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)
line 578: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gedit    exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)'
line 578: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gedit    exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)
line 579: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gpedit   exe fugitive#Open("pedit", <bang>0, "<mods>", <q-args>)'
line 579: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gpedit   exe fugitive#Open("pedit", <bang>0, "<mods>", <q-args>)
line 580: exe 'command! -bar -bang -nargs=* -range=-1' s:addr_other '-complete=customlist,fugitive#EditComplete   Gsplit   exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "split" : "edit"), <bang>0, "<mods>", <q-args>)'
line 580: command! -bar -bang -nargs=* -range=-1 -addr=other -complete=customlist,fugitive#EditComplete   Gsplit   exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "split" : "edit"), <bang>0, "<mods>", <q-args>)
line 581: exe 'command! -bar -bang -nargs=* -range=-1' s:addr_other '-complete=customlist,fugitive#EditComplete   Gvsplit  exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "vsplit" : "edit!"), <bang>0, "<mods>", <q-args>)'
line 581: command! -bar -bang -nargs=* -range=-1 -addr=other -complete=customlist,fugitive#EditComplete   Gvsplit  exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "vsplit" : "edit!"), <bang>0, "<mods>", <q-args>)
line 582: exe 'command! -bar -bang -nargs=* -range=-1' s:addr_tabs  '-complete=customlist,fugitive#EditComplete   Gtabedit exe fugitive#Open((<count> >= 0 ? <count> : "")."tabedit", <bang>0, "<mods>", <q-args>)'
line 582: command! -bar -bang -nargs=* -range=-1 -addr=tabs -complete=customlist,fugitive#EditComplete   Gtabedit exe fugitive#Open((<count> >= 0 ? <count> : "")."tabedit", <bang>0, "<mods>", <q-args>)
line 583: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gdrop    exe fugitive#DropCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 583: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gdrop    exe fugitive#DropCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 584: 
line 585: if exists(':Gr') != 2
line 586:   exe 'command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gr     exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 586: command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gr     exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 587: endif
line 588: exe 'command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gread    exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 588: command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gread    exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 589: 
line 590: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gdiffsplit  exe fugitive#Diffsplit(1, <bang>0, "<mods>", <q-args>)'
line 590: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gdiffsplit  exe fugitive#Diffsplit(1, <bang>0, "<mods>", <q-args>)
line 591: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Ghdiffsplit exe fugitive#Diffsplit(0, <bang>0, "<mods>", <q-args>)'
line 591: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Ghdiffsplit exe fugitive#Diffsplit(0, <bang>0, "<mods>", <q-args>)
line 592: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gvdiffsplit exe fugitive#Diffsplit(0, <bang>0, "vertical <mods>", <q-args>)'
line 592: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gvdiffsplit exe fugitive#Diffsplit(0, <bang>0, "vertical <mods>", <q-args>)
line 593: 
line 594: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gw     exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 594: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gw     exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 595: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwrite exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 595: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwrite exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 596: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwq    exe fugitive#WqCommand(   <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 596: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwq    exe fugitive#WqCommand(   <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 597: 
line 598: exe 'command! -bar -bang -nargs=0 GRemove exe fugitive#RemoveCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 598: command! -bar -bang -nargs=0 GRemove exe fugitive#RemoveCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 599: exe 'command! -bar -bang -nargs=0 GUnlink exe fugitive#UnlinkCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 599: command! -bar -bang -nargs=0 GUnlink exe fugitive#UnlinkCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 600: exe 'command! -bar -bang -nargs=0 GDelete exe fugitive#DeleteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 600: command! -bar -bang -nargs=0 GDelete exe fugitive#DeleteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 601: exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#CompleteObject GMove   exe fugitive#MoveCommand(  <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 601: command! -bar -bang -nargs=1 -complete=customlist,fugitive#CompleteObject GMove   exe fugitive#MoveCommand(  <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 602: exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#RenameComplete GRename exe fugitive#RenameCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 602: command! -bar -bang -nargs=1 -complete=customlist,fugitive#RenameComplete GRename exe fugitive#RenameCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 603: if exists(':Gremove') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 604:   exe 'command! -bar -bang -nargs=0 Gremove exe fugitive#RemoveCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gremove is deprecated in favor of :GRemove"|echohl NONE'
line 606: elseif exists(':Gremove') != 2 && !exists('g:fugitive_legacy_commands')
line 607:   exe 'command! -bar -bang -nargs=0 Gremove echoerr ":Gremove has been removed in favor of :GRemove"'
line 607: command! -bar -bang -nargs=0 Gremove echoerr ":Gremove has been removed in favor of :GRemove"
line 608: endif
line 609: if exists(':Gdelete') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 610:   exe 'command! -bar -bang -nargs=0 Gdelete exe fugitive#DeleteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gdelete is deprecated in favor of :GDelete"|echohl NONE'
line 612: elseif exists(':Gdelete') != 2 && !exists('g:fugitive_legacy_commands')
line 613:   exe 'command! -bar -bang -nargs=0 Gdelete echoerr ":Gdelete has been removed in favor of :GDelete"'
line 613: command! -bar -bang -nargs=0 Gdelete echoerr ":Gdelete has been removed in favor of :GDelete"
line 614: endif
line 615: if exists(':Gmove') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 616:   exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#CompleteObject Gmove   exe fugitive#MoveCommand(  <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gmove is deprecated in favor of :GMove"|echohl NONE'
line 618: elseif exists(':Gmove') != 2 && !exists('g:fugitive_legacy_commands')
line 619:   exe 'command! -bar -bang -nargs=? -complete=customlist,fugitive#CompleteObject Gmove' 'echoerr ":Gmove has been removed in favor of :GMove"'
line 619: command! -bar -bang -nargs=? -complete=customlist,fugitive#CompleteObject Gmove echoerr ":Gmove has been removed in favor of :GMove"
line 621: endif
line 622: if exists(':Grename') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 623:   exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#RenameComplete Grename exe fugitive#RenameCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Grename is deprecated in favor of :GRename"|echohl NONE'
line 625: elseif exists(':Grename') != 2 && !exists('g:fugitive_legacy_commands')
line 626:   exe 'command! -bar -bang -nargs=? -complete=customlist,fugitive#RenameComplete Grename' 'echoerr ":Grename has been removed in favor of :GRename"'
line 626: command! -bar -bang -nargs=? -complete=customlist,fugitive#RenameComplete Grename echoerr ":Grename has been removed in favor of :GRename"
line 628: endif
line 629: 
line 630: exe 'command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject GBrowse exe fugitive#BrowseCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 630: command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject GBrowse exe fugitive#BrowseCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 631: if exists(':Gbrowse') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 632:   exe 'command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject Gbrowse exe fugitive#BrowseCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|if <bang>1|redraw!|endif|echohl WarningMSG|echomsg ":Gbrowse is deprecated in favor of :GBrowse"|echohl NONE'
line 634: elseif exists(':Gbrowse') != 2 && !exists('g:fugitive_legacy_commands')
line 635:   exe 'command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject Gbrowse' 'echoerr ":Gbrowse has been removed in favor of :GBrowse"'
line 635: command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject Gbrowse echoerr ":Gbrowse has been removed in favor of :GBrowse"
line 637: endif
line 638: 
line 639: if v:version < 704
line 640:   finish
line 641: endif
line 642: 
line 643: let g:io_fugitive = { 'simplify': function('fugitive#simplify'), 'resolve': function('fugitive#resolve'), 'getftime': function('fugitive#getftime'), 'getfsize': function('fugitive#getfsize'), 'getftype': function('fugitive#getftype'), 'filereadable': function('fugitive#filereadable'), 'filewritable': function('fugitive#filewritable'), 'isdirectory': function('fugitive#isdirectory'), 'getfperm': function('fugitive#getfperm'), 'setfperm': function('fugitive#setfperm'), 'readfile': function('fugitive#readfile'), 'writefile': function('fugitive#writefile'), 'glob': function('fugitive#glob'), 'delete': function('fugitive#delete'), 'Real': function('FugitiveReal')}
line 659: 
line 660: augroup fugitive
line 661:   autocmd!
line 662: 
line 663:   autocmd BufNewFile,BufReadPost * if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
line 667:   autocmd FileType           netrw if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
line 671:   autocmd BufFilePost            *  unlet! b:git_dir
line 672: 
line 673:   autocmd FileType git call fugitive#MapCfile()
line 675:   autocmd FileType gitcommit call fugitive#MapCfile('fugitive#MessageCfile()')
line 677:   autocmd FileType git,gitcommit if &foldtext ==# 'foldtext()' |    setlocal foldtext=fugitive#Foldtext() | endif
line 681:   autocmd FileType fugitive call fugitive#MapCfile('fugitive#PorcelainCfile()')
line 683:   autocmd FileType gitrebase let &l:include = '^\%(pick\|squash\|edit\|reword\|fixup\|drop\|[pserfd]\)\>' | if &l:includeexpr !~# 'Fugitive' |   let &l:includeexpr = 'v:fname =~# ''^\x\{4,\}$'' && len(FugitiveGitDir()) ? FugitiveFind(v:fname) : ' .     (len(&l:includeexpr) ? &l:includeexpr : 'v:fname') | endif | let b:undo_ftplugin = get(b:, 'undo_ftplugin', 'exe') . '|setl inex= inc='
line 690: 
line 691:   autocmd BufReadCmd index{,.lock} nested if FugitiveIsGitDir(expand('<amatch>:p:h')) |   let b:git_dir = s:Slash(expand('<amatch>:p:h')) |   exe fugitive#BufReadStatus(v:cmdbang) |   echohl WarningMSG |   echo "fugitive: Direct editing of .git/" . expand('%:t') . " is deprecated" |   echohl NONE | elseif filereadable(expand('<amatch>')) |   silent doautocmd BufReadPre |   keepalt noautocmd read <amatch> |   silent 1delete_ |   silent doautocmd BufReadPost | else |   silent doautocmd BufNewFile | endif
line 706: 
line 707:   autocmd BufReadCmd   fugitive://*          nested exe fugitive#BufReadCmd() | if &path =~# '^\.\%(,\|$\)' |   let &l:path = substitute(&path, '^\.,\=', '', '') | endif
line 711:   autocmd BufWriteCmd  fugitive://*          nested exe fugitive#BufWriteCmd()
line 712:   autocmd FileReadCmd  fugitive://*          nested exe fugitive#FileReadCmd()
line 713:   autocmd FileWriteCmd fugitive://*          nested exe fugitive#FileWriteCmd()
line 714:   if exists('##SourceCmd')
line 715:     autocmd SourceCmd     fugitive://*       nested exe fugitive#SourceCmd()
line 716:   endif
line 717: 
line 718:   autocmd User Flags call Hoist('buffer', function('FugitiveStatusline'))
line 719: 
line 720:   autocmd User ProjectionistDetect call s:ProjectionistDetect()
line 721: augroup END
line 722: 
line 723: nmap <script><silent> <Plug>fugitive:y<C-G> :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
line 724: nmap <script> <Plug>fugitive: <Nop>
line 725: 
line 726: if get(g:, 'fugitive_no_maps')
line 727:   finish
line 728: endif
line 729: 
line 730: function! s:Map(mode, lhs, rhs, flags) abort
line 752: 
line 753: call s:Map('c', '<C-R><C-G>', 'fnameescape(fugitive#Object(@%))', '<expr>')
calling <SNR>35_Map('c', '<C-R><C-G>', 'fnameescape(fugitive#Object(@%))', '<expr>')

line 1:   let flags = a:flags . (a:rhs =~# '<Plug>' ? '' : '<script>') . '<nowait>'
line 2:   let head = a:lhs
line 3:   let tail = ''
line 4:   let keys = get(g:, a:mode.'remap', {})
line 5:   if len(keys) && type(keys) == type({})
line 6:     while !empty(head)
line 7:       if has_key(keys, head)
line 8:         let head = keys[head]
line 9:         if empty(head)
line 10:           return
line 11:         endif
line 12:         break
line 13:       endif
line 14:       let tail = matchstr(head, '<[^<>]*>$\|.$') . tail
line 15:       let head = substitute(head, '<[^<>]*>$\|.$', '', '')
line 16:     endwhile
line 17:   endif
line 18:   if empty(mapcheck(head.tail, a:mode))
line 19:     exe a:mode.'map' flags head.tail a:rhs
line 19: cmap <expr><script><nowait> <C-R><C-G> fnameescape(fugitive#Object(@%))
line 20:   endif
<SNR>35_Map returning #0

continuing in /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim

line 754: call s:Map('n', 'y<C-G>', ':<C-U>call setreg(v:register, fugitive#Object(@%))<CR>', '<silent>')
calling <SNR>35_Map('n', 'y<C-G>', ':<C-U>call setreg(v:register, fugitive#Object(@%))<CR>', '<silent>')

line 1:   let flags = a:flags . (a:rhs =~# '<Plug>' ? '' : '<script>') . '<nowait>'
line 2:   let head = a:lhs
line 3:   let tail = ''
line 4:   let keys = get(g:, a:mode.'remap', {})
line 5:   if len(keys) && type(keys) == type({})
line 6:     while !empty(head)
line 7:       if has_key(keys, head)
line 8:         let head = keys[head]
line 9:         if empty(head)
line 10:           return
line 11:         endif
line 12:         break
line 13:       endif
line 14:       let tail = matchstr(head, '<[^<>]*>$\|.$') . tail
line 15:       let head = substitute(head, '<[^<>]*>$\|.$', '', '')
line 16:     endwhile
line 17:   endif
line 18:   if empty(mapcheck(head.tail, a:mode))
line 19:     exe a:mode.'map' flags head.tail a:rhs
line 19: nmap <silent><script><nowait> y<C-G> :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
line 20:   endif
<SNR>35_Map returning #0

continuing in /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim

finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftdetect/fugitive.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftdetect/fugitive.vim"
line 1: autocmd BufReadPost *.fugitiveblame setfiletype fugitiveblame
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftdetect/fugitive.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/plugin/illuminate.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/plugin/illuminate.vim"
line 1: " illuminate.vim - Vim plugin for selectively illuminating other uses of current word
line 2: " Maintainer:^IAdam P. Regasz-Rethy (RRethy) <rethy.spud@gmail.com>
line 3: " Version: 2.0
line 4: 
line 5: if exists('g:loaded_illuminate')
line 6:   finish
line 7: endif
line 8: 
line 9: let g:loaded_illuminate = 1
line 10: 
line 11: if has('nvim-0.7.2') && get(g:, 'Illuminate_useDeprecated', 0) != 1
line 12: lua << EOF
line 46: 
line 47: lua require('illuminate').set_highlight_defaults()
Executing:     hi def IlluminatedWordText guifg=none guibg=none gui=underline
Executing:     hi def IlluminatedWordRead guifg=none guibg=none gui=underline
Executing:     hi def IlluminatedWordWrite guifg=none guibg=none gui=underline
Executing:     
line 48: augroup vim_illuminate_autocmds
line 49:     autocmd!
line 50:     autocmd ColorScheme * lua require('illuminate').set_highlight_defaults()
line 51: augroup END
line 52: 
line 53: finish
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/plugin/illuminate.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vimtex/plugin/vimtex.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vimtex/plugin/vimtex.vim"
line 1: " VimTeX - LaTeX plugin for Vim
line 2: "
line 3: " Maintainer: Karl Yngve Lervåg
line 4: " Email:      karl.yngve@gmail.com
line 5: "
line 6: 
line 7: if !get(g:, 'vimtex_enabled', 1) | finish | endif
line 7:  finish | endif
line 7:  endif
line 8: if exists('g:loaded_vimtex') | finish | endif
line 8:  finish | endif
line 8:  endif
line 9: let g:loaded_vimtex = 1
line 10: 
line 11: 
line 12: command! -nargs=* VimtexInverseSearch call call('vimtex#view#inverse_search_cmd', s:parse_args(<q-args>))
line 14: 
line 15: 
line 16: function! s:parse_args(args) abort
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vimtex/plugin/vimtex.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/cls.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/cls.vim"
line 1: " VimTeX - LaTeX plugin for Vim
line 2: "
line 3: " Maintainer: Karl Yngve Lervåg
line 4: " Email:      karl.yngve@gmail.com
line 5: "
line 6: 
line 7: if !get(g:, 'vimtex_enabled', 1) | finish | endif
line 7:  finish | endif
line 7:  endif
line 8: 
line 9: autocmd BufRead,BufNewFile *.cls set filetype=tex
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/cls.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tex.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tex.vim"
line 1: " VimTeX - LaTeX plugin for Vim
line 2: "
line 3: " Maintainer: Karl Yngve Lervåg
line 4: " Email:      karl.yngve@gmail.com
line 5: "
line 6: 
line 7: if !get(g:, 'vimtex_enabled', 1) || get(g:, 'tex_flavor', 'latex') !=# 'latex'
line 9:   finish
line 10: endif
line 11: 
line 12: " For some reason, it seems the best way to ensure filetype "tex" is to just
line 13: " set the g:tex_flavor option. Overriding the autocmds or similar seems to make
line 14: " startup slower, for some unknown reason.
line 15: let g:tex_flavor = 'latex'
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tex.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tikz.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tikz.vim"
line 1: " VimTeX - LaTeX plugin for Vim
line 2: "
line 3: " Maintainer: Karl Yngve Lervåg
line 4: " Email:      karl.yngve@gmail.com
line 5: "
line 6: 
line 7: if !get(g:, 'vimtex_enabled', 1) | finish | endif
line 7:  finish | endif
line 7:  endif
line 8: 
line 9: autocmd BufRead,BufNewFile *.tikz set filetype=tex
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tikz.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/playground/plugin/nvim-treesitter-playground.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/playground/plugin/nvim-treesitter-playground.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/playground/plugin/nvim-treesitter-playground.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/plugin/todo.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/plugin/todo.vim"
line 1: command! -nargs=* TodoQuickFix lua require("todo-comments.search").setqflist(<q-args>)
line 2: command! -nargs=* TodoLocList lua require("todo-comments.search").setloclist(<q-args>)
line 3: command! -nargs=* TodoTelescope Telescope todo-comments todo <args>
line 4: command! -nargs=* TodoFzfLua lua require("todo-comments.fzf").todo() <args>
line 5: command! -nargs=* TodoTrouble Trouble todo <args>
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/plugin/todo.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/plugin/dashboard.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/plugin/dashboard.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/plugin/dashboard.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/plugin/no-neck-pain.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/plugin/no-neck-pain.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/plugin/no-neck-pain.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/plugin/nvim_jdtls.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/plugin/nvim_jdtls.vim"
line 1: if exists('g:nvim_jdtls')
line 2:   finish
line 3: endif
line 4: let g:nvim_jdtls = 1
line 5: 
line 6: au BufReadCmd jdt://* lua require('jdtls').open_classfile(vim.fn.expand('<amatch>'))
line 7: au BufReadCmd *.class lua require("jdtls").open_classfile(vim.fn.expand("<amatch>"))
line 8: command! JdtWipeDataAndRestart lua require('jdtls.setup').wipe_data_and_restart()
line 9: command! JdtShowLogs lua require('jdtls.setup').show_logs()
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/plugin/nvim_jdtls.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/editorconfig.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/editorconfig.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/editorconfig.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/gzip.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/gzip.vim"
line 1: " Vim plugin for editing compressed files.
line 2: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 3: " Last Change:^I2023 Aug 10
line 4: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 5: 
line 6: " Exit quickly when:
line 7: " - this plugin was already loaded
line 8: " - when 'compatible' is set
line 9: " - some autocommands are already taking care of compressed files
line 10: if exists("loaded_gzip") || &cp || exists("#BufReadPre#*.gz")
line 11:   finish
line 12: endif
line 13: let loaded_gzip = 1
line 14: 
line 15: augroup gzip
line 16:   " Remove all gzip autocommands
line 17:   au!
line 18: 
line 19:   " Enable editing of gzipped files.
line 20:   " The functions are defined in autoload/gzip.vim.
line 21:   "
line 22:   " Set binary mode before reading the file.
line 23:   " Use "gzip -d", gunzip isn't always available.
line 24:   autocmd BufReadPre,FileReadPre^I*.gz,*.bz2,*.Z,*.lzma,*.xz,*.lz,*.zst,*.br,*.lzo setlocal bin
line 25:   autocmd BufReadPost,FileReadPost^I*.gz  call gzip#read("gzip -dn")
line 26:   autocmd BufReadPost,FileReadPost^I*.bz2 call gzip#read("bzip2 -d")
line 27:   autocmd BufReadPost,FileReadPost^I*.Z   call gzip#read("uncompress")
line 28:   autocmd BufReadPost,FileReadPost^I*.lzma call gzip#read("lzma -d")
line 29:   autocmd BufReadPost,FileReadPost^I*.xz  call gzip#read("xz -d")
line 30:   autocmd BufReadPost,FileReadPost^I*.lz  call gzip#read("lzip -d")
line 31:   autocmd BufReadPost,FileReadPost^I*.zst call gzip#read("zstd -d --rm")
line 32:   autocmd BufReadPost,FileReadPost^I*.br call gzip#read("brotli -d --rm")
line 33:   autocmd BufReadPost,FileReadPost^I*.lzo call gzip#read("lzop -d -U")
line 34:   autocmd BufWritePost,FileWritePost^I*.gz  call gzip#write("gzip")
line 35:   autocmd BufWritePost,FileWritePost^I*.bz2 call gzip#write("bzip2")
line 36:   autocmd BufWritePost,FileWritePost^I*.Z   call gzip#write("compress -f")
line 37:   autocmd BufWritePost,FileWritePost^I*.lzma call gzip#write("lzma -z")
line 38:   autocmd BufWritePost,FileWritePost^I*.xz  call gzip#write("xz -z")
line 39:   autocmd BufWritePost,FileWritePost^I*.lz  call gzip#write("lzip")
line 40:   autocmd BufWritePost,FileWritePost^I*.zst  call gzip#write("zstd --rm")
line 41:   autocmd BufWritePost,FileWritePost^I*.br  call gzip#write("brotli --rm")
line 42:   autocmd BufWritePost,FileWritePost^I*.lzo  call gzip#write("lzop -U")
line 43:   autocmd FileAppendPre^I^I^I*.gz  call gzip#appre("gzip -dn")
line 44:   autocmd FileAppendPre^I^I^I*.bz2 call gzip#appre("bzip2 -d")
line 45:   autocmd FileAppendPre^I^I^I*.Z   call gzip#appre("uncompress")
line 46:   autocmd FileAppendPre^I^I^I*.lzma call gzip#appre("lzma -d")
line 47:   autocmd FileAppendPre^I^I^I*.xz   call gzip#appre("xz -d")
line 48:   autocmd FileAppendPre^I^I^I*.lz   call gzip#appre("lzip -d")
line 49:   autocmd FileAppendPre^I^I^I*.zst call gzip#appre("zstd -d --rm")
line 50:   autocmd FileAppendPre^I^I^I*.br call gzip#appre("brotli -d --rm")
line 51:   autocmd FileAppendPre^I^I^I*.lzo call gzip#appre("lzop -d -U")
line 52:   autocmd FileAppendPost^I^I*.gz  call gzip#write("gzip")
line 53:   autocmd FileAppendPost^I^I*.bz2 call gzip#write("bzip2")
line 54:   autocmd FileAppendPost^I^I*.Z   call gzip#write("compress -f")
line 55:   autocmd FileAppendPost^I^I*.lzma call gzip#write("lzma -z")
line 56:   autocmd FileAppendPost^I^I*.xz call gzip#write("xz -z")
line 57:   autocmd FileAppendPost^I^I*.lz call gzip#write("lzip")
line 58:   autocmd FileAppendPost^I^I*.zst call gzip#write("zstd --rm")
line 59:   autocmd FileAppendPost^I^I*.br call gzip#write("brotli --rm")
line 60:   autocmd FileAppendPost^I^I*.lzo call gzip#write("lzop -U")
line 61: augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/gzip.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/man.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/man.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/man.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/matchit.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/matchit.vim"
line 1: " Nvim: load the matchit plugin by default.
line 2: if !exists("g:loaded_matchit") && stridx(&packpath, $VIMRUNTIME) >= 0
line 3:   packadd matchit
Searching for "pack/*/start/matchit" in "/opt/neovim/out/share/nvim/runtime"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/*/start/matchit"
not found in 'packpath': "pack/*/start/matchit"
Searching for "pack/*/opt/matchit" in "/opt/neovim/out/share/nvim/runtime"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/*/opt/matchit"
line 3: sourcing "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim"
line 1: "  matchit.vim: (global plugin) Extended "%" matching
line 2: "  Maintainer:  Christian Brabandt
line 3: "  Version:     1.20
line 4: "  Last Change: 2024 May 20
line 5: "  Repository:  https://github.com/chrisbra/matchit
line 6: "  Previous URL:http://www.vim.org/script.php?script_id=39
line 7: "  Previous Maintainer:  Benji Fisher PhD   <benji@member.AMS.org>
line 8: 
line 9: " Documentation:
line 10: "  The documentation is in a separate file: ../doc/matchit.txt
line 11: 
line 12: " Credits:
line 13: "  Vim editor by Bram Moolenaar (Thanks, Bram!)
line 14: "  Original script and design by Raul Segura Acevedo
line 15: "  Support for comments by Douglas Potts
line 16: "  Support for back references and other improvements by Benji Fisher
line 17: "  Support for many languages by Johannes Zellner
line 18: "  Suggestions for improvement, bug reports, and support for additional
line 19: "  languages by Jordi-Albert Batalla, Neil Bird, Servatius Brandt, Mark
line 20: "  Collett, Stephen Wall, Dany St-Amant, Yuheng Xie, and Johannes Zellner.
line 21: 
line 22: " Debugging:
line 23: "  If you'd like to try the built-in debugging commands...
line 24: "   :MatchDebug      to activate debugging for the current buffer
line 25: "  This saves the values of several key script variables as buffer-local
line 26: "  variables.  See the MatchDebug() function, below, for details.
line 27: 
line 28: " TODO:  I should think about multi-line patterns for b:match_words.
line 29: "   This would require an option:  how many lines to scan (default 1).
line 30: "   This would be useful for Python, maybe also for *ML.
line 31: " TODO:  Maybe I should add a menu so that people will actually use some of
line 32: "   the features that I have implemented.
line 33: " TODO:  Eliminate the MultiMatch function.  Add yet another argument to
line 34: "   Match_wrapper() instead.
line 35: " TODO:  Allow :let b:match_words = '\(\(foo\)\(bar\)\):\3\2:end\1'
line 36: " TODO:  Make backrefs safer by using '\V' (very no-magic).
line 37: " TODO:  Add a level of indirection, so that custom % scripts can use my
line 38: "   work but extend it.
line 39: 
line 40: " Allow user to prevent loading and prevent duplicate loading.
line 41: if exists("g:loaded_matchit") || &cp
line 42:   finish
line 43: endif
line 44: let g:loaded_matchit = 1
line 45: 
line 46: let s:save_cpo = &cpo
line 47: set cpo&vim
line 48: 
line 49: fun MatchEnable()
line 89: 
line 90: fun MatchDisable()
line 108: 
line 109: " Call this function to turn on debugging information.  Every time the main
line 110: " script is run, buffer variables will be saved.  These can be used directly
line 111: " or viewed using the menu items below.
line 112: if !exists(":MatchDebug")
line 113:   command! -nargs=0 MatchDebug call matchit#Match_debug()
line 114: endif
line 115: if !exists(":MatchDisable")
line 116:   command! -nargs=0 MatchDisable :call MatchDisable()
line 117: endif
line 118: if !exists(":MatchEnable")
line 119:   command! -nargs=0 MatchEnable :call MatchEnable()
line 120: endif
line 121: 
line 122: call MatchEnable()
calling MatchEnable()

line 1:   nnoremap <silent> <Plug>(MatchitNormalForward)     :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
line 2:   nnoremap <silent> <Plug>(MatchitNormalBackward)    :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
line 3:   xnoremap <silent> <Plug>(MatchitVisualForward)     :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") \| exe ":normal! m'" \| endif<cr>gv``
line 5:   xnoremap <silent> <Plug>(MatchitVisualBackward)    :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
line 6:   onoremap <silent> <Plug>(MatchitOperationForward)  :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
line 7:   onoremap <silent> <Plug>(MatchitOperationBackward) :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
line 8: 
line 9:   " Analogues of [{ and ]} using matching patterns:
line 10:   nnoremap <silent> <Plug>(MatchitNormalMultiBackward)    :<C-U>call matchit#MultiMatch("bW", "n")<CR>
line 11:   nnoremap <silent> <Plug>(MatchitNormalMultiForward)     :<C-U>call matchit#MultiMatch("W",  "n")<CR>
line 12:   xnoremap <silent> <Plug>(MatchitVisualMultiBackward)    :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
line 13:   xnoremap <silent> <Plug>(MatchitVisualMultiForward)     :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
line 14:   onoremap <silent> <Plug>(MatchitOperationMultiBackward) :<C-U>call matchit#MultiMatch("bW", "o")<CR>
line 15:   onoremap <silent> <Plug>(MatchitOperationMultiForward)  :<C-U>call matchit#MultiMatch("W",  "o")<CR>
line 16: 
line 17:   " text object:
line 18:   xmap <silent> <Plug>(MatchitVisualTextObject) <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
line 19: 
line 20:   if !exists("g:no_plugin_maps")
line 21:     nmap <silent> %  <Plug>(MatchitNormalForward)
line 22:     nmap <silent> g% <Plug>(MatchitNormalBackward)
line 23:     xmap <silent> %  <Plug>(MatchitVisualForward)
line 24:     xmap <silent> g% <Plug>(MatchitVisualBackward)
line 25:     omap <silent> %  <Plug>(MatchitOperationForward)
line 26:     omap <silent> g% <Plug>(MatchitOperationBackward)
line 27: 
line 28:     " Analogues of [{ and ]} using matching patterns:
line 29:     nmap <silent> [% <Plug>(MatchitNormalMultiBackward)
line 30:     nmap <silent> ]% <Plug>(MatchitNormalMultiForward)
line 31:     xmap <silent> [% <Plug>(MatchitVisualMultiBackward)
line 32:     xmap <silent> ]% <Plug>(MatchitVisualMultiForward)
line 33:     omap <silent> [% <Plug>(MatchitOperationMultiBackward)
line 34:     omap <silent> ]% <Plug>(MatchitOperationMultiForward)
line 35: 
line 36:     " Text object
line 37:     xmap a% <Plug>(MatchitVisualTextObject)
line 38:   endif
MatchEnable returning #0

continuing in /opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim

line 123: 
line 124: let &cpo = s:save_cpo
line 125: unlet s:save_cpo
line 126: 
line 127: " vim:sts=2:sw=2:et:
finished sourcing /opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim
continuing in /opt/neovim/out/share/nvim/runtime/plugin/matchit.vim
line 3: augroup filetypedetect
line 3: augroup END
line 4: endif
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/matchit.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/matchparen.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/matchparen.vim"
line 1: " Vim plugin for showing matching parens
line 2: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 3: " Last Change:^I2024 May 18
line 4: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 5: 
line 6: " Exit quickly when:
line 7: " - this plugin was already loaded (or disabled)
line 8: " - when 'compatible' is set
line 9: if exists("g:loaded_matchparen") || &cp
line 10:   finish
line 11: endif
line 12: let g:loaded_matchparen = 1
line 13: 
line 14: if !exists("g:matchparen_timeout")
line 15:   let g:matchparen_timeout = 300
line 16: endif
line 17: if !exists("g:matchparen_insert_timeout")
line 18:   let g:matchparen_insert_timeout = 60
line 19: endif
line 20: 
line 21: let s:has_matchaddpos = exists('*matchaddpos')
line 22: 
line 23: augroup matchparen
line 24:   " Replace all matchparen autocommands
line 25:   autocmd! CursorMoved,CursorMovedI,WinEnter,WinScrolled * call s:Highlight_Matching_Pair()
line 26:   autocmd! BufWinEnter * autocmd SafeState * ++once call s:Highlight_Matching_Pair()
line 27:   autocmd! WinLeave,BufLeave * call s:Remove_Matches()
line 28:   if exists('##TextChanged')
line 29:     autocmd! TextChanged,TextChangedI * call s:Highlight_Matching_Pair()
line 30:     autocmd! TextChangedP * call s:Remove_Matches()
line 31:   endif
line 32: augroup END
line 33: 
line 34: " Skip the rest if it was already done.
line 35: if exists("*s:Highlight_Matching_Pair")
line 36:   finish
line 37: endif
line 38: 
line 39: let s:cpo_save = &cpo
line 40: set cpo-=C
line 41: 
line 42: " The function that is invoked (very often) to define a ":match" highlighting
line 43: " for any matching paren.
line 44: func s:Highlight_Matching_Pair()
line 201: 
line 202: func s:Remove_Matches()
line 210: 
line 211: " Define commands that will disable and enable the plugin.
line 212: command DoMatchParen call s:DoMatchParen()
line 213: command NoMatchParen call s:NoMatchParen()
line 214: 
line 215: func s:NoMatchParen()
line 222: 
line 223: func s:DoMatchParen()
line 229: 
line 230: let &cpo = s:cpo_save
line 231: unlet s:cpo_save
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/matchparen.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/netrwPlugin.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/netrwPlugin.vim"
line 1: " netrwPlugin.vim: Handles file transfer and remote directory listing across a network
line 2: "            PLUGIN SECTION
line 3: " Maintainer:^IThis runtime file is looking for a new maintainer.
line 4: " Date:^I^IFeb 09, 2021
line 5: " Last Change:
line 6: "   2024 May 08 by Vim Project: cleanup legacy Win9X checks
line 7: " Former Maintainer:   Charles E Campbell
line 8: " GetLatestVimScripts: 1075 1 :AutoInstall: netrw.vim
line 9: " Copyright:    Copyright (C) 1999-2021 Charles E. Campbell {{{1
line 10: "               Permission is hereby granted to use and distribute this code,
line 11: "               with or without modifications, provided that this copyright
line 12: "               notice is copied with it. Like anything else that's free,
line 13: "               netrw.vim, netrwPlugin.vim, and netrwSettings.vim are provided
line 14: "               *as is* and comes with no warranty of any kind, either
line 15: "               expressed or implied. By using this plugin, you agree that
line 16: "               in no event will the copyright holder be liable for any damages
line 17: "               resulting from the use of this software.
line 18: "
line 19: "  But be doers of the Word, and not only hearers, deluding your own selves {{{1
line 20: "  (James 1:22 RSV)
line 21: " =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
line 22: " Load Once: {{{1
line 23: if &cp || exists("g:loaded_netrwPlugin")
line 24:  finish
line 25: endif
line 26: let g:loaded_netrwPlugin = "v173"
line 27: let s:keepcpo = &cpo
line 28: set cpo&vim
line 29: "DechoRemOn
line 30: 
line 31: " ---------------------------------------------------------------------
line 32: " Public Interface: {{{1
line 33: 
line 34: " Local Browsing Autocmds: {{{2
line 35: augroup FileExplorer
line 36:  au!
line 37:  au BufLeave *  if &ft != "netrw"|let w:netrw_prvfile= expand("%:p")|endif
line 38:  au BufEnter *^Isil call s:LocalBrowse(expand("<amatch>"))
line 39:  au VimEnter *^Isil call s:VimEnter(expand("<amatch>"))
line 40:  if has("win32")
line 41:   au BufEnter .* sil call s:LocalBrowse(expand("<amatch>"))
line 42:  endif
line 43: augroup END
line 44: 
line 45: " Network Browsing Reading Writing: {{{2
line 46: augroup Network
line 47:  au!
line 48:  au BufReadCmd   file://*^I^I^I^I^I^I^I^I^I^I^Icall netrw#FileUrlEdit(expand("<amatch>"))
line 49:  au BufReadCmd   ftp://*,rcp://*,scp://*,http://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
line 50:  au FileReadCmd  ftp://*,rcp://*,scp://*,http://*,file://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
line 51:  au BufWriteCmd  ftp://*,rcp://*,scp://*,http://*,file://*,dav://*,davs://*,rsync://*,sftp://*^I^I^Iexe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
line 52:  au FileWriteCmd ftp://*,rcp://*,scp://*,http://*,file://*,dav://*,davs://*,rsync://*,sftp://*^I^I^Iexe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
line 53:  try
line 54:   au SourceCmd   ftp://*,rcp://*,scp://*,http://*,file://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe 'Nsource '.fnameescape(expand("<amatch>"))
line 55:  catch /^Vim\%((\a\+)\)\=:E216/
line 56:   au SourcePre   ftp://*,rcp://*,scp://*,http://*,file://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe 'Nsource '.fnameescape(expand("<amatch>"))
line 57:  endtry
line 58: augroup END
line 59: 
line 60: " Commands: :Nread, :Nwrite, :NetUserPass {{{2
line 61: com! -count=1 -nargs=*^INread^I^Ilet s:svpos= winsaveview()<bar>call netrw#NetRead(<count>,<f-args>)<bar>call winrestview(s:svpos)
line 62: com! -range=% -nargs=*^INwrite^I^Ilet s:svpos= winsaveview()<bar><line1>,<line2>call netrw#NetWrite(<f-args>)<bar>call winrestview(s:svpos)
line 63: com! -nargs=*^I^INetUserPass^Icall NetUserPass(<f-args>)
line 64: com! -nargs=*^I        Nsource^I^Ilet s:svpos= winsaveview()<bar>call netrw#NetSource(<f-args>)<bar>call winrestview(s:svpos)
line 65: com! -nargs=?^I^INtree^I^Icall netrw#SetTreetop(1,<q-args>)
line 66: 
line 67: " Commands: :Explore, :Sexplore, Hexplore, Vexplore, Lexplore {{{2
line 68: com! -nargs=* -bar -bang -count=0 -complete=dir^IExplore^I^Icall netrw#Explore(<count>,0,0+<bang>0,<q-args>)
line 69: com! -nargs=* -bar -bang -count=0 -complete=dir^ISexplore^Icall netrw#Explore(<count>,1,0+<bang>0,<q-args>)
line 70: com! -nargs=* -bar -bang -count=0 -complete=dir^IHexplore^Icall netrw#Explore(<count>,1,2+<bang>0,<q-args>)
line 71: com! -nargs=* -bar -bang -count=0 -complete=dir^IVexplore^Icall netrw#Explore(<count>,1,4+<bang>0,<q-args>)
line 72: com! -nargs=* -bar       -count=0 -complete=dir^ITexplore^Icall netrw#Explore(<count>,0,6        ,<q-args>)
line 73: com! -nargs=* -bar -bang^I^I^INexplore^Icall netrw#Explore(-1,0,0,<q-args>)
line 74: com! -nargs=* -bar -bang^I^I^IPexplore^Icall netrw#Explore(-2,0,0,<q-args>)
line 75: com! -nargs=* -bar -bang -count=0 -complete=dir Lexplore^Icall netrw#Lexplore(<count>,<bang>0,<q-args>)
line 76: 
line 77: " Commands: NetrwSettings {{{2
line 78: com! -nargs=0^INetrwSettings^Icall netrwSettings#NetrwSettings()
line 79: com! -bang^INetrwClean^Icall netrw#Clean(<bang>0)
line 80: 
line 81: " Maps:
line 82: if !exists("g:netrw_nogx")
line 83:  if maparg('gx','n') == ""
line 84:   if !hasmapto('<Plug>NetrwBrowseX')
line 85:    nmap <unique> gx <Plug>NetrwBrowseX
line 86:   endif
line 87:   nno <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(netrw#GX(),netrw#CheckIfRemote(netrw#GX()))<cr>
line 88:  endif
line 89:  if maparg('gx','x') == ""
line 90:   if !hasmapto('<Plug>NetrwBrowseXVis')
line 91:    xmap <unique> gx <Plug>NetrwBrowseXVis
line 92:   endif
line 93:   xno <silent> <Plug>NetrwBrowseXVis :<c-u>call netrw#BrowseXVis()<cr>
line 94:  endif
line 95: endif
line 96: if exists("g:netrw_usetab") && g:netrw_usetab
line 97:  if maparg('<c-tab>','n') == ""
line 98:   nmap <unique> <c-tab> <Plug>NetrwShrink
line 99:  endif
line 100:  nno <silent> <Plug>NetrwShrink :call netrw#Shrink()<cr>
line 101: endif
line 102: 
line 103: " ---------------------------------------------------------------------
line 104: " LocalBrowse: invokes netrw#LocalBrowseCheck() on directory buffers {{{2
line 105: fun! s:LocalBrowse(dirname)
line 149: 
line 150: " ---------------------------------------------------------------------
line 151: " s:VimEnter: after all vim startup stuff is done, this function is called. {{{2
line 152: "             Its purpose: to look over all windows and run s:LocalBrowse() on
line 153: "             them, which checks if they're directories and will create a directory
line 154: "             listing when appropriate.
line 155: "             It also sets s:vimentered, letting s:LocalBrowse() know that s:VimEnter()
line 156: "             has already been called.
line 157: fun! s:VimEnter(dirname)
line 177: 
line 178: " ---------------------------------------------------------------------
line 179: " NetrwStatusLine: {{{1
line 180: fun! NetrwStatusLine()
line 191: 
line 192: " ------------------------------------------------------------------------
line 193: " NetUserPass: set username and password for subsequent ftp transfer {{{1
line 194: "   Usage:  :call NetUserPass()^I^I^I-- will prompt for userid and password
line 195: "^I    :call NetUserPass("uid")^I^I-- will prompt for password
line 196: "^I    :call NetUserPass("uid","password") -- sets global userid and password
line 197: fun! NetUserPass(...)
line 221: 
line 222: " ------------------------------------------------------------------------
line 223: " Modelines And Restoration: {{{1
line 224: let &cpo= s:keepcpo
line 225: unlet s:keepcpo
line 226: " vim:ts=8 fdm=marker
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/netrwPlugin.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/osc52.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/osc52.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/osc52.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/rplugin.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/rplugin.vim"
line 1: if exists('g:loaded_remote_plugins')
line 2:   finish
line 3: endif
line 4: let g:loaded_remote_plugins = '/path/to/manifest'
line 5: 
line 6: " Get the path to the rplugin manifest file.
line 7: function! s:GetManifestPath() abort
line 26: 
line 27: " Old manifest file based on known script locations.
line 28: function! s:GetOldManifestPaths() abort
line 43: 
line 44: function! s:GetManifest() abort
line 57: 
line 58: function! s:LoadRemotePlugins() abort
line 64: 
line 65: command! -bar UpdateRemotePlugins call remote#host#UpdateRemotePlugins()
line 66: 
line 67: if index(v:argv, "--clean") < 0
line 68:   call s:LoadRemotePlugins()
calling <SNR>59_LoadRemotePlugins()

line 1:   let g:loaded_remote_plugins = s:GetManifest()
calling <SNR>59_GetManifest()

line 1:   let manifest = s:GetManifestPath()
calling <SNR>59_GetManifestPath()

line 1:   let manifest_base = ''
line 2: 
line 3:   if exists('$NVIM_RPLUGIN_MANIFEST')
line 4:     return fnamemodify($NVIM_RPLUGIN_MANIFEST, ':p')
line 5:   endif
line 6: 
line 7:   let dest = stdpath('data')
line 8:   if !empty(dest)
line 9:     if !isdirectory(dest)
line 10:       if getftype(dest) != "link"
line 11:         call mkdir(dest, 'p', 0700)
line 12:       endif
line 13:     endif
line 14:     let manifest_base = dest
line 15:   endif
line 16: 
line 17:   return manifest_base.'/rplugin.vim'
<SNR>59_GetManifestPath returning '/Users/embe221ed/.local/share/nvim/rplugin.vim'

continuing in <SNR>59_GetManifest

line 2:   if !filereadable(manifest)
line 3:     " Check if an old manifest file exists and move it to the new location.
line 4:     for old_manifest in s:GetOldManifestPaths()
line 5:       if filereadable(old_manifest)
line 6:         call rename(old_manifest, manifest)
line 7:         break
line 8:       endif
line 9:     endfor
line 10:   endif
line 11:   return manifest
<SNR>59_GetManifest returning '/Users/embe221ed/.local/share/nvim/rplugin.vim'

continuing in <SNR>59_LoadRemotePlugins

line 2:   if filereadable(g:loaded_remote_plugins)
line 3:     execute 'source' fnameescape(g:loaded_remote_plugins)
line 3: source /Users/embe221ed/.local/share/nvim/rplugin.vim
line 3: sourcing "/Users/embe221ed/.local/share/nvim/rplugin.vim"
line 1: " perl plugins
line 2: 
line 3: 
line 4: " node plugins
line 5: 
line 6: 
line 7: " python3 plugins
line 8: 
line 9: 
line 10: " ruby plugins
line 11: 
line 12: 
line 13: " python plugins
line 14: 
line 15: 
finished sourcing /Users/embe221ed/.local/share/nvim/rplugin.vim
continuing in <SNR>59_LoadRemotePlugins
line 4:   endif
<SNR>59_LoadRemotePlugins returning #0

continuing in /opt/neovim/out/share/nvim/runtime/plugin/rplugin.vim

line 69: endif
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/rplugin.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/shada.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/shada.vim"
line 1: if exists('g:loaded_shada_plugin')
line 2:   finish
line 3: endif
line 4: let g:loaded_shada_plugin = 1
line 5: 
line 6: augroup ShaDaCommands
line 7:   autocmd!
line 8:   autocmd BufReadCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call setline('.', shada#get_strings(readfile(expand('<afile>'),'b'))) |setlocal filetype=shada
line 12:   autocmd FileReadCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call append("'[", shada#get_strings(readfile(expand('<afile>'), 'b')))
line 15:   autocmd BufWriteCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |if writefile(shada#get_binstrings(getline(1, '$')),expand('<afile>'), 'b') == 0 |  let &l:modified = (expand('<afile>') is# bufname(+expand('<abuf>'))? 0: stridx(&cpoptions, '+') != -1) |endif
line 23:   autocmd FileWriteCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'b')
line 30:   autocmd FileAppendCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'ab')
line 37:   autocmd SourceCmd *.shada,*.shada.tmp.[a-z] :execute 'rshada' fnameescape(expand('<afile>'))
line 39: augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/shada.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/spellfile.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/spellfile.vim"
line 1: " Vim plugin for downloading spell files
line 2: 
line 3: if exists("loaded_spellfile_plugin") || &cp || exists("#SpellFileMissing")
line 4:   finish
line 5: endif
line 6: let loaded_spellfile_plugin = 1
line 7: 
line 8: autocmd SpellFileMissing * call spellfile#LoadFile(expand('<amatch>'))
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/spellfile.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/tarPlugin.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/tarPlugin.vim"
line 1: " tarPlugin.vim -- a Vim plugin for browsing tarfiles
line 2: " Original was copyright (c) 2002, Michael C. Toren <mct@toren.net>
line 3: " Modified by Charles E. Campbell
line 4: " Distributed under the GNU General Public License.
line 5: "
line 6: " Updates are available from <http://michael.toren.net/code/>.  If you
line 7: " find this script useful, or have suggestions for improvements, please
line 8: " let me know.
line 9: " Also look there for further comments and documentation.
line 10: "
line 11: " This part only sets the autocommands.  The functions are in autoload/tar.vim.
line 12: " ---------------------------------------------------------------------
line 13: "  Load Once: {{{1
line 14: if &cp || exists("g:loaded_tarPlugin")
line 15:  finish
line 16: endif
line 17: let g:loaded_tarPlugin = "v32"
line 18: let s:keepcpo          = &cpo
line 19: set cpo&vim
line 20: 
line 21: " ---------------------------------------------------------------------
line 22: "  Public Interface: {{{1
line 23: augroup tar
line 24:   au!
line 25:   au BufReadCmd   tarfile::*^Icall tar#Read(expand("<amatch>"), 1)
line 26:   au FileReadCmd  tarfile::*^Icall tar#Read(expand("<amatch>"), 0)
line 27:   au BufWriteCmd  tarfile::*^Icall tar#Write(expand("<amatch>"))
line 28:   au FileWriteCmd tarfile::*^Icall tar#Write(expand("<amatch>"))
line 29: 
line 30:   if has("unix")
line 31:    au BufReadCmd   tarfile::*/*^Icall tar#Read(expand("<amatch>"), 1)
line 32:    au FileReadCmd  tarfile::*/*^Icall tar#Read(expand("<amatch>"), 0)
line 33:    au BufWriteCmd  tarfile::*/*^Icall tar#Write(expand("<amatch>"))
line 34:    au FileWriteCmd tarfile::*/*^Icall tar#Write(expand("<amatch>"))
line 35:   endif
line 36: 
line 37:   au BufReadCmd   *.tar.gz^I^Icall tar#Browse(expand("<amatch>"))
line 38:   au BufReadCmd   *.tar^I^I^Icall tar#Browse(expand("<amatch>"))
line 39:   au BufReadCmd   *.lrp^I^I^Icall tar#Browse(expand("<amatch>"))
line 40:   au BufReadCmd   *.tar.bz2^I^Icall tar#Browse(expand("<amatch>"))
line 41:   au BufReadCmd   *.tar.Z^I^Icall tar#Browse(expand("<amatch>"))
line 42:   au BufReadCmd   *.tbz^I^I^Icall tar#Browse(expand("<amatch>"))
line 43:   au BufReadCmd   *.tgz^I^I^Icall tar#Browse(expand("<amatch>"))
line 44:   au BufReadCmd   *.tar.lzma^Icall tar#Browse(expand("<amatch>"))
line 45:   au BufReadCmd   *.tar.xz^I^Icall tar#Browse(expand("<amatch>"))
line 46:   au BufReadCmd   *.txz^I^I^Icall tar#Browse(expand("<amatch>"))
line 47:   au BufReadCmd   *.tar.zst^I^Icall tar#Browse(expand("<amatch>"))
line 48:   au BufReadCmd   *.tzst^I^I^Icall tar#Browse(expand("<amatch>"))
line 49: augroup END
line 50: 
line 51: " ---------------------------------------------------------------------
line 52: " Restoration And Modelines: {{{1
line 53: " vim: fdm=marker
line 54: let &cpo= s:keepcpo
line 55: unlet s:keepcpo
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/tarPlugin.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/tohtml.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/tohtml.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/tohtml.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/tutor.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/tutor.vim"
line 1: if exists('g:loaded_tutor_mode_plugin') || &compatible
line 2:     finish
line 3: endif
line 4: let g:loaded_tutor_mode_plugin = 1
line 5: 
line 6: command! -nargs=? -complete=custom,tutor#TutorCmdComplete Tutor call tutor#TutorCmd(<q-args>)
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/tutor.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/zipPlugin.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/zipPlugin.vim"
line 1: " zipPlugin.vim: Handles browsing zipfiles
line 2: "            PLUGIN PORTION
line 3: " Date:^I^I^IDec 07, 2021
line 4: " Maintainer:^IThis runtime file is looking for a new maintainer.
line 5: " Former Maintainer:^ICharles E Campbell
line 6: " License:^I^IVim License  (see vim's :help license)
line 7: " Copyright:    Copyright (C) 2005-2016 Charles E. Campbell {{{1
line 8: "               Permission is hereby granted to use and distribute this code,
line 9: "               with or without modifications, provided that this copyright
line 10: "               notice is copied with it. Like anything else that's free,
line 11: "               zipPlugin.vim is provided *as is* and comes with no warranty
line 12: "               of any kind, either expressed or implied. By using this
line 13: "               plugin, you agree that in no event will the copyright
line 14: "               holder be liable for any damages resulting from the use
line 15: "               of this software.
line 16: "
line 17: " (James 4:8 WEB) Draw near to God, and he will draw near to you.
line 18: " Cleanse your hands, you sinners; and purify your hearts, you double-minded.
line 19: " ---------------------------------------------------------------------
line 20: " Load Once: {{{1
line 21: if &cp || exists("g:loaded_zipPlugin")
line 22:  finish
line 23: endif
line 24: let g:loaded_zipPlugin = "v33"
line 25: let s:keepcpo          = &cpo
line 26: set cpo&vim
line 27: 
line 28: " ---------------------------------------------------------------------
line 29: " Options: {{{1
line 30: if !exists("g:zipPlugin_ext")
line 31:  let g:zipPlugin_ext='*.aar,*.apk,*.celzip,*.crtx,*.docm,*.docx,*.dotm,*.dotx,*.ear,*.epub,*.gcsx,*.glox,*.gqsx,*.ja,*.jar,*.kmz,*.odb,*.odc,*.odf,*.odg,*.odi,*.odm,*.odp,*.ods,*.odt,*.otc,*.otf,*.otg,*.oth,*.oti,*.otp,*.ots,*.ott,*.oxt,*.potm,*.potx,*.ppam,*.ppsm,*.ppsx,*.pptm,*.pptx,*.sldx,*.thmx,*.vdw,*.war,*.wsz,*.xap,*.xlam,*.xlsb,*.xlsm,*.xlsx,*.xltm,*.xltx,*.xpi,*.zip'
line 32: endif
line 33: 
line 34: " ---------------------------------------------------------------------
line 35: " Public Interface: {{{1
line 36: augroup zip
line 37:  au!
line 38:  au BufReadCmd   zipfile:*^Icall zip#Read(expand("<amatch>"), 1)
line 39:  au FileReadCmd  zipfile:*^Icall zip#Read(expand("<amatch>"), 0)
line 40:  au BufWriteCmd  zipfile:*^Icall zip#Write(expand("<amatch>"))
line 41:  au FileWriteCmd zipfile:*^Icall zip#Write(expand("<amatch>"))
line 42: 
line 43:  if has("unix")
line 44:   au BufReadCmd   zipfile:*/*^Icall zip#Read(expand("<amatch>"), 1)
line 45:   au FileReadCmd  zipfile:*/*^Icall zip#Read(expand("<amatch>"), 0)
line 46:   au BufWriteCmd  zipfile:*/*^Icall zip#Write(expand("<amatch>"))
line 47:   au FileWriteCmd zipfile:*/*^Icall zip#Write(expand("<amatch>"))
line 48:  endif
line 49: 
line 50:  exe "au BufReadCmd ".g:zipPlugin_ext.' call zip#Browse(expand("<amatch>"))'
line 50: au BufReadCmd *.aar,*.apk,*.celzip,*.crtx,*.docm,*.docx,*.dotm,*.dotx,*.ear,*.epub,*.gcsx,*.glox,*.gqsx,*.ja,*.jar,*.kmz,*.odb,*.odc,*.odf,*.odg,*.odi,*.odm,*.odp,*.ods,*.odt,*.otc,*.otf,*.otg,*.oth,*.oti,*.otp,*.ots,*.ott,*.oxt,*.potm,*.potx,*.ppam,*.ppsm,*.ppsx,*.pptm,*.pptx,*.sldx,*.thmx,*.vdw,*.war,*.wsz,*.xap,*.xlam,*.xlsb,*.xlsm,*.xlsx,*.xltm,*.xltx,*.xpi,*.zip call zip#Browse(expand("<amatch>"))
line 51: augroup END
line 52: 
line 53: " ---------------------------------------------------------------------
line 54: "  Restoration And Modelines: {{{1
line 55: "  vim: fdm=marker
line 56: let &cpo= s:keepcpo
line 57: unlet s:keepcpo
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/zipPlugin.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/plugin/commands.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/plugin/commands.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/plugin/commands.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/plugin/cmp_path.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/plugin/cmp_path.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/plugin/cmp_path.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/plugin/cmp_cmdline.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/plugin/cmp_cmdline.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/plugin/cmp_cmdline.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/plugin/cmp_buffer.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/plugin/cmp_buffer.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/plugin/cmp_buffer.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing User Autocommands for "LazyDone"
autocommand <Lua 44: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/util.lua:183>

Executing: 
Executing: augroup lualine | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: highlight! lualine_c_normal guifg=#bbc2cf guibg=#303447 gui=None ctermfg=07 ctermbg=237 cterm=None
Executing: highlight! lualine_c_inactive guifg=#bbc2cf guibg=#303447 gui=None ctermfg=07 ctermbg=237 cterm=None
Executing: autocmd lualine ColorScheme * lua require'lualine'.setup()
Executing:     autocmd lualine OptionSet background lua require'lualine'.setup()
Executing: highlight! lualine_c_2_normal guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_2_insert guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_2_visual guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_2_replace guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_2_command guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_2_terminal guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_2_inactive guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_3_normal guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_3_insert guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_3_visual guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_3_replace guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_3_command guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_3_terminal guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_3_inactive guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_filename_normal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_insert guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_visual guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_replace guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_command guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_terminal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_inactive guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_6_normal guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_6_insert guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_6_visual guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_6_replace guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_6_command guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_6_terminal guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_6_inactive guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_normal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_insert guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_visual guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_replace guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_command guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_terminal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_inactive guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_diff_added_normal guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_insert guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_visual guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_replace guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_command guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_terminal guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_inactive guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_normal guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_insert guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_visual guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_replace guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_command guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_terminal guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_inactive guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_normal guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_insert guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_visual guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_replace guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_command guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_terminal guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_inactive guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: au lualine BufEnter *
--- Autocommands ---
Executing: autocmd lualine BufEnter * lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing: au lualine BufWritePost *
--- Autocommands ---
Executing: autocmd lualine BufWritePost * lua require'lualine.components.diff.git_diff'.update_git_diff()
Executing: highlight! lualine_c_9_normal guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_insert guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_visual guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_replace guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_command guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_terminal guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_inactive guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_filename_0_normal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_insert guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_visual guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_replace guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_command guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_terminal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_inactive guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: augroup lualine_stl_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: au lualine WinEnter,BufEnter,BufWritePost,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,CursorMovedI,ModeChanged *
--- Autocommands ---
Executing: autocmd lualine_stl_refresh WinEnter,BufEnter,BufWritePost,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,CursorMovedI,ModeChanged * call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing: augroup lualine_tal_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: augroup lualine_wb_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <Lua 287: ~/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua:15>

Executing: 
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <Lua 287: ~/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua:15>

Executing: 
Executing:     augroup goto-preview
Executing:       au!
Executing:       au WinClosed * lua require('goto-preview').remove_win()
Executing:       au BufEnter * lua require('goto-preview').buffer_entered()
Executing:       au BufLeave * lua require('goto-preview').buffer_left()
Executing:     augroup end
Executing:   
Executing: augroup filetypedetect
Executing: augroup END
Executing: silent! autocmd! FileExplorer *
Executing: autocmd VimEnter * ++once silent! autocmd! FileExplorer *
Executing: hi def NvimTreeFolderIcon guifg=#8094b4 ctermfg=Blue
Executing: hi def NvimTreeWindowPicker guifg=#ededed guibg=#4493c8 gui=bold ctermfg=White ctermbg=DarkBlue
Executing: hi def link NvimTreeNormal Normal
Executing: hi def link NvimTreeNormalFloat NormalFloat
Executing: hi def link NvimTreeNormalFloatBorder FloatBorder
Executing: hi def link NvimTreeNormalNC NvimTreeNormal
Executing: hi def link NvimTreeLineNr LineNr
Executing: hi def link NvimTreeWinSeparator WinSeparator
Executing: hi def link NvimTreeEndOfBuffer EndOfBuffer
Executing: hi def link NvimTreePopup Normal
Executing: hi def link NvimTreeSignColumn NvimTreeNormal
Executing: hi def link NvimTreeCursorColumn CursorColumn
Executing: hi def link NvimTreeCursorLine CursorLine
Executing: hi def link NvimTreeCursorLineNr CursorLineNr
Executing: hi def link NvimTreeStatusLine StatusLine
Executing: hi def link NvimTreeStatusLineNC StatusLineNC
Executing: hi def link NvimTreeExecFile Question
Executing: hi def link NvimTreeImageFile Question
Executing: hi def link NvimTreeSpecialFile Title
Executing: hi def link NvimTreeSymlink Underlined
Executing: hi def link NvimTreeRootFolder Title
Executing: hi def link NvimTreeFolderName Directory
Executing: hi def link NvimTreeEmptyFolderName Directory
Executing: hi def link NvimTreeOpenedFolderName Directory
Executing: hi def link NvimTreeSymlinkFolderName Directory
Executing: hi def link NvimTreeFileIcon NvimTreeNormal
Executing: hi def link NvimTreeSymlinkIcon NvimTreeNormal
Executing: hi def link NvimTreeOpenedFolderIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeClosedFolderIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeFolderArrowClosed NvimTreeIndentMarker
Executing: hi def link NvimTreeFolderArrowOpen NvimTreeIndentMarker
Executing: hi def link NvimTreeIndentMarker NvimTreeFolderIcon
Executing: hi def link NvimTreeLiveFilterPrefix PreProc
Executing: hi def link NvimTreeLiveFilterValue ModeMsg
Executing: hi def link NvimTreeCutHL SpellBad
Executing: hi def link NvimTreeCopiedHL SpellRare
Executing: hi def link NvimTreeBookmarkIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeBookmarkHL SpellLocal
Executing: hi def link NvimTreeModifiedIcon Type
Executing: hi def link NvimTreeModifiedFileHL NvimTreeModifiedIcon
Executing: hi def link NvimTreeModifiedFolderHL NvimTreeModifiedFileHL
Executing: hi def link NvimTreeHiddenIcon Conceal
Executing: hi def link NvimTreeHiddenFileHL NvimTreeHiddenIcon
Executing: hi def link NvimTreeHiddenFolderHL NvimTreeHiddenFileHL
Executing: hi def link NvimTreeHiddenDisplay Conceal
Executing: hi def link NvimTreeOpenedHL Special
Executing: hi def link NvimTreeGitDeletedIcon Statement
Executing: hi def link NvimTreeGitDirtyIcon Statement
Executing: hi def link NvimTreeGitIgnoredIcon Comment
Executing: hi def link NvimTreeGitMergeIcon Constant
Executing: hi def link NvimTreeGitNewIcon PreProc
Executing: hi def link NvimTreeGitRenamedIcon PreProc
Executing: hi def link NvimTreeGitStagedIcon Constant
Executing: hi def link NvimTreeGitFileDeletedHL NvimTreeGitDeletedIcon
Executing: hi def link NvimTreeGitFileDirtyHL NvimTreeGitDirtyIcon
Executing: hi def link NvimTreeGitFileIgnoredHL NvimTreeGitIgnoredIcon
Executing: hi def link NvimTreeGitFileMergeHL NvimTreeGitMergeIcon
Executing: hi def link NvimTreeGitFileNewHL NvimTreeGitNewIcon
Executing: hi def link NvimTreeGitFileRenamedHL NvimTreeGitRenamedIcon
Executing: hi def link NvimTreeGitFileStagedHL NvimTreeGitStagedIcon
Executing: hi def link NvimTreeGitFolderDeletedHL NvimTreeGitFileDeletedHL
Executing: hi def link NvimTreeGitFolderDirtyHL NvimTreeGitFileDirtyHL
Executing: hi def link NvimTreeGitFolderIgnoredHL NvimTreeGitFileIgnoredHL
Executing: hi def link NvimTreeGitFolderMergeHL NvimTreeGitFileMergeHL
Executing: hi def link NvimTreeGitFolderNewHL NvimTreeGitFileNewHL
Executing: hi def link NvimTreeGitFolderRenamedHL NvimTreeGitFileRenamedHL
Executing: hi def link NvimTreeGitFolderStagedHL NvimTreeGitFileStagedHL
Executing: hi def link NvimTreeDiagnosticErrorIcon DiagnosticError
Executing: hi def link NvimTreeDiagnosticWarnIcon DiagnosticWarn
Executing: hi def link NvimTreeDiagnosticInfoIcon DiagnosticInfo
Executing: hi def link NvimTreeDiagnosticHintIcon DiagnosticHint
Executing: hi def link NvimTreeDiagnosticErrorFileHL DiagnosticUnderlineError
Executing: hi def link NvimTreeDiagnosticWarnFileHL DiagnosticUnderlineWarn
Executing: hi def link NvimTreeDiagnosticInfoFileHL DiagnosticUnderlineInfo
Executing: hi def link NvimTreeDiagnosticHintFileHL DiagnosticUnderlineHint
Executing: hi def link NvimTreeDiagnosticErrorFolderHL NvimTreeDiagnosticErrorFileHL
Executing: hi def link NvimTreeDiagnosticWarnFolderHL NvimTreeDiagnosticWarnFileHL
Executing: hi def link NvimTreeDiagnosticInfoFolderHL NvimTreeDiagnosticInfoFileHL
Executing: hi def link NvimTreeDiagnosticHintFolderHL NvimTreeDiagnosticHintFileHL
Searching for "data/plenary/filetypes/base.lua" in runtime path
Searching for "/Users/embe221ed/.config/nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/site/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/data/plenary/filetypes/base.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/data/plenary/filetypes/base.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/data/plenary/filetypes/base.lua"
Searching for "/opt/neovim/out/lib/nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/data/plenary/filetypes/base.lua"
Searching for "data/plenary/filetypes/builtin.lua" in runtime path
Searching for "/Users/embe221ed/.config/nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/site/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/data/plenary/filetypes/builtin.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/data/plenary/filetypes/builtin.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/data/plenary/filetypes/builtin.lua"
Searching for "/opt/neovim/out/lib/nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/data/plenary/filetypes/builtin.lua"
Searching for "data/plenary/filetypes/move.lua" in runtime path
Searching for "/Users/embe221ed/.config/nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/site/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/data/plenary/filetypes/move.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/data/plenary/filetypes/move.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/data/plenary/filetypes/move.lua"
Searching for "/opt/neovim/out/lib/nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/data/plenary/filetypes/move.lua"
Searching for "package.json" in runtime path
Searching for "/Users/embe221ed/.config/nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/site/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/package.json"
Searching for "/opt/neovim/out/share/nvim/runtime/package.json"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/package.json"
Searching for "/opt/neovim/out/lib/nvim/package.json"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/package.json"
Searching for "package.jsonc" in runtime path
Searching for "/Users/embe221ed/.config/nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/site/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/package.jsonc"
Searching for "/opt/neovim/out/share/nvim/runtime/package.jsonc"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/package.jsonc"
Searching for "/opt/neovim/out/lib/nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/package.jsonc"
not found in runtime path: "package.jsonc"
Executing ColorSchemePre Autocommands for "*"
autocommand <Lua 45: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/loader.lua:31>

Executing: 
Searching for "colors/catppuccin.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/colors/catppuccin.*"
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/colors/catppuccin.vim"
line 1: lua require("catppuccin").load()
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/catppuccin/colors/catppuccin.vim
continuing in /opt/scripts/configs/nvim/init.lua
Executing ColorScheme Autocommands for "*"
autocommand <Lua 146: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing ColorScheme Autocommands for "*"
autocommand lua require('illuminate').set_highlight_defaults()

Executing: lua require('illuminate').set_highlight_defaults()
Executing:     hi def IlluminatedWordText guifg=none guibg=none gui=underline
Executing:     hi def IlluminatedWordRead guifg=none guibg=none gui=underline
Executing:     hi def IlluminatedWordWrite guifg=none guibg=none gui=underline
Executing:     
Executing ColorScheme Autocommands for "*"
autocommand <Lua 243: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:31>

Executing: 
Executing ColorScheme Autocommands for "*"
autocommand lua require'lualine'.setup()

Executing: lua require'lualine'.setup()
Executing: augroup lualine | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: highlight clear lualine_x_diff_removed_normal
Executing: highlight clear lualine_x_diff_removed_insert
Executing: highlight clear lualine_x_diff_removed_visual
Executing: highlight clear lualine_c_6_normal
Executing: highlight clear lualine_c_6_insert
Executing: highlight clear lualine_c_6_visual
Executing: highlight clear lualine_c_6_replace
Executing: highlight clear lualine_c_6_command
Executing: highlight clear lualine_c_6_terminal
Executing: highlight clear lualine_c_6_inactive
Executing: highlight clear lualine_c_9_insert
Executing: highlight clear lualine_c_9_visual
Executing: highlight clear lualine_c_9_replace
Executing: highlight clear lualine_c_9_command
Executing: highlight clear lualine_c_9_terminal
Executing: highlight clear lualine_x_selectioncount_normal
Executing: highlight clear lualine_x_normal
Executing: highlight clear lualine_x_selectioncount_insert
Executing: highlight clear lualine_x_insert
Executing: highlight clear lualine_x_selectioncount_visual
Executing: highlight clear lualine_x_visual
Executing: highlight clear lualine_c_filename_0_visual
Executing: highlight clear lualine_x_selectioncount_replace
Executing: highlight clear lualine_x_replace
Executing: highlight clear lualine_x_selectioncount_command
Executing: highlight clear lualine_x_command
Executing: highlight clear lualine_c_filename_0_terminal
Executing: highlight clear lualine_x_selectioncount_terminal
Executing: highlight clear lualine_x_terminal
Executing: highlight clear lualine_x_selectioncount_inactive
Executing: highlight clear lualine_x_inactive
Executing: highlight clear lualine_c_2_command
Executing: highlight clear lualine_c_command
Executing: highlight clear lualine_c_2_normal
Executing: highlight clear lualine_c_2_terminal
Executing: highlight clear lualine_c_terminal
Executing: highlight clear lualine_c_inactive
Executing: highlight clear lualine_c_3_normal
Executing: highlight clear lualine_c_3_insert
Executing: highlight clear lualine_c_3_visual
Executing: highlight clear lualine_c_3_replace
Executing: highlight clear lualine_c_3_command
Executing: highlight clear lualine_c_3_terminal
Executing: highlight clear lualine_c_3_inactive
Executing: highlight clear lualine_c_filename_0_inactive
Executing: highlight clear lualine_x_diff_added_normal
Executing: highlight clear lualine_c_filename_0_command
Executing: highlight clear lualine_c_filename_0_replace
Executing: highlight clear lualine_x_diff_removed_terminal
Executing: highlight clear lualine_c_filename_0_insert
Executing: highlight clear lualine_x_diff_removed_inactive
Executing: highlight clear lualine_c_filename_0_normal
Executing: highlight clear lualine_x_diff_added_insert
Executing: highlight clear lualine_c_9_inactive
Executing: highlight clear lualine_x_diff_added_visual
Executing: highlight clear lualine_c_9_normal
Executing: highlight clear lualine_x_diff_added_replace
Executing: highlight clear lualine_x_diff_removed_command
Executing: highlight clear lualine_x_diff_added_command
Executing: highlight clear lualine_x_diff_removed_replace
Executing: highlight clear lualine_x_diff_added_terminal
Executing: highlight clear lualine_c_normal
Executing: highlight clear lualine_x_diff_added_inactive
Executing: highlight clear lualine_c_2_inactive
Executing: highlight clear lualine_c_filename_terminal
Executing: highlight clear lualine_c_filename_normal
Executing: highlight clear lualine_x_diff_modified_normal
Executing: highlight clear lualine_c_filename_command
Executing: highlight clear lualine_c_filename_replace
Executing: highlight clear lualine_c_filename_visual
Executing: highlight clear lualine_c_filename_insert
Executing: highlight clear lualine_x_diff_modified_insert
Executing: highlight clear lualine_c_replace
Executing: highlight clear lualine_x_diff_modified_visual
Executing: highlight clear lualine_c_2_replace
Executing: highlight clear lualine_x_diff_modified_replace
Executing: highlight clear lualine_c_visual
Executing: highlight clear lualine_x_diff_modified_command
Executing: highlight clear lualine_c_2_visual
Executing: highlight clear lualine_x_diff_modified_terminal
Executing: highlight clear lualine_c_insert
Executing: highlight clear lualine_x_diff_modified_inactive
Executing: highlight clear lualine_c_2_insert
Executing: highlight clear lualine_c_filename_inactive
Executing: highlight! lualine_c_normal guifg=#bbc2cf guibg=#303447 gui=None
Executing: highlight! lualine_c_inactive guifg=#bbc2cf guibg=#303447 gui=None
Executing: autocmd lualine ColorScheme * lua require'lualine'.setup()
Executing:     autocmd lualine OptionSet background lua require'lualine'.setup()
Executing: highlight! lualine_c_2_normal guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_2_insert guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_2_visual guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_2_replace guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_2_command guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_2_terminal guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_2_inactive guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_3_normal guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_3_insert guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_3_visual guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_3_replace guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_3_command guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_3_terminal guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_3_inactive guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_filename_normal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_insert guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_visual guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_replace guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_command guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_terminal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_inactive guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_6_normal guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_6_insert guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_6_visual guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_6_replace guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_6_command guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_6_terminal guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_6_inactive guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_normal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_insert guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_visual guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_replace guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_command guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_terminal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_inactive guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_diff_added_normal guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_insert guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_visual guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_replace guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_command guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_terminal guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_inactive guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_normal guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_insert guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_visual guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_replace guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_command guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_terminal guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_inactive guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_normal guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_insert guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_visual guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_replace guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_command guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_terminal guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_inactive guifg=#e78285 guibg=#303447 gui=None
Executing: au lualine BufEnter *
--- Autocommands ---
Executing: autocmd lualine BufEnter * lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing: au lualine BufWritePost *
--- Autocommands ---
Executing: autocmd lualine BufWritePost * lua require'lualine.components.diff.git_diff'.update_git_diff()
Executing: highlight! lualine_c_9_normal guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_insert guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_visual guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_replace guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_command guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_terminal guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_inactive guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_filename_0_normal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_insert guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_visual guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_replace guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_command guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_terminal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_inactive guifg=#c678dd guibg=#303447 gui=bold
Executing: augroup lualine_stl_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: au lualine WinEnter,BufEnter,BufWritePost,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,CursorMovedI,ModeChanged *
--- Autocommands ---
Executing: autocmd lualine_stl_refresh WinEnter,BufEnter,BufWritePost,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,CursorMovedI,ModeChanged * call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing: augroup lualine_tal_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: augroup lualine_wb_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing ColorScheme Autocommands for "*"
autocommand <Lua 239: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/options.lua:96>

Executing: 
Executing ColorScheme Autocommands for "*"
autocommand <Lua 262: ~/.local/share/nvim/lazy/nvim-web-devicons/lua/nvim-web-devicons.lua:317>

Executing: 
Executing ColorScheme Autocommands for "*"
autocommand <Lua 264: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:179>

Executing: hi def NvimTreeFolderIcon guifg=#8094b4 ctermfg=Blue
Executing: hi def NvimTreeWindowPicker guifg=#ededed guibg=#4493c8 gui=bold ctermfg=White ctermbg=DarkBlue
Executing: hi def link NvimTreeNormal Normal
Executing: hi def link NvimTreeNormalFloat NormalFloat
Executing: hi def link NvimTreeNormalFloatBorder FloatBorder
Executing: hi def link NvimTreeNormalNC NvimTreeNormal
Executing: hi def link NvimTreeLineNr LineNr
Executing: hi def link NvimTreeWinSeparator WinSeparator
Executing: hi def link NvimTreeEndOfBuffer EndOfBuffer
Executing: hi def link NvimTreePopup Normal
Executing: hi def link NvimTreeSignColumn NvimTreeNormal
Executing: hi def link NvimTreeCursorColumn CursorColumn
Executing: hi def link NvimTreeCursorLine CursorLine
Executing: hi def link NvimTreeCursorLineNr CursorLineNr
Executing: hi def link NvimTreeStatusLine StatusLine
Executing: hi def link NvimTreeStatusLineNC StatusLineNC
Executing: hi def link NvimTreeExecFile Question
Executing: hi def link NvimTreeImageFile Question
Executing: hi def link NvimTreeSpecialFile Title
Executing: hi def link NvimTreeSymlink Underlined
Executing: hi def link NvimTreeRootFolder Title
Executing: hi def link NvimTreeFolderName Directory
Executing: hi def link NvimTreeEmptyFolderName Directory
Executing: hi def link NvimTreeOpenedFolderName Directory
Executing: hi def link NvimTreeSymlinkFolderName Directory
Executing: hi def link NvimTreeFileIcon NvimTreeNormal
Executing: hi def link NvimTreeSymlinkIcon NvimTreeNormal
Executing: hi def link NvimTreeOpenedFolderIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeClosedFolderIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeFolderArrowClosed NvimTreeIndentMarker
Executing: hi def link NvimTreeFolderArrowOpen NvimTreeIndentMarker
Executing: hi def link NvimTreeIndentMarker NvimTreeFolderIcon
Executing: hi def link NvimTreeLiveFilterPrefix PreProc
Executing: hi def link NvimTreeLiveFilterValue ModeMsg
Executing: hi def link NvimTreeCutHL SpellBad
Executing: hi def link NvimTreeCopiedHL SpellRare
Executing: hi def link NvimTreeBookmarkIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeBookmarkHL SpellLocal
Executing: hi def link NvimTreeModifiedIcon Type
Executing: hi def link NvimTreeModifiedFileHL NvimTreeModifiedIcon
Executing: hi def link NvimTreeModifiedFolderHL NvimTreeModifiedFileHL
Executing: hi def link NvimTreeHiddenIcon Conceal
Executing: hi def link NvimTreeHiddenFileHL NvimTreeHiddenIcon
Executing: hi def link NvimTreeHiddenFolderHL NvimTreeHiddenFileHL
Executing: hi def link NvimTreeHiddenDisplay Conceal
Executing: hi def link NvimTreeOpenedHL Special
Executing: hi def link NvimTreeGitDeletedIcon Statement
Executing: hi def link NvimTreeGitDirtyIcon Statement
Executing: hi def link NvimTreeGitIgnoredIcon Comment
Executing: hi def link NvimTreeGitMergeIcon Constant
Executing: hi def link NvimTreeGitNewIcon PreProc
Executing: hi def link NvimTreeGitRenamedIcon PreProc
Executing: hi def link NvimTreeGitStagedIcon Constant
Executing: hi def link NvimTreeGitFileDeletedHL NvimTreeGitDeletedIcon
Executing: hi def link NvimTreeGitFileDirtyHL NvimTreeGitDirtyIcon
Executing: hi def link NvimTreeGitFileIgnoredHL NvimTreeGitIgnoredIcon
Executing: hi def link NvimTreeGitFileMergeHL NvimTreeGitMergeIcon
Executing: hi def link NvimTreeGitFileNewHL NvimTreeGitNewIcon
Executing: hi def link NvimTreeGitFileRenamedHL NvimTreeGitRenamedIcon
Executing: hi def link NvimTreeGitFileStagedHL NvimTreeGitStagedIcon
Executing: hi def link NvimTreeGitFolderDeletedHL NvimTreeGitFileDeletedHL
Executing: hi def link NvimTreeGitFolderDirtyHL NvimTreeGitFileDirtyHL
Executing: hi def link NvimTreeGitFolderIgnoredHL NvimTreeGitFileIgnoredHL
Executing: hi def link NvimTreeGitFolderMergeHL NvimTreeGitFileMergeHL
Executing: hi def link NvimTreeGitFolderNewHL NvimTreeGitFileNewHL
Executing: hi def link NvimTreeGitFolderRenamedHL NvimTreeGitFileRenamedHL
Executing: hi def link NvimTreeGitFolderStagedHL NvimTreeGitFileStagedHL
Executing: hi def link NvimTreeDiagnosticErrorIcon DiagnosticError
Executing: hi def link NvimTreeDiagnosticWarnIcon DiagnosticWarn
Executing: hi def link NvimTreeDiagnosticInfoIcon DiagnosticInfo
Executing: hi def link NvimTreeDiagnosticHintIcon DiagnosticHint
Executing: hi def link NvimTreeDiagnosticErrorFileHL DiagnosticUnderlineError
Executing: hi def link NvimTreeDiagnosticWarnFileHL DiagnosticUnderlineWarn
Executing: hi def link NvimTreeDiagnosticInfoFileHL DiagnosticUnderlineInfo
Executing: hi def link NvimTreeDiagnosticHintFileHL DiagnosticUnderlineHint
Executing: hi def link NvimTreeDiagnosticErrorFolderHL NvimTreeDiagnosticErrorFileHL
Executing: hi def link NvimTreeDiagnosticWarnFolderHL NvimTreeDiagnosticWarnFileHL
Executing: hi def link NvimTreeDiagnosticInfoFolderHL NvimTreeDiagnosticInfoFileHL
Executing: hi def link NvimTreeDiagnosticHintFolderHL NvimTreeDiagnosticHintFileHL
Executing: 
Searching for "parser/c.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/c.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/c.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/c.so"
Searching for "/opt/neovim/out/lib/nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/c.so"
Searching for "parser/cpp.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/cpp.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/cpp.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/cpp.so"
Searching for "/opt/neovim/out/lib/nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/cpp.so"
Searching for "parser/lua.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/lua.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/lua.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/lua.so"
Searching for "/opt/neovim/out/lib/nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/lua.so"
Searching for "parser/rust.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/rust.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/rust.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/rust.so"
Searching for "/opt/neovim/out/lib/nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/rust.so"
Searching for "parser/python.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/python.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/python.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/python.so"
Searching for "/opt/neovim/out/lib/nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/python.so"
Searching for "parser/javascript.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/javascript.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/javascript.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/javascript.so"
Searching for "/opt/neovim/out/lib/nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/javascript.so"
Searching for "parser/markdown.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/markdown.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/markdown.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/markdown.so"
Searching for "/opt/neovim/out/lib/nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/markdown.so"
Searching for "parser/markdown_inline.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/markdown_inline.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/markdown_inline.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/markdown_inline.so"
Searching for "/opt/neovim/out/lib/nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/markdown_inline.so"
Executing:  highlight IndentBlanklineChar                guifg=#51576d 
Executing:  highlight IndentBlanklineSpaceChar           guifg=#51576d 
Executing:  highlight IndentBlanklineSpaceCharBlankline  guifg=#51576d 
Executing:  highlight NormalFloat                        guibg=combine 
Executing:  highlight BufferlineOffsetTitleBase          cterm=bold gui=bold guifg=#8caaee guibg=#292c3c 
Executing:  highlight BufferlineOffsetTitleBright        cterm=bold gui=bold guifg=#8caaee guibg=#292c3c 
Executing:  highlight TreesitterContextBottom            gui=underline, guisp=#51576d                    
finished sourcing /Users/embe221ed/.config/nvim/init.lua
Searching for "filetype.lua filetype.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/filetype.lua"
Searching for "/Users/embe221ed/.config/nvim/filetype.vim"
sourcing "/Users/embe221ed/.config/nvim/filetype.vim"
line 1: " my filetype file
line 2: if exists("did_load_filetypes")
line 3:   finish
finished sourcing /Users/embe221ed/.config/nvim/filetype.vim
Searching for "/Users/embe221ed/.local/share/nvim/site/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/site/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/filetype.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/filetype.lua"
sourcing "/opt/neovim/out/share/nvim/runtime/filetype.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/filetype.lua
Searching for "/opt/neovim/out/share/nvim/runtime/filetype.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/filetype.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/filetype.vim"
Searching for "/opt/neovim/out/lib/nvim/filetype.lua"
Searching for "/opt/neovim/out/lib/nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/filetype.lua"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/filetype.vim"
Executing: so $VIMRUNTIME/syntax/syntax.vim
sourcing "/opt/neovim/out/share/nvim/runtime/syntax/syntax.vim"
line 1: " Vim syntax support file
line 2: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 3: " Last Change:^I2023 Aug 10
line 4: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 5: 
line 6: " This file is used for ":syntax on".
line 7: " It installs the autocommands and starts highlighting for all buffers.
line 8: 
line 9: if !has("syntax")
line 10:   finish
line 11: endif
line 12: 
line 13: " If Syntax highlighting appears to be on already, turn it off first, so that
line 14: " any leftovers are cleared.
line 15: if exists("syntax_on") || exists("syntax_manual")
line 16:   so <sfile>:p:h/nosyntax.vim
line 17: endif
line 18: 
line 19: " Load the Syntax autocommands and set the default methods for highlighting.
line 20: runtime syntax/synload.vim
Searching for "syntax/synload.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/site/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/syntax/synload.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/syntax/synload.vim"
line 20: sourcing "/opt/neovim/out/share/nvim/runtime/syntax/synload.vim"
line 1: " Vim syntax support file
line 2: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 3: " Last Change:^I2023 Aug 10
line 4: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 5: 
line 6: " This file sets up for syntax highlighting.
line 7: " It is loaded from "syntax.vim" and "manual.vim".
line 8: " 1. Set the default highlight groups.
line 9: " 2. Install Syntax autocommands for all the available syntax files.
line 10: 
line 11: if !has("syntax")
line 12:   finish
line 13: endif
line 14: 
line 15: " let others know that syntax has been switched on
line 16: let syntax_on = 1
line 17: 
line 18: " Line continuation is used here, remove 'C' from 'cpoptions'
line 19: let s:cpo_save = &cpo
line 20: set cpo&vim
line 21: 
line 22: " First remove all old syntax autocommands.
line 23: au! Syntax
line 24: 
line 25: au Syntax *^I^Icall s:SynSet()
line 26: 
line 27: fun! s:SynSet()
line 58: 
line 59: 
line 60: " Handle adding doxygen to other languages (C, C++, C#, IDL, java, php, DataScript)
line 61: au Syntax c,cpp,cs,idl,java,php,datascript if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
line 66: 
line 67: 
line 68: " Source the user-specified syntax highlighting file
line 69: if exists("mysyntaxfile")
line 70:   let s:fname = expand(mysyntaxfile)
line 71:   if filereadable(s:fname)
line 72:     execute "source " . fnameescape(s:fname)
line 73:   endif
line 74: endif
line 75: 
line 76: " Restore 'cpoptions'
line 77: let &cpo = s:cpo_save
line 78: unlet s:cpo_save
finished sourcing /opt/neovim/out/share/nvim/runtime/syntax/synload.vim
continuing in /opt/neovim/out/share/nvim/runtime/syntax/syntax.vim
line 21: 
line 22: " Load the FileType autocommands if not done yet.
line 23: if exists("did_load_filetypes")
line 24:   let s:did_ft = 1
line 25: else
line 26:   filetype on
line 27:   let s:did_ft = 0
line 28: endif
line 29: 
line 30: " Set up the connection between FileType and Syntax autocommands.
line 31: " This makes the syntax automatically set when the file type is detected
line 32: " unless treesitter highlighting is enabled.
line 33: " Avoid an error when 'verbose' is set and <amatch> expansion fails.
line 34: augroup syntaxset
line 35:   au! FileType *^Iif !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
line 36: augroup END
line 37: 
line 38: " Execute the syntax autocommands for the each buffer.
line 39: " If the filetype wasn't detected yet, do that now.
line 40: " Always do the syntaxset autocommands, for buffers where the 'filetype'
line 41: " already was set manually (e.g., help buffers).
line 42: doautoall syntaxset FileType
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
line 43: if !s:did_ft
line 44:   doautoall filetypedetect BufRead
line 45: endif
finished sourcing /opt/neovim/out/share/nvim/runtime/syntax/syntax.vim
Reading ShaDa file "/Users/embe221ed/.local/state/nvim/shada/main.shada" info marks oldfiles
Found a swap file that is not useful, deleting it
Executing BufReadPre Autocommands for "*"
autocommand <Lua 51: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/handler/event.lua:72>

Executing: augroup filetypedetect
Executing: augroup END
Executing: 
Reading ShaDa file "/Users/embe221ed/.local/state/nvim/shada/main.shada" marks
Executing BufReadPost Autocommands for "*"
autocommand <Lua 50: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/handler/event.lua:72>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 49: /opt/neovim/out/share/nvim/runtime/filetype.lua:10>

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling <SNR>2_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 20: runtime! ftplugin/javascript[.]{vim,lua} ftplugin/javascript_*.{vim,lua} ftplugin/javascript/*.{vim,lua}
Searching for "ftplugin/javascript[.]{vim,lua} ftplugin/javascript_*.{vim,lua} ftplugin/javascript/*.{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/javascript/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/javascript[.]{vim,lua}"
line 20: sourcing "/opt/neovim/out/share/nvim/runtime/ftplugin/javascript.vim"
line 1: " Vim filetype plugin file
line 2: " Language:     Javascript
line 3: " Maintainer:   Doug Kearns <dougkearns@gmail.com>
line 4: " Contributor:  Romain Lafourcade <romainlafourcade@gmail.com>
line 5: " Last Change:^I2024 Jan 14
line 6: " ^I^I2024 May 23 by Riley Bruins <ribru17@gmail.com> ('commentstring')
line 7: 
line 8: if exists("b:did_ftplugin")
line 9:     finish
line 10: endif
line 11: let b:did_ftplugin = 1
line 12: 
line 13: let s:cpo_save = &cpo
line 14: set cpo-=C
line 15: 
line 16: " Set 'formatoptions' to break comment lines but not other lines,
line 17: " and insert the comment leader when hitting <CR> or using "o".
line 18: setlocal formatoptions-=t formatoptions+=croql
line 19: 
line 20: " Set completion with CTRL-X CTRL-O to autoloaded function.
line 21: if exists('&ofu')
line 22:     setlocal omnifunc=javascriptcomplete#CompleteJS
line 23: endif
line 24: 
line 25: " Set 'comments' to format dashed lists in comments.
line 26: setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
line 27: 
line 28: setlocal commentstring=//\ %s
line 29: 
line 30: " Change the :browse e filter to primarily show JavaScript-related files.
line 31: if (has("gui_win32") || has("gui_gtk")) && !exists("b:browsefilter")
line 32:     let b:browsefilter = "JavaScript Files (*.js)\t*.js\n" .. "JSX Files (*.jsx)\t*.jsx\n" .. "JavaScript Modules (*.es, *.es6, *.cjs, *.mjs, *.jsm)\t*.es;*.es6;*.cjs;*.mjs;*.jsm\n" .. "Vue Templates (*.vue)\t*.vue\n" .. "JSON Files (*.json)\t*.json\n"
line 38:     if has("win32")
line 39:         let b:browsefilter ..= "All Files (*.*)\t*\n"
line 40:     else
line 41:         let b:browsefilter ..= "All Files (*)\t*\n"
line 42:     endif
line 43: endif
line 44: 
line 45: " The following suffixes should be implied when resolving filenames
line 46: setlocal suffixesadd+=.js,.jsx,.es,.es6,.cjs,.mjs,.jsm,.vue,.json
line 47: 
line 48: " The following suffixes should have low priority
line 49: "   .snap    jest snapshot
line 50: setlocal suffixes+=.snap
line 51: 
line 52: " Remove irrelevant part of 'path'.
line 53: " User is expected to augment it with contextually-relevant paths
line 54: setlocal path-=/usr/include
line 55: 
line 56: " Matchit configuration
line 57: if exists("loaded_matchit")
line 58:     let b:match_ignorecase = 0
line 59:     let b:match_words = '\<do\>:\<while\>,' .. '<\@<=\([^ \t>/]\+\)\%(\s\+[^>]*\%([^/]>\|$\)\|>\|$\):<\@<=/\1>,' .. '<\@<=\%([^ \t>/]\+\)\%(\s\+[^/>]*\|$\):/>'
line 63: endif
line 64: 
line 65: " Set 'define' to a comprehensive value
line 66: let &l:define = '\(^\s*(*async\s\+function\|(*function\)' .. '\|^\s*\(\*\|static\|async\|get\|set\|\i\+\.\)' .. '\|^\s*\(\ze\i\+\)\(([^)]*).*{$\|\s*[:=,]\)' .. '\|^\s*\(export\s\+\|export\s\+default\s\+\)*\(var\|let\|const\|function\|class\)' .. '\|\<as\>'
line 72: 
line 73: let b:undo_ftplugin = "setl fo< ofu< com< cms< sua< su< def< pa<" .. "| unlet! b:browsefilter b:match_ignorecase b:match_words"
line 76: 
line 77: let &cpo = s:cpo_save
line 78: unlet s:cpo_save
line 79: 
line 80: " vim: textwidth=78 tabstop=8 shiftwidth=4 softtabstop=4 expandtab
finished sourcing /opt/neovim/out/share/nvim/runtime/ftplugin/javascript.vim
continuing in <SNR>2_LoadFTPlugin
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/javascript_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/javascript/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/javascript[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/javascript_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/javascript/*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/javascript/*.{vim,lua}"
line 21:       endfor
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 21:       endfor
line 22:     endif
<SNR>2_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling <SNR>3_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 15: runtime! indent/javascript[.]{vim,lua}
Searching for "indent/javascript[.]{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/indent/javascript[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/indent/javascript[.]{vim,lua}"
line 15: sourcing "/opt/neovim/out/share/nvim/runtime/indent/javascript.vim"
line 1: " Vim indent file
line 2: " Language: Javascript
line 3: " Maintainer: Chris Paul ( https://github.com/bounceme )
line 4: " URL: https://github.com/pangloss/vim-javascript
line 5: " Last Change: December 4, 2017
line 6: 
line 7: " Only load this indent file when no other was loaded.
line 8: if exists('b:did_indent')
line 9:   finish
line 10: endif
line 11: let b:did_indent = 1
line 12: 
line 13: " Now, set up our indentation expression and keys that trigger it.
line 14: setlocal indentexpr=GetJavascriptIndent()
line 15: setlocal autoindent nolisp nosmartindent
line 16: setlocal indentkeys+=0],0)
line 17: " Testable with something like:
line 18: " vim  -eNs "+filetype plugin indent on" "+syntax on" "+set ft=javascript" \
line 19: "       "+norm! gg=G" '+%print' '+:q!' testfile.js \
line 20: "       | diff -uBZ testfile.js -
line 21: 
line 22: let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'
line 23: 
line 24: " Only define the function once.
line 25: if exists('*GetJavascriptIndent')
line 26:   finish
line 27: endif
line 28: 
line 29: let s:cpo_save = &cpo
line 30: set cpo&vim
line 31: 
line 32: " indent correctly if inside <script>
line 33: " vim/vim@690afe1 for the switch from cindent
line 34: " overridden with b:html_indent_script1
line 35: call extend(g:,{'html_indent_script1': 'inc'},'keep')
line 36: 
line 37: " Regex of syntax group names that are or delimit string or are comments.
line 38: let s:bvars = { 'syng_strcom': 'string\|comment\|regex\|special\|doc\|template\%(braces\)\@!', 'syng_str': 'string\|template\|special' }
line 41: " template strings may want to be excluded when editing graphql:
line 42: " au! Filetype javascript let b:syng_str = '^\%(.*template\)\@!.*string\|special'
line 43: " au! Filetype javascript let b:syng_strcom = '^\%(.*template\)\@!.*string\|comment\|regex\|special\|doc'
line 44: 
line 45: function s:GetVars()
line 48: 
line 49: " Get shiftwidth value
line 50: if exists('*shiftwidth')
line 51:   function s:sw()
line 54: else
line 55:   function s:sw()
line 58: endif
line 59: 
line 60: " Performance for forwards search(): start search at pos rather than masking
line 61: " matches before pos.
line 62: let s:z = has('patch-7.4.984') ? 'z' : ''
line 63: 
line 64: " Expression used to check whether we should skip a match with searchpair().
line 65: let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"
line 66: let s:in_comm = s:skip_expr[:-14] . "'comment\\|doc'"
line 67: 
line 68: let s:rel = has('reltime')
line 69: " searchpair() wrapper
line 70: if s:rel
line 71:   function s:GetPair(start,end,flags,skip)
line 74: else
line 75:   function s:GetPair(start,end,flags,skip)
line 78: endif
line 79: 
line 80: function s:SynAt(l,c)
line 88: 
line 89: function s:ParseCino(f)
line 107: 
line 108: " Optimized {skip} expr, only callable from the search loop which
line 109: " GetJavascriptIndent does to find the containing [[{(] (side-effects)
line 110: function s:SkipFunc()
line 132: 
line 133: function s:AlternatePair()
line 156: 
line 157: function s:Nat(int)
line 160: 
line 161: function s:LookingAt()
line 164: 
line 165: function s:Token()
line 168: 
line 169: function s:PreviousToken(...)
line 193: 
line 194: function s:Pure(f,...)
line 197: 
line 198: function s:SearchLoop(pat,flags,expr)
line 201: 
line 202: function s:ExprCol()
line 228: 
line 229: " configurable regexes that define continuation lines, not including (, {, or [.
line 230: let s:opfirst = '^' . get(g:,'javascript_opfirst', '\C\%([<>=,.?^%|/&]\|\([-:+]\)\1\@!\|\*\+\|!=\|in\%(stanceof\)\=\>\)')
line 232: let s:continuation = get(g:,'javascript_continuation', '\C\%([<=,.~!?/*^%|&:]\|+\@<!+\|-\@<!-\|=\@<!>\|\<\%(typeof\|new\|delete\|void\|in\|instanceof\|await\)\)') . '$'
line 234: 
line 235: function s:Continues()
line 244: 
line 245: " Check if line 'lnum' has a balanced amount of parentheses.
line 246: function s:Balanced(lnum,line)
line 261: 
line 262: function s:OneScope()
line 278: 
line 279: function s:DoWhile()
line 295: 
line 296: " returns total offset from braceless contexts. 'num' is the lineNr which
line 297: " encloses the entire context, 'cont' if whether a:firstline is a continued
line 298: " expression, which could have started in a braceless context
line 299: function s:IsContOne(cont)
line 318: 
line 319: function s:IsSwitch()
line 323: 
line 324: " https://github.com/sweet-js/sweet.js/wiki/design#give-lookbehind-to-the-reader
line 325: function s:IsBlock()
line 351: 
line 352: function GetJavascriptIndent()
line 484: 
line 485: let &cpo = s:cpo_save
line 486: unlet s:cpo_save
finished sourcing /opt/neovim/out/share/nvim/runtime/indent/javascript.vim
continuing in <SNR>3_LoadIndent
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/indent/javascript[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/indent/javascript[.]{vim,lua}"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 16:       endfor
line 17:     endif
<SNR>3_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand <Lua 88: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:86>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 47: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:20>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 137: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Searching for "parser/javascript.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/javascript.*"
Searching for "queries/javascript/locals.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/locals.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/locals.scm"
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 244: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:59>

Searching for "parser/javascript.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/javascript.*"
Searching for "queries/javascript/injections.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/injections.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/injections.scm"
Searching for "queries/ecma/injections.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/ecma/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/ecma/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/ecma/injections.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/ecma/injections.scm"
Searching for "queries/jsx/injections.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/jsx/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/jsx/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/jsx/injections.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/jsx/injections.scm"
Searching for "queries/javascript/rainbow-delimiters-react.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/rainbow-delimiters-react.scm"
Executing: 
Executing FileType Autocommands for "javascript"
autocommand <Lua 183: ~/.local/share/nvim/lazy/nvim-lspconfig/lua/lspconfig/configs.lua:104>

/opt/neovim/out/share/nvim/runtime/lua/vim/lsp/rpc.lua:804: Spawning language server with cmd: `{ "typescript-language-server", "--stdio" }` failed. The language server is either not installed, missing from PATH, or not executable.
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 346: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:77>

Executing: 
Executing FileType Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing FileType Autocommands for "*"
autocommand <Lua 389: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/install.lua:561>

Searching for "parser/javascript.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/javascript.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/javascript.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/javascript.so"
Searching for "/opt/neovim/out/lib/nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/javascript.so"
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 390: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Searching for "queries/javascript/highlights.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/highlights.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/highlights.scm"
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling <SNR>109_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   0verbose let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 26:         exe $'runtime! syntax/{name}[.]{{vim,lua}} syntax/{name}/*.{{vim,lua}}'
line 27:       endif
line 28:     endfor
line 29:   endif
<SNR>109_SynSet returning #0

continuing in Syntax Autocommands for "*"

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 413: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing: 
autocommand if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing: if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtime! scripts.vim | endif
Executing:  runtime! scripts.vim | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:130>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif

Executing: if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
Executing:    unlet b:git_dir | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand <Lua 256: /opt/neovim/out/share/nvim/runtime/plugin/editorconfig.lua:4>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 248: ~/.local/share/nvim/lazy/guess-indent.nvim/lua/guess-indent/init.lua:35>

Excluded because of editorconfig settings.
Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 267: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:210>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 385: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:136>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 395: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:130>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 87: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:86>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand autocmd SafeState * ++once call s:Highlight_Matching_Pair()

Executing: autocmd SafeState * ++once call s:Highlight_Matching_Pair()
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 219: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 344: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 80: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif

Executing: if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
Executing:     setlocal nolist linebreak filetype=markdown | endif
Executing:  endif
Executing BufEnter Autocommands for "*"
autocommand lua require('goto-preview').buffer_entered()

Executing: lua require('goto-preview').buffer_entered()
Executing BufEnter Autocommands for "*"
autocommand <Lua 295: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:104>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif

Executing: if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif
Executing:  quit | endif
Executing:  endif
autocommand <Lua 218: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 343: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <Lua 386: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:141>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing VimEnter Autocommands for "*"
autocommand <Lua 33: vim/_defaults.lua:0>

Executing: 
Executing VimEnter Autocommands for "*"
autocommand <Lua 157: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing VimEnter Autocommands for "*"
autocommand silent! autocmd! FileExplorer *

Executing: silent! autocmd! FileExplorer *
autocommand <Lua 406: ~/.local/share/nvim/lazy/noice.nvim/lua/noice/init.lua:18>

Executing:     hi default link NotifyBackground Normal
Executing:     hi default NotifyERRORBorder guifg=#8A1F1F
Executing:     hi default NotifyWARNBorder guifg=#79491D
Executing:     hi default NotifyINFOBorder guifg=#4F6752
Executing:     hi default NotifyDEBUGBorder guifg=#8B8B8B
Executing:     hi default NotifyTRACEBorder guifg=#4F3552
Executing:     hi default NotifyERRORIcon guifg=#F70067
Executing:     hi default NotifyWARNIcon guifg=#F79000
Executing:     hi default NotifyINFOIcon guifg=#A9FF68
Executing:     hi default NotifyDEBUGIcon guifg=#8B8B8B
Executing:     hi default NotifyTRACEIcon guifg=#D484FF
Executing:     hi default NotifyERRORTitle  guifg=#F70067
Executing:     hi default NotifyWARNTitle guifg=#F79000
Executing:     hi default NotifyINFOTitle guifg=#A9FF68
Executing:     hi default NotifyDEBUGTitle  guifg=#8B8B8B
Executing:     hi default NotifyTRACETitle  guifg=#D484FF
Executing:     hi default link NotifyERRORBody Normal
Executing:     hi default link NotifyWARNBody Normal
Executing:     hi default link NotifyINFOBody Normal
Executing:     hi default link NotifyDEBUGBody Normal
Executing:     hi default link NotifyTRACEBody Normal
Executing: 
Executing:     hi default link NotifyLogTime Comment
Executing:     hi default link NotifyLogTitle Special
Executing:   
Executing:   augroup NvimNotifyRefreshHighlights
Executing:     autocmd!
Executing:     autocmd ColorScheme * lua require('notify.config.highlights').setup()
Executing:   augroup END
/opt/neovim/out/share/nvim/runtime/lua/vim/lsp/rpc.lua:804: Spawning language server with cmd: `{ "typescript-language-server", "--stdio" }` failed. The language server is either not installed, missing from PATH, or not executable.
Excluded because of editorconfig settings.
Executing:       anoremenu PopUp.Go\ to\ definition      <Cmd>lua vim.lsp.buf.definition()<CR>
Executing:       amenu     PopUp.Open\ in\ web\ browser  gx
Executing:       anoremenu PopUp.Inspect                 <Cmd>Inspect<CR>
Executing:       anoremenu PopUp.-1-                     <Nop>
Executing:       vnoremenu PopUp.Cut                     "+x
Executing:       vnoremenu PopUp.Copy                    "+y
Executing:       anoremenu PopUp.Paste                   "+gP
Executing:       vnoremenu PopUp.Paste                   "+P
Executing:       vnoremenu PopUp.Delete                  "_x
Executing:       nnoremenu PopUp.Select\ All             ggVG
Executing:       vnoremenu PopUp.Select\ All             gg0oG$
Executing:       inoremenu PopUp.Select\ All             <C-Home><C-O>VG
Executing:       anoremenu PopUp.-2-                     <Nop>
Executing:       anoremenu PopUp.How-to\ disable\ mouse  <Cmd>help disable-mouse<CR>
Executing: 
Executing:       amenu disable PopUp.Go\ to\ definition
Executing:       amenu disable PopUp.Open\ in\ web\ browser
Executing:     
Searching for "ftplugin.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftplugin.vim"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin.vim"
sourcing "/opt/neovim/out/share/nvim/runtime/ftplugin.vim"
line 1: " Vim support file to switch on loading plugins for file types
line 2: "
line 3: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 4: " Last change:^I2023 Aug 10
line 5: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 6: 
line 7: if exists("did_load_ftplugin")
line 8:   finish
line 9: endif
line 10: let did_load_ftplugin = 1
line 11: 
line 12: augroup filetypeplugin
line 13:   au FileType * call s:LoadFTPlugin()
line 14: 
line 15:   func! s:LoadFTPlugin()
line 39: augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/ftplugin.vim
Searching for "/opt/neovim/out/lib/nvim/ftplugin.vim"
Searching for "indent.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/indent.vim"
Searching for "/Users/embe221ed/.local/share/nvim/site/indent.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/indent.vim"
sourcing "/opt/neovim/out/share/nvim/runtime/indent.vim"
line 1: " Vim support file to switch on loading indent files for file types
line 2: "
line 3: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 4: " Last Change:^I2023 Aug 10
line 5: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 6: 
line 7: if exists("did_indent_on")
line 8:   finish
line 9: endif
line 10: let did_indent_on = 1
line 11: 
line 12: augroup filetypeindent
line 13:   au FileType * call s:LoadIndent()
line 14:   func! s:LoadIndent()
line 33: augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/indent.vim
Searching for "/opt/neovim/out/lib/nvim/indent.vim"
could not source "/etc/xdg/nvim/sysinit.vim"
could not source "$VIM/sysinit.vim"
sourcing "/Users/embe221ed/.config/nvim/init.lua"
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /opt/neovim/out/share/nvim/runtime/filetype.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/filetype.lua"
Executing:   augroup filetypedetect
Executing:   runtime! ftdetect/*.{vim,lua}
Searching for "ftdetect/*.{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftdetect/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftdetect/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftdetect/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftdetect/*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftdetect/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftdetect/*.{vim,lua}"
not found in runtime path: "ftdetect/*.{vim,lua}"
Executing:   augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/filetype.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/plugin/nvim_jdtls.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/plugin/nvim_jdtls.vim"
line 1: if exists('g:nvim_jdtls')
line 2:   finish
line 3: endif
line 4: let g:nvim_jdtls = 1
line 5: 
line 6: au BufReadCmd jdt://* lua require('jdtls').open_classfile(vim.fn.expand('<amatch>'))
line 7: au BufReadCmd *.class lua require("jdtls").open_classfile(vim.fn.expand("<amatch>"))
line 8: command! JdtWipeDataAndRestart lua require('jdtls.setup').wipe_data_and_restart()
line 9: command! JdtShowLogs lua require('jdtls.setup').show_logs()
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/plugin/nvim_jdtls.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/plugin/lspconfig.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/plugin/lspconfig.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/plugin/lspconfig.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/plugin/illuminate.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/plugin/illuminate.vim"
line 1: " illuminate.vim - Vim plugin for selectively illuminating other uses of current word
line 2: " Maintainer:^IAdam P. Regasz-Rethy (RRethy) <rethy.spud@gmail.com>
line 3: " Version: 2.0
line 4: 
line 5: if exists('g:loaded_illuminate')
line 6:   finish
line 7: endif
line 8: 
line 9: let g:loaded_illuminate = 1
line 10: 
line 11: if has('nvim-0.7.2') && get(g:, 'Illuminate_useDeprecated', 0) != 1
line 12: lua << EOF
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/plugin/nvim-treesitter.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/plugin/nvim-treesitter.lua"
Executing: command! -bar -nargs=+ -bang -complete=custom,nvim_treesitter#installable_parsers TSInstallFromGrammar lua require'nvim-treesitter.install'.commands.TSInstallFromGrammar['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -bang -complete=custom,nvim_treesitter#installable_parsers TSInstall lua require'nvim-treesitter.install'.commands.TSInstall['run<bang>'](<f-args>)
Executing: command! -bar -nargs=* -complete=custom,nvim_treesitter#installed_parsers TSUpdate lua require'nvim-treesitter.install'.commands.TSUpdate['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -bang -complete=custom,nvim_treesitter#installable_parsers TSInstallSync lua require'nvim-treesitter.install'.commands.TSInstallSync['run<bang>'](<f-args>)
Executing: command! -bar -nargs=* -complete=custom,nvim_treesitter#installed_parsers TSUpdateSync lua require'nvim-treesitter.install'.commands.TSUpdateSync['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#installed_parsers TSUninstall lua require'nvim-treesitter.install'.commands.TSUninstall['run<bang>'](<f-args>)
Executing: command! -bar -nargs=? -complete=custom,nvim_treesitter#available_modules TSModuleInfo lua require'nvim-treesitter.info'.commands.TSModuleInfo['run<bang>'](<f-args>)
Executing: command! -bar -nargs=0 TSInstallInfo lua require'nvim-treesitter.info'.commands.TSInstallInfo['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_query_groups TSEditQueryUserAfter lua require'nvim-treesitter.configs'.commands.TSEditQueryUserAfter['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_query_groups TSEditQuery lua require'nvim-treesitter.configs'.commands.TSEditQuery['run<bang>'](<f-args>)
Executing: command! -bar -nargs=0 TSConfigInfo lua require'nvim-treesitter.configs'.commands.TSConfigInfo['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_modules TSToggle lua require'nvim-treesitter.configs'.commands.TSToggle['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_modules TSDisable lua require'nvim-treesitter.configs'.commands.TSDisable['run<bang>'](<f-args>)
Executing: command! -bar -nargs=+ -complete=custom,nvim_treesitter#available_modules TSEnable lua require'nvim-treesitter.configs'.commands.TSEnable['run<bang>'](<f-args>)
Executing: command! -bar -nargs=1 -complete=custom,nvim_treesitter#available_modules TSBufToggle lua require'nvim-treesitter.configs'.commands.TSBufToggle['run<bang>'](<f-args>)
Executing: command! -bar -nargs=1 -complete=custom,nvim_treesitter#available_modules TSBufDisable lua require'nvim-treesitter.configs'.commands.TSBufDisable['run<bang>'](<f-args>)
Executing: command! -bar -nargs=1 -complete=custom,nvim_treesitter#available_modules TSBufEnable lua require'nvim-treesitter.configs'.commands.TSBufEnable['run<bang>'](<f-args>)
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/plugin/nvim-treesitter.lua
continuing in nvim_exec2() called at /Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/plugin/illuminate.vim:45
Executing: augroup filetypedetect
Executing: augroup END
line 46: 
line 47: lua require('illuminate').set_highlight_defaults()
Executing:     hi def IlluminatedWordText guifg=none guibg=none gui=underline
Executing:     hi def IlluminatedWordRead guifg=none guibg=none gui=underline
Executing:     hi def IlluminatedWordWrite guifg=none guibg=none gui=underline
Executing:     
line 48: augroup vim_illuminate_autocmds
line 49:     autocmd!
line 50:     autocmd ColorScheme * lua require('illuminate').set_highlight_defaults()
line 51: augroup END
line 52: 
line 53: finish
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/plugin/illuminate.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/plugin/plenary.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/plugin/plenary.vim"
line 1: 
line 2: " Create command for running busted
line 3: command! -nargs=1 -complete=file PlenaryBustedFile lua require('plenary.test_harness').test_file([[<args>]])
line 5: 
line 6: command! -nargs=+ -complete=file PlenaryBustedDirectory lua require('plenary.test_harness').test_directory_command([[<args>]])
line 8: 
line 9: nnoremap <Plug>PlenaryTestFile :lua require('plenary.test_harness').test_file(vim.fn.expand("%:p"))<CR>
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/plugin/plenary.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/plugin/todo.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/plugin/todo.vim"
line 1: command! -nargs=* TodoQuickFix lua require("todo-comments.search").setqflist(<q-args>)
line 2: command! -nargs=* TodoLocList lua require("todo-comments.search").setloclist(<q-args>)
line 3: command! -nargs=* TodoTelescope Telescope todo-comments todo <args>
line 4: command! -nargs=* TodoFzfLua lua require("todo-comments.fzf").todo() <args>
line 5: command! -nargs=* TodoTrouble Trouble todo <args>
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/plugin/todo.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/plugin/no-neck-pain.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/plugin/no-neck-pain.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/plugin/no-neck-pain.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/plugin/rhubarb.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/plugin/rhubarb.vim"
line 1: " rhubarb.vim - fugitive.vim extension for GitHub
line 2: " Maintainer:   Tim Pope <http://tpo.pe/>
line 3: 
line 4: if exists("g:loaded_rhubarb") || v:version < 700 || &cp
line 5:   finish
line 6: endif
line 7: let g:loaded_rhubarb = 1
line 8: 
line 9: if !exists('g:dispatch_compilers')
line 10:   let g:dispatch_compilers = {}
line 11: endif
line 12: let g:dispatch_compilers['hub'] = 'git'
line 13: 
line 14: function! s:SetUpMessage(filename) abort
line 31: 
line 32: augroup rhubarb
line 33:   autocmd!
line 34:   if exists('+omnifunc')
line 35:     autocmd FileType gitcommit call s:SetUpMessage(expand('<afile>:p'))
line 36:   endif
line 37:   autocmd BufEnter * if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
line 41:   autocmd BufNewFile,BufRead *.git/{PULLREQ_EDIT,ISSUE_EDIT,RELEASE_EDIT}MSG if &ft ==# '' || &ft ==# 'conf' |   set ft=gitcommit | endif
line 45: augroup END
line 46: 
line 47: if !exists('g:fugitive_browse_handlers')
line 48:   let g:fugitive_browse_handlers = []
line 49: endif
line 50: 
line 51: if index(g:fugitive_browse_handlers, function('rhubarb#FugitiveUrl')) < 0
line 52:   call insert(g:fugitive_browse_handlers, function('rhubarb#FugitiveUrl'))
line 53: endif
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/plugin/rhubarb.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim"
line 1: " fugitive.vim - A Git wrapper so awesome, it should be illegal
line 2: " Maintainer:   Tim Pope <http://tpo.pe/>
line 3: " Version:      3.7
line 4: " GetLatestVimScripts: 2975 1 :AutoInstall: fugitive.vim
line 5: 
line 6: if exists('g:loaded_fugitive')
line 7:   finish
line 8: endif
line 9: let g:loaded_fugitive = 1
line 10: 
line 11: let s:bad_git_dir = '/$\|^fugitive:'
line 12: 
line 13: " FugitiveGitDir() returns the detected Git dir for the given buffer number,
line 14: " or the current buffer if no argument is passed.  This will be an empty
line 15: " string if no Git dir was found.  Use !empty(FugitiveGitDir()) to check if
line 16: " Fugitive is active in the current buffer.  Do not rely on this for direct
line 17: " filesystem access; use FugitiveFind('.git/whatever') instead.
line 18: function! FugitiveGitDir(...) abort
line 47: 
line 48: " FugitiveReal() takes a fugitive:// URL and returns the corresponding path in
line 49: " the work tree.  This may be useful to get a cleaner path for inclusion in
line 50: " the statusline, for example.  Note that the file and its parent directories
line 51: " are not guaranteed to exist.
line 52: "
line 53: " This is intended as an abstract API to be used on any "virtual" path.  For a
line 54: " buffer named foo://bar, check for a function named FooReal(), and if it
line 55: " exists, call FooReal("foo://bar").
line 56: function! FugitiveReal(...) abort
line 70: 
line 71: " FugitiveFind() takes a Fugitive object and returns the appropriate Vim
line 72: " buffer name.  You can use this to generate Fugitive URLs ("HEAD:README") or
line 73: " to get the absolute path to a file in the Git dir (".git/HEAD"), the common
line 74: " dir (".git/config"), or the work tree (":(top)Makefile").
line 75: "
line 76: " An optional second argument provides the Git dir, or the buffer number of a
line 77: " buffer with a Git dir.  The default is the current buffer.
line 78: function! FugitiveFind(...) abort
line 85: 
line 86: " FugitiveParse() takes a fugitive:// URL and returns a 2 element list
line 87: " containing an object name ("commit:file") and the Git dir.  It's effectively
line 88: " the inverse of FugitiveFind().
line 89: function! FugitiveParse(...) abort
line 100: 
line 101: " FugitiveGitVersion() queries the version of Git in use.  Pass up to 3
line 102: " arguments to return a Boolean of whether a certain minimum version is
line 103: " available (FugitiveGitVersion(2,3,4) checks for 2.3.4 or higher) or no
line 104: " arguments to get a raw string.
line 105: function! FugitiveGitVersion(...) abort
line 108: 
line 109: " FugitiveResult() returns an object encapsulating the result of the most
line 110: " recent :Git command.  Will be empty if no result is available.  During a
line 111: " User FugitiveChanged event, this is guaranteed to correspond to the :Git
line 112: " command that triggered the event, or be empty if :Git was not the trigger.
line 113: " Pass in the name of a temp buffer to get the result object for that command
line 114: " instead.  Contains the following keys:
line 115: "
line 116: " * "args": List of command arguments, starting with the subcommand.  Will be
line 117: "   empty for usages like :Git --help.
line 118: " * "git_dir": Git dir of the relevant repository.
line 119: " * "exit_status": The integer exit code of the process.
line 120: " * "flags": Flags passed directly to Git, like -c and --help.
line 121: " * "file": Path to file containing command output.  Not guaranteed to exist,
line 122: "   so verify with filereadable() before trying to access it.
line 123: function! FugitiveResult(...) abort
line 126: 
line 127: " FugitiveExecute() runs Git with a list of arguments and returns a dictionary
line 128: " with the following keys:
line 129: "
line 130: " * "exit_status": The integer exit code of the process.
line 131: " * "stdout": The stdout produced by the process, as a list of lines.
line 132: " * "stderr": The stdout produced by the process, as a list of lines.
line 133: "
line 134: " An optional second argument provides the Git dir, or the buffer number of a
line 135: " buffer with a Git dir.  The default is the current buffer.
line 136: "
line 137: " An optional final argument is a callback Funcref, for asynchronous
line 138: " execution.
line 139: function! FugitiveExecute(args, ...) abort
line 142: 
line 143: " FugitiveShellCommand() turns an array of arguments into a Git command string
line 144: " which can be executed with functions like system() and commands like :!.
line 145: " Integer arguments will be treated as buffer numbers, and the appropriate
line 146: " relative path inserted in their place.
line 147: "
line 148: " An optional second argument provides the Git dir, or the buffer number of a
line 149: " buffer with a Git dir.  The default is the current buffer.
line 150: function! FugitiveShellCommand(...) abort
line 153: 
line 154: " FugitiveConfig() get returns an opaque structure that can be passed to other
line 155: " FugitiveConfig functions in lieu of a Git directory.  This can be faster
line 156: " when performing multiple config queries.  Do not rely on the internal
line 157: " structure of the return value as it is not guaranteed.  If you want a full
line 158: " dictionary of every config value, use FugitiveConfigGetRegexp('.*').
line 159: "
line 160: " An optional argument provides the Git dir, or the buffer number of a
line 161: " buffer with a Git dir.  The default is the current buffer.  Pass a blank
line 162: " string to limit to the global config.
line 163: function! FugitiveConfig(...) abort
line 166: 
line 167: " FugitiveConfigGet() retrieves a Git configuration value.  An optional second
line 168: " argument can be either the object returned by FugitiveConfig(), or a Git
line 169: " dir or buffer number to be passed along to FugitiveConfig().
line 170: function! FugitiveConfigGet(name, ...) abort
line 173: 
line 174: " FugitiveConfigGetAll() is like FugitiveConfigGet() but returns a list of
line 175: " all values.
line 176: function! FugitiveConfigGetAll(name, ...) abort
line 179: 
line 180: " FugitiveConfigGetRegexp() retrieves a dictionary of all configuration values
line 181: " with a key matching the given pattern.  Like git config --get-regexp, but
line 182: " using a Vim regexp.  Second argument has same semantics as
line 183: " FugitiveConfigGet().
line 184: function! FugitiveConfigGetRegexp(pattern, ...) abort
line 187: 
line 188: " FugitiveRemoteUrl() retrieves the remote URL for the given remote name,
line 189: " defaulting to the current branch's remote or "origin" if no argument is
line 190: " given.  Similar to `git remote get-url`, but also attempts to resolve HTTP
line 191: " redirects and SSH host aliases.
line 192: "
line 193: " An optional second argument provides the Git dir, or the buffer number of a
line 194: " buffer with a Git dir.  The default is the current buffer.
line 195: function! FugitiveRemoteUrl(...) abort
line 198: 
line 199: " FugitiveRemote() returns a data structure parsed from the remote URL.
line 200: " For example, for remote URL "https://me@example.com:1234/repo.git", the
line 201: " returned dictionary will contain the following:
line 202: "
line 203: " * "scheme": "https"
line 204: " * "authority": "user@example.com:1234"
line 205: " * "path": "/repo.git" (for SSH URLs this may be a relative path)
line 206: " * "pathname": "/repo.git" (always coerced to absolute path)
line 207: " * "host": "example.com:1234"
line 208: " * "hostname": "example.com"
line 209: " * "port": "1234"
line 210: " * "user": "me"
line 211: " * "path": "/repo.git"
line 212: " * "url": "https://me@example.com:1234/repo.git"
line 213: function! FugitiveRemote(...) abort
line 216: 
line 217: " FugitiveDidChange() triggers a FugitiveChanged event and reloads the summary
line 218: " buffer for the current or given buffer number's repository.  You can also
line 219: " give the result of a FugitiveExecute() and that context will be made
line 220: " available inside the FugitiveChanged() event.
line 221: "
line 222: " Passing the special argument 0 (the number zero) softly expires summary
line 223: " buffers for all repositories.  This can be used after a call to system()
line 224: " with unclear implications.
line 225: function! FugitiveDidChange(...) abort
line 228: 
line 229: " FugitiveHead() retrieves the name of the current branch. If the current HEAD
line 230: " is detached, FugitiveHead() will return the empty string, unless the
line 231: " optional argument is given, in which case the hash of the current commit
line 232: " will be truncated to the given number of characters.
line 233: "
line 234: " An optional second argument provides the Git dir, or the buffer number of a
line 235: " buffer with a Git dir.  The default is the current buffer.
line 236: function! FugitiveHead(...) abort
line 252: 
line 253: function! FugitivePath(...) abort
line 264: 
line 265: function! FugitiveStatusline(...) abort
line 271: 
line 272: let s:resolved_git_dirs = {}
line 273: function! FugitiveActualDir(...) abort
line 283: 
line 284: let s:commondirs = {}
line 285: function! FugitiveCommonDir(...) abort
line 307: 
line 308: function! FugitiveWorkTree(...) abort
line 316: 
line 317: function! FugitiveIsGitDir(...) abort
line 326: 
line 327: function! s:ReadFile(path, line_count) abort
line 337: 
line 338: let s:worktree_for_dir = {}
line 339: let s:dir_for_worktree = {}
line 340: function! s:Tree(path) abort
line 387: 
line 388: function! s:CeilingDirectories() abort
line 404: 
line 405: function! s:ResolveGitDir(git_dir) abort
line 422: 
line 423: function! FugitiveExtractGitDir(path) abort
line 471: 
line 472: function! FugitiveDetect(...) abort
line 484: 
line 485: function! FugitiveGitPath(path) abort
line 488: 
line 489: if exists('+shellslash')
line 490: 
line 491:   function! s:Slash(path) abort
line 494: 
line 495:   function! s:VimSlash(path) abort
line 498: 
line 499:   function FugitiveVimPath(path) abort
line 502: 
line 503: else
line 504: 
line 505:   function! s:Slash(path) abort
line 508: 
line 509:   function! s:VimSlash(path) abort
line 512: 
line 513:   if has('win32unix') && filereadable('/git-bash.exe')
line 514:     function! FugitiveVimPath(path) abort
line 517:   else
line 518:     function! FugitiveVimPath(path) abort
line 521:   endif
line 522: 
line 523: endif
line 524: 
line 525: function! s:ProjectionistDetect() abort
line 542: 
line 543: let s:addr_other = has('patch-8.1.560') || has('nvim-0.5.0') ? '-addr=other' : ''
line 544: let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''
line 545: let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''
line 546: 
line 547: if exists(':G') != 2
line 548:   command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 549: endif
line 550: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 551: 
line 552: if exists(':Gstatus') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 553:   exe 'command! -bang -bar     -range=-1' s:addr_other 'Gstatus exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gstatus is deprecated in favor of :Git (with no arguments)"|echohl NONE'
line 555: endif
line 556: 
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 557: for s:cmd in ['Commit', 'Revert', 'Merge', 'Rebase', 'Pull', 'Push', 'Fetch', 'Blame']
line 558:   if exists(':G' . tolower(s:cmd)) != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 559:     exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#' . s:cmd . 'Complete G' . tolower(s:cmd) 'echohl WarningMSG|echomsg ":G' . tolower(s:cmd) . ' is deprecated in favor of :Git ' . tolower(s:cmd) . '"|echohl NONE|' 'exe fugitive#Command(<line1>, <count>, +"<range>", <bang>0, "<mods>", "' . tolower(s:cmd) . ' " . <q-args>)'
line 562:   endif
line 563: endfor
line 564: unlet s:cmd
line 565: 
line 566: exe "command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Gcd  exe fugitive#Cd(<q-args>, 0)"
line 566: command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Gcd  exe fugitive#Cd(<q-args>, 0)
line 567: exe "command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Glcd exe fugitive#Cd(<q-args>, 1)"
line 567: command! -bar -bang -nargs=? -complete=customlist,fugitive#CdComplete Glcd exe fugitive#Cd(<q-args>, 1)
line 568: 
line 569: exe 'command! -bang -nargs=? -range=-1' s:addr_wins '-complete=customlist,fugitive#GrepComplete Ggrep  exe fugitive#GrepCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 569: command! -bang -nargs=? -range=-1 -addr=windows -complete=customlist,fugitive#GrepComplete Ggrep  exe fugitive#GrepCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 570: exe 'command! -bang -nargs=? -range=-1' s:addr_wins '-complete=customlist,fugitive#GrepComplete Glgrep exe fugitive#GrepCommand(0, <count> > 0 ? <count> : 0, +"<range>", <bang>0, "<mods>", <q-args>)'
line 570: command! -bang -nargs=? -range=-1 -addr=windows -complete=customlist,fugitive#GrepComplete Glgrep exe fugitive#GrepCommand(0, <count> > 0 ? <count> : 0, +"<range>", <bang>0, "<mods>", <q-args>)
line 571: 
line 572: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gclog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")'
line 572: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gclog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")
line 573: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GcLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")'
line 573: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GcLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "c")
line 574: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gllog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")'
line 574: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete Gllog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")
line 575: exe 'command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GlLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")'
line 575: command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#LogComplete GlLog :exe fugitive#LogCommand(<line1>,<count>,+"<range>",<bang>0,"<mods>",<q-args>, "l")
line 576: 
line 577: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Ge       exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)'
line 577: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Ge       exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)
line 578: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gedit    exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)'
line 578: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gedit    exe fugitive#Open("edit<bang>", 0, "<mods>", <q-args>)
line 579: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gpedit   exe fugitive#Open("pedit", <bang>0, "<mods>", <q-args>)'
line 579: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gpedit   exe fugitive#Open("pedit", <bang>0, "<mods>", <q-args>)
line 580: exe 'command! -bar -bang -nargs=* -range=-1' s:addr_other '-complete=customlist,fugitive#EditComplete   Gsplit   exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "split" : "edit"), <bang>0, "<mods>", <q-args>)'
line 580: command! -bar -bang -nargs=* -range=-1 -addr=other -complete=customlist,fugitive#EditComplete   Gsplit   exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "split" : "edit"), <bang>0, "<mods>", <q-args>)
line 581: exe 'command! -bar -bang -nargs=* -range=-1' s:addr_other '-complete=customlist,fugitive#EditComplete   Gvsplit  exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "vsplit" : "edit!"), <bang>0, "<mods>", <q-args>)'
line 581: command! -bar -bang -nargs=* -range=-1 -addr=other -complete=customlist,fugitive#EditComplete   Gvsplit  exe fugitive#Open((<count> > 0 ? <count> : "").(<count> ? "vsplit" : "edit!"), <bang>0, "<mods>", <q-args>)
line 582: exe 'command! -bar -bang -nargs=* -range=-1' s:addr_tabs  '-complete=customlist,fugitive#EditComplete   Gtabedit exe fugitive#Open((<count> >= 0 ? <count> : "")."tabedit", <bang>0, "<mods>", <q-args>)'
line 582: command! -bar -bang -nargs=* -range=-1 -addr=tabs -complete=customlist,fugitive#EditComplete   Gtabedit exe fugitive#Open((<count> >= 0 ? <count> : "")."tabedit", <bang>0, "<mods>", <q-args>)
line 583: exe 'command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gdrop    exe fugitive#DropCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 583: command! -bar -bang -nargs=*                          -complete=customlist,fugitive#EditComplete   Gdrop    exe fugitive#DropCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 584: 
line 585: if exists(':Gr') != 2
line 586:   exe 'command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gr     exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 586: command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gr     exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 587: endif
line 588: exe 'command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gread    exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 588: command! -bar -bang -nargs=* -range=-1                -complete=customlist,fugitive#ReadComplete   Gread    exe fugitive#ReadCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 589: 
line 590: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gdiffsplit  exe fugitive#Diffsplit(1, <bang>0, "<mods>", <q-args>)'
line 590: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gdiffsplit  exe fugitive#Diffsplit(1, <bang>0, "<mods>", <q-args>)
line 591: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Ghdiffsplit exe fugitive#Diffsplit(0, <bang>0, "<mods>", <q-args>)'
line 591: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Ghdiffsplit exe fugitive#Diffsplit(0, <bang>0, "<mods>", <q-args>)
line 592: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gvdiffsplit exe fugitive#Diffsplit(0, <bang>0, "vertical <mods>", <q-args>)'
line 592: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gvdiffsplit exe fugitive#Diffsplit(0, <bang>0, "vertical <mods>", <q-args>)
line 593: 
line 594: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gw     exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 594: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gw     exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 595: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwrite exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 595: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwrite exe fugitive#WriteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 596: exe 'command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwq    exe fugitive#WqCommand(   <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 596: command! -bar -bang -nargs=* -complete=customlist,fugitive#EditComplete Gwq    exe fugitive#WqCommand(   <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 597: 
line 598: exe 'command! -bar -bang -nargs=0 GRemove exe fugitive#RemoveCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 598: command! -bar -bang -nargs=0 GRemove exe fugitive#RemoveCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 599: exe 'command! -bar -bang -nargs=0 GUnlink exe fugitive#UnlinkCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 599: command! -bar -bang -nargs=0 GUnlink exe fugitive#UnlinkCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 600: exe 'command! -bar -bang -nargs=0 GDelete exe fugitive#DeleteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 600: command! -bar -bang -nargs=0 GDelete exe fugitive#DeleteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 601: exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#CompleteObject GMove   exe fugitive#MoveCommand(  <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 601: command! -bar -bang -nargs=1 -complete=customlist,fugitive#CompleteObject GMove   exe fugitive#MoveCommand(  <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 602: exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#RenameComplete GRename exe fugitive#RenameCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 602: command! -bar -bang -nargs=1 -complete=customlist,fugitive#RenameComplete GRename exe fugitive#RenameCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 603: if exists(':Gremove') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 604:   exe 'command! -bar -bang -nargs=0 Gremove exe fugitive#RemoveCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gremove is deprecated in favor of :GRemove"|echohl NONE'
line 606: elseif exists(':Gremove') != 2 && !exists('g:fugitive_legacy_commands')
line 607:   exe 'command! -bar -bang -nargs=0 Gremove echoerr ":Gremove has been removed in favor of :GRemove"'
line 607: command! -bar -bang -nargs=0 Gremove echoerr ":Gremove has been removed in favor of :GRemove"
line 608: endif
line 609: if exists(':Gdelete') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 610:   exe 'command! -bar -bang -nargs=0 Gdelete exe fugitive#DeleteCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gdelete is deprecated in favor of :GDelete"|echohl NONE'
line 612: elseif exists(':Gdelete') != 2 && !exists('g:fugitive_legacy_commands')
line 613:   exe 'command! -bar -bang -nargs=0 Gdelete echoerr ":Gdelete has been removed in favor of :GDelete"'
line 613: command! -bar -bang -nargs=0 Gdelete echoerr ":Gdelete has been removed in favor of :GDelete"
line 614: endif
line 615: if exists(':Gmove') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 616:   exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#CompleteObject Gmove   exe fugitive#MoveCommand(  <line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Gmove is deprecated in favor of :GMove"|echohl NONE'
line 618: elseif exists(':Gmove') != 2 && !exists('g:fugitive_legacy_commands')
line 619:   exe 'command! -bar -bang -nargs=? -complete=customlist,fugitive#CompleteObject Gmove' 'echoerr ":Gmove has been removed in favor of :GMove"'
line 619: command! -bar -bang -nargs=? -complete=customlist,fugitive#CompleteObject Gmove echoerr ":Gmove has been removed in favor of :GMove"
line 621: endif
line 622: if exists(':Grename') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 623:   exe 'command! -bar -bang -nargs=1 -complete=customlist,fugitive#RenameComplete Grename exe fugitive#RenameCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|echohl WarningMSG|echomsg ":Grename is deprecated in favor of :GRename"|echohl NONE'
line 625: elseif exists(':Grename') != 2 && !exists('g:fugitive_legacy_commands')
line 626:   exe 'command! -bar -bang -nargs=? -complete=customlist,fugitive#RenameComplete Grename' 'echoerr ":Grename has been removed in favor of :GRename"'
line 626: command! -bar -bang -nargs=? -complete=customlist,fugitive#RenameComplete Grename echoerr ":Grename has been removed in favor of :GRename"
line 628: endif
line 629: 
line 630: exe 'command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject GBrowse exe fugitive#BrowseCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)'
line 630: command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject GBrowse exe fugitive#BrowseCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)
line 631: if exists(':Gbrowse') != 2 && get(g:, 'fugitive_legacy_commands', 0)
line 632:   exe 'command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject Gbrowse exe fugitive#BrowseCommand(<line1>, <count>, +"<range>", <bang>0, "<mods>", <q-args>)' '|if <bang>1|redraw!|endif|echohl WarningMSG|echomsg ":Gbrowse is deprecated in favor of :GBrowse"|echohl NONE'
line 634: elseif exists(':Gbrowse') != 2 && !exists('g:fugitive_legacy_commands')
line 635:   exe 'command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject Gbrowse' 'echoerr ":Gbrowse has been removed in favor of :GBrowse"'
line 635: command! -bar -bang -range=-1 -nargs=* -complete=customlist,fugitive#CompleteObject Gbrowse echoerr ":Gbrowse has been removed in favor of :GBrowse"
line 637: endif
line 638: 
line 639: if v:version < 704
line 640:   finish
line 641: endif
line 642: 
line 643: let g:io_fugitive = { 'simplify': function('fugitive#simplify'), 'resolve': function('fugitive#resolve'), 'getftime': function('fugitive#getftime'), 'getfsize': function('fugitive#getfsize'), 'getftype': function('fugitive#getftype'), 'filereadable': function('fugitive#filereadable'), 'filewritable': function('fugitive#filewritable'), 'isdirectory': function('fugitive#isdirectory'), 'getfperm': function('fugitive#getfperm'), 'setfperm': function('fugitive#setfperm'), 'readfile': function('fugitive#readfile'), 'writefile': function('fugitive#writefile'), 'glob': function('fugitive#glob'), 'delete': function('fugitive#delete'), 'Real': function('FugitiveReal')}
line 659: 
line 660: augroup fugitive
line 661:   autocmd!
line 662: 
line 663:   autocmd BufNewFile,BufReadPost * if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
line 667:   autocmd FileType           netrw if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
line 671:   autocmd BufFilePost            *  unlet! b:git_dir
line 672: 
line 673:   autocmd FileType git call fugitive#MapCfile()
line 675:   autocmd FileType gitcommit call fugitive#MapCfile('fugitive#MessageCfile()')
line 677:   autocmd FileType git,gitcommit if &foldtext ==# 'foldtext()' |    setlocal foldtext=fugitive#Foldtext() | endif
line 681:   autocmd FileType fugitive call fugitive#MapCfile('fugitive#PorcelainCfile()')
line 683:   autocmd FileType gitrebase let &l:include = '^\%(pick\|squash\|edit\|reword\|fixup\|drop\|[pserfd]\)\>' | if &l:includeexpr !~# 'Fugitive' |   let &l:includeexpr = 'v:fname =~# ''^\x\{4,\}$'' && len(FugitiveGitDir()) ? FugitiveFind(v:fname) : ' .     (len(&l:includeexpr) ? &l:includeexpr : 'v:fname') | endif | let b:undo_ftplugin = get(b:, 'undo_ftplugin', 'exe') . '|setl inex= inc='
line 690: 
line 691:   autocmd BufReadCmd index{,.lock} nested if FugitiveIsGitDir(expand('<amatch>:p:h')) |   let b:git_dir = s:Slash(expand('<amatch>:p:h')) |   exe fugitive#BufReadStatus(v:cmdbang) |   echohl WarningMSG |   echo "fugitive: Direct editing of .git/" . expand('%:t') . " is deprecated" |   echohl NONE | elseif filereadable(expand('<amatch>')) |   silent doautocmd BufReadPre |   keepalt noautocmd read <amatch> |   silent 1delete_ |   silent doautocmd BufReadPost | else |   silent doautocmd BufNewFile | endif
line 706: 
line 707:   autocmd BufReadCmd   fugitive://*          nested exe fugitive#BufReadCmd() | if &path =~# '^\.\%(,\|$\)' |   let &l:path = substitute(&path, '^\.,\=', '', '') | endif
line 711:   autocmd BufWriteCmd  fugitive://*          nested exe fugitive#BufWriteCmd()
line 712:   autocmd FileReadCmd  fugitive://*          nested exe fugitive#FileReadCmd()
line 713:   autocmd FileWriteCmd fugitive://*          nested exe fugitive#FileWriteCmd()
line 714:   if exists('##SourceCmd')
line 715:     autocmd SourceCmd     fugitive://*       nested exe fugitive#SourceCmd()
line 716:   endif
line 717: 
line 718:   autocmd User Flags call Hoist('buffer', function('FugitiveStatusline'))
line 719: 
line 720:   autocmd User ProjectionistDetect call s:ProjectionistDetect()
line 721: augroup END
line 722: 
line 723: nmap <script><silent> <Plug>fugitive:y<C-G> :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
line 724: nmap <script> <Plug>fugitive: <Nop>
line 725: 
line 726: if get(g:, 'fugitive_no_maps')
line 727:   finish
line 728: endif
line 729: 
line 730: function! s:Map(mode, lhs, rhs, flags) abort
line 752: 
line 753: call s:Map('c', '<C-R><C-G>', 'fnameescape(fugitive#Object(@%))', '<expr>')
calling <SNR>26_Map('c', '<C-R><C-G>', 'fnameescape(fugitive#Object(@%))', '<expr>')

line 1:   let flags = a:flags . (a:rhs =~# '<Plug>' ? '' : '<script>') . '<nowait>'
line 2:   let head = a:lhs
line 3:   let tail = ''
line 4:   let keys = get(g:, a:mode.'remap', {})
line 5:   if len(keys) && type(keys) == type({})
line 6:     while !empty(head)
line 7:       if has_key(keys, head)
line 8:         let head = keys[head]
line 9:         if empty(head)
line 10:           return
line 11:         endif
line 12:         break
line 13:       endif
line 14:       let tail = matchstr(head, '<[^<>]*>$\|.$') . tail
line 15:       let head = substitute(head, '<[^<>]*>$\|.$', '', '')
line 16:     endwhile
line 17:   endif
line 18:   if empty(mapcheck(head.tail, a:mode))
line 19:     exe a:mode.'map' flags head.tail a:rhs
line 19: cmap <expr><script><nowait> <C-R><C-G> fnameescape(fugitive#Object(@%))
line 20:   endif
<SNR>26_Map returning #0

continuing in /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim

line 754: call s:Map('n', 'y<C-G>', ':<C-U>call setreg(v:register, fugitive#Object(@%))<CR>', '<silent>')
calling <SNR>26_Map('n', 'y<C-G>', ':<C-U>call setreg(v:register, fugitive#Object(@%))<CR>', '<silent>')

line 1:   let flags = a:flags . (a:rhs =~# '<Plug>' ? '' : '<script>') . '<nowait>'
line 2:   let head = a:lhs
line 3:   let tail = ''
line 4:   let keys = get(g:, a:mode.'remap', {})
line 5:   if len(keys) && type(keys) == type({})
line 6:     while !empty(head)
line 7:       if has_key(keys, head)
line 8:         let head = keys[head]
line 9:         if empty(head)
line 10:           return
line 11:         endif
line 12:         break
line 13:       endif
line 14:       let tail = matchstr(head, '<[^<>]*>$\|.$') . tail
line 15:       let head = substitute(head, '<[^<>]*>$\|.$', '', '')
line 16:     endwhile
line 17:   endif
line 18:   if empty(mapcheck(head.tail, a:mode))
line 19:     exe a:mode.'map' flags head.tail a:rhs
line 19: nmap <silent><script><nowait> y<C-G> :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
line 20:   endif
<SNR>26_Map returning #0

continuing in /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim

finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/plugin/fugitive.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftdetect/fugitive.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftdetect/fugitive.vim"
line 1: autocmd BufReadPost *.fugitiveblame setfiletype fugitiveblame
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftdetect/fugitive.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vimtex/plugin/vimtex.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vimtex/plugin/vimtex.vim"
line 1: " VimTeX - LaTeX plugin for Vim
line 2: "
line 3: " Maintainer: Karl Yngve Lervåg
line 4: " Email:      karl.yngve@gmail.com
line 5: "
line 6: 
line 7: if !get(g:, 'vimtex_enabled', 1) | finish | endif
line 7:  finish | endif
line 7:  endif
line 8: if exists('g:loaded_vimtex') | finish | endif
line 8:  finish | endif
line 8:  endif
line 9: let g:loaded_vimtex = 1
line 10: 
line 11: 
line 12: command! -nargs=* VimtexInverseSearch call call('vimtex#view#inverse_search_cmd', s:parse_args(<q-args>))
line 14: 
line 15: 
line 16: function! s:parse_args(args) abort
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vimtex/plugin/vimtex.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/cls.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/cls.vim"
line 1: " VimTeX - LaTeX plugin for Vim
line 2: "
line 3: " Maintainer: Karl Yngve Lervåg
line 4: " Email:      karl.yngve@gmail.com
line 5: "
line 6: 
line 7: if !get(g:, 'vimtex_enabled', 1) | finish | endif
line 7:  finish | endif
line 7:  endif
line 8: 
line 9: autocmd BufRead,BufNewFile *.cls set filetype=tex
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/cls.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tex.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tex.vim"
line 1: " VimTeX - LaTeX plugin for Vim
line 2: "
line 3: " Maintainer: Karl Yngve Lervåg
line 4: " Email:      karl.yngve@gmail.com
line 5: "
line 6: 
line 7: if !get(g:, 'vimtex_enabled', 1) || get(g:, 'tex_flavor', 'latex') !=# 'latex'
line 9:   finish
line 10: endif
line 11: 
line 12: " For some reason, it seems the best way to ensure filetype "tex" is to just
line 13: " set the g:tex_flavor option. Overriding the autocmds or similar seems to make
line 14: " startup slower, for some unknown reason.
line 15: let g:tex_flavor = 'latex'
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tex.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tikz.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tikz.vim"
line 1: " VimTeX - LaTeX plugin for Vim
line 2: "
line 3: " Maintainer: Karl Yngve Lervåg
line 4: " Email:      karl.yngve@gmail.com
line 5: "
line 6: 
line 7: if !get(g:, 'vimtex_enabled', 1) | finish | endif
line 7:  finish | endif
line 7:  endif
line 8: 
line 9: autocmd BufRead,BufNewFile *.tikz set filetype=tex
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/vimtex/ftdetect/tikz.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/plugin/nvim-web-devicons.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/plugin/nvim-web-devicons.vim"
line 1: if exists('g:loaded_devicons') | finish | endif
line 1:  finish | endif
line 1:  endif
line 2: 
line 3: let s:save_cpo = &cpo
line 4: set cpo&vim
line 5: 
line 6: " TODO change so its easier to get
line 7: let g:nvim_web_devicons = 1
line 8: 
line 9: let &cpo = s:save_cpo
line 10: unlet s:save_cpo
line 11: 
line 12: let g:loaded_devicons = 1
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/plugin/nvim-web-devicons.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/plugin/telescope.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/plugin/telescope.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/plugin/telescope.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/plugin/dashboard.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/plugin/dashboard.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/plugin/dashboard.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/playground/plugin/nvim-treesitter-playground.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/playground/plugin/nvim-treesitter-playground.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/playground/plugin/nvim-treesitter-playground.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/plugin/render-markdown.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/plugin/render-markdown.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/plugin/render-markdown.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.vim
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.vim"
line 1: function! luasnip#expandable()
line 4: 
line 5: function! luasnip#expand_or_jumpable()
line 8: 
line 9: function! luasnip#expand_or_locally_jumpable()
line 12: 
line 13: function! luasnip#locally_jumpable(direction)
line 16: 
line 17: function! luasnip#jumpable(direction)
line 20: 
line 21: function! luasnip#choice_active()
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/plugin/dressing.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/plugin/dressing.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/plugin/dressing.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/plugin/Comment.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/plugin/Comment.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/plugin/Comment.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/plugin/cmp.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/plugin/cmp.lua"
Executing: doautocmd <nomodeline> User CmpReady
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/plugin/cmp.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/plugin/treesitter-context.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/plugin/treesitter-context.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/plugin/treesitter-context.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: augroup filetypedetect
Executing: augroup END
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/editorconfig.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/editorconfig.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/editorconfig.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/gzip.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/gzip.vim"
line 1: " Vim plugin for editing compressed files.
line 2: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 3: " Last Change:^I2023 Aug 10
line 4: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 5: 
line 6: " Exit quickly when:
line 7: " - this plugin was already loaded
line 8: " - when 'compatible' is set
line 9: " - some autocommands are already taking care of compressed files
line 10: if exists("loaded_gzip") || &cp || exists("#BufReadPre#*.gz")
line 11:   finish
line 12: endif
line 13: let loaded_gzip = 1
line 14: 
line 15: augroup gzip
line 16:   " Remove all gzip autocommands
line 17:   au!
line 18: 
line 19:   " Enable editing of gzipped files.
line 20:   " The functions are defined in autoload/gzip.vim.
line 21:   "
line 22:   " Set binary mode before reading the file.
line 23:   " Use "gzip -d", gunzip isn't always available.
line 24:   autocmd BufReadPre,FileReadPre^I*.gz,*.bz2,*.Z,*.lzma,*.xz,*.lz,*.zst,*.br,*.lzo setlocal bin
line 25:   autocmd BufReadPost,FileReadPost^I*.gz  call gzip#read("gzip -dn")
line 26:   autocmd BufReadPost,FileReadPost^I*.bz2 call gzip#read("bzip2 -d")
line 27:   autocmd BufReadPost,FileReadPost^I*.Z   call gzip#read("uncompress")
line 28:   autocmd BufReadPost,FileReadPost^I*.lzma call gzip#read("lzma -d")
line 29:   autocmd BufReadPost,FileReadPost^I*.xz  call gzip#read("xz -d")
line 30:   autocmd BufReadPost,FileReadPost^I*.lz  call gzip#read("lzip -d")
line 31:   autocmd BufReadPost,FileReadPost^I*.zst call gzip#read("zstd -d --rm")
line 32:   autocmd BufReadPost,FileReadPost^I*.br call gzip#read("brotli -d --rm")
line 33:   autocmd BufReadPost,FileReadPost^I*.lzo call gzip#read("lzop -d -U")
line 34:   autocmd BufWritePost,FileWritePost^I*.gz  call gzip#write("gzip")
line 35:   autocmd BufWritePost,FileWritePost^I*.bz2 call gzip#write("bzip2")
line 36:   autocmd BufWritePost,FileWritePost^I*.Z   call gzip#write("compress -f")
line 37:   autocmd BufWritePost,FileWritePost^I*.lzma call gzip#write("lzma -z")
line 38:   autocmd BufWritePost,FileWritePost^I*.xz  call gzip#write("xz -z")
line 39:   autocmd BufWritePost,FileWritePost^I*.lz  call gzip#write("lzip")
line 40:   autocmd BufWritePost,FileWritePost^I*.zst  call gzip#write("zstd --rm")
line 41:   autocmd BufWritePost,FileWritePost^I*.br  call gzip#write("brotli --rm")
line 42:   autocmd BufWritePost,FileWritePost^I*.lzo  call gzip#write("lzop -U")
line 43:   autocmd FileAppendPre^I^I^I*.gz  call gzip#appre("gzip -dn")
line 44:   autocmd FileAppendPre^I^I^I*.bz2 call gzip#appre("bzip2 -d")
line 45:   autocmd FileAppendPre^I^I^I*.Z   call gzip#appre("uncompress")
line 46:   autocmd FileAppendPre^I^I^I*.lzma call gzip#appre("lzma -d")
line 47:   autocmd FileAppendPre^I^I^I*.xz   call gzip#appre("xz -d")
line 48:   autocmd FileAppendPre^I^I^I*.lz   call gzip#appre("lzip -d")
line 49:   autocmd FileAppendPre^I^I^I*.zst call gzip#appre("zstd -d --rm")
line 50:   autocmd FileAppendPre^I^I^I*.br call gzip#appre("brotli -d --rm")
line 51:   autocmd FileAppendPre^I^I^I*.lzo call gzip#appre("lzop -d -U")
line 52:   autocmd FileAppendPost^I^I*.gz  call gzip#write("gzip")
line 53:   autocmd FileAppendPost^I^I*.bz2 call gzip#write("bzip2")
line 54:   autocmd FileAppendPost^I^I*.Z   call gzip#write("compress -f")
line 55:   autocmd FileAppendPost^I^I*.lzma call gzip#write("lzma -z")
line 56:   autocmd FileAppendPost^I^I*.xz call gzip#write("xz -z")
line 57:   autocmd FileAppendPost^I^I*.lz call gzip#write("lzip")
line 58:   autocmd FileAppendPost^I^I*.zst call gzip#write("zstd --rm")
line 59:   autocmd FileAppendPost^I^I*.br call gzip#write("brotli --rm")
line 60:   autocmd FileAppendPost^I^I*.lzo call gzip#write("lzop -U")
line 61: augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/gzip.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/man.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/man.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/man.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/matchit.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/matchit.vim"
line 1: " Nvim: load the matchit plugin by default.
line 2: if !exists("g:loaded_matchit") && stridx(&packpath, $VIMRUNTIME) >= 0
line 3:   packadd matchit
Searching for "pack/*/start/matchit" in "/opt/neovim/out/share/nvim/runtime"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/*/start/matchit"
not found in 'packpath': "pack/*/start/matchit"
Searching for "pack/*/opt/matchit" in "/opt/neovim/out/share/nvim/runtime"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/*/opt/matchit"
line 3: sourcing "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim"
line 1: "  matchit.vim: (global plugin) Extended "%" matching
line 2: "  Maintainer:  Christian Brabandt
line 3: "  Version:     1.20
line 4: "  Last Change: 2024 May 20
line 5: "  Repository:  https://github.com/chrisbra/matchit
line 6: "  Previous URL:http://www.vim.org/script.php?script_id=39
line 7: "  Previous Maintainer:  Benji Fisher PhD   <benji@member.AMS.org>
line 8: 
line 9: " Documentation:
line 10: "  The documentation is in a separate file: ../doc/matchit.txt
line 11: 
line 12: " Credits:
line 13: "  Vim editor by Bram Moolenaar (Thanks, Bram!)
line 14: "  Original script and design by Raul Segura Acevedo
line 15: "  Support for comments by Douglas Potts
line 16: "  Support for back references and other improvements by Benji Fisher
line 17: "  Support for many languages by Johannes Zellner
line 18: "  Suggestions for improvement, bug reports, and support for additional
line 19: "  languages by Jordi-Albert Batalla, Neil Bird, Servatius Brandt, Mark
line 20: "  Collett, Stephen Wall, Dany St-Amant, Yuheng Xie, and Johannes Zellner.
line 21: 
line 22: " Debugging:
line 23: "  If you'd like to try the built-in debugging commands...
line 24: "   :MatchDebug      to activate debugging for the current buffer
line 25: "  This saves the values of several key script variables as buffer-local
line 26: "  variables.  See the MatchDebug() function, below, for details.
line 27: 
line 28: " TODO:  I should think about multi-line patterns for b:match_words.
line 29: "   This would require an option:  how many lines to scan (default 1).
line 30: "   This would be useful for Python, maybe also for *ML.
line 31: " TODO:  Maybe I should add a menu so that people will actually use some of
line 32: "   the features that I have implemented.
line 33: " TODO:  Eliminate the MultiMatch function.  Add yet another argument to
line 34: "   Match_wrapper() instead.
line 35: " TODO:  Allow :let b:match_words = '\(\(foo\)\(bar\)\):\3\2:end\1'
line 36: " TODO:  Make backrefs safer by using '\V' (very no-magic).
line 37: " TODO:  Add a level of indirection, so that custom % scripts can use my
line 38: "   work but extend it.
line 39: 
line 40: " Allow user to prevent loading and prevent duplicate loading.
line 41: if exists("g:loaded_matchit") || &cp
line 42:   finish
line 43: endif
line 44: let g:loaded_matchit = 1
line 45: 
line 46: let s:save_cpo = &cpo
line 47: set cpo&vim
line 48: 
line 49: fun MatchEnable()
line 89: 
line 90: fun MatchDisable()
line 108: 
line 109: " Call this function to turn on debugging information.  Every time the main
line 110: " script is run, buffer variables will be saved.  These can be used directly
line 111: " or viewed using the menu items below.
line 112: if !exists(":MatchDebug")
line 113:   command! -nargs=0 MatchDebug call matchit#Match_debug()
line 114: endif
line 115: if !exists(":MatchDisable")
line 116:   command! -nargs=0 MatchDisable :call MatchDisable()
line 117: endif
line 118: if !exists(":MatchEnable")
line 119:   command! -nargs=0 MatchEnable :call MatchEnable()
line 120: endif
line 121: 
line 122: call MatchEnable()
calling MatchEnable()

line 1:   nnoremap <silent> <Plug>(MatchitNormalForward)     :<C-U>call matchit#Match_wrapper('',1,'n')<CR>
line 2:   nnoremap <silent> <Plug>(MatchitNormalBackward)    :<C-U>call matchit#Match_wrapper('',0,'n')<CR>
line 3:   xnoremap <silent> <Plug>(MatchitVisualForward)     :<C-U>call matchit#Match_wrapper('',1,'v')<CR>:if col("''") != col("$") \| exe ":normal! m'" \| endif<cr>gv``
line 5:   xnoremap <silent> <Plug>(MatchitVisualBackward)    :<C-U>call matchit#Match_wrapper('',0,'v')<CR>m'gv``
line 6:   onoremap <silent> <Plug>(MatchitOperationForward)  :<C-U>call matchit#Match_wrapper('',1,'o')<CR>
line 7:   onoremap <silent> <Plug>(MatchitOperationBackward) :<C-U>call matchit#Match_wrapper('',0,'o')<CR>
line 8: 
line 9:   " Analogues of [{ and ]} using matching patterns:
line 10:   nnoremap <silent> <Plug>(MatchitNormalMultiBackward)    :<C-U>call matchit#MultiMatch("bW", "n")<CR>
line 11:   nnoremap <silent> <Plug>(MatchitNormalMultiForward)     :<C-U>call matchit#MultiMatch("W",  "n")<CR>
line 12:   xnoremap <silent> <Plug>(MatchitVisualMultiBackward)    :<C-U>call matchit#MultiMatch("bW", "n")<CR>m'gv``
line 13:   xnoremap <silent> <Plug>(MatchitVisualMultiForward)     :<C-U>call matchit#MultiMatch("W",  "n")<CR>m'gv``
line 14:   onoremap <silent> <Plug>(MatchitOperationMultiBackward) :<C-U>call matchit#MultiMatch("bW", "o")<CR>
line 15:   onoremap <silent> <Plug>(MatchitOperationMultiForward)  :<C-U>call matchit#MultiMatch("W",  "o")<CR>
line 16: 
line 17:   " text object:
line 18:   xmap <silent> <Plug>(MatchitVisualTextObject) <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitVisualMultiForward)
line 19: 
line 20:   if !exists("g:no_plugin_maps")
line 21:     nmap <silent> %  <Plug>(MatchitNormalForward)
line 22:     nmap <silent> g% <Plug>(MatchitNormalBackward)
line 23:     xmap <silent> %  <Plug>(MatchitVisualForward)
line 24:     xmap <silent> g% <Plug>(MatchitVisualBackward)
line 25:     omap <silent> %  <Plug>(MatchitOperationForward)
line 26:     omap <silent> g% <Plug>(MatchitOperationBackward)
line 27: 
line 28:     " Analogues of [{ and ]} using matching patterns:
line 29:     nmap <silent> [% <Plug>(MatchitNormalMultiBackward)
line 30:     nmap <silent> ]% <Plug>(MatchitNormalMultiForward)
line 31:     xmap <silent> [% <Plug>(MatchitVisualMultiBackward)
line 32:     xmap <silent> ]% <Plug>(MatchitVisualMultiForward)
line 33:     omap <silent> [% <Plug>(MatchitOperationMultiBackward)
line 34:     omap <silent> ]% <Plug>(MatchitOperationMultiForward)
line 35: 
line 36:     " Text object
line 37:     xmap a% <Plug>(MatchitVisualTextObject)
line 38:   endif
MatchEnable returning #0

continuing in /opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim

line 123: 
line 124: let &cpo = s:save_cpo
line 125: unlet s:save_cpo
line 126: 
line 127: " vim:sts=2:sw=2:et:
finished sourcing /opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim
continuing in /opt/neovim/out/share/nvim/runtime/plugin/matchit.vim
line 3: augroup filetypedetect
line 3: augroup END
line 4: endif
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/matchit.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/matchparen.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/matchparen.vim"
line 1: " Vim plugin for showing matching parens
line 2: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 3: " Last Change:^I2024 May 18
line 4: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 5: 
line 6: " Exit quickly when:
line 7: " - this plugin was already loaded (or disabled)
line 8: " - when 'compatible' is set
line 9: if exists("g:loaded_matchparen") || &cp
line 10:   finish
line 11: endif
line 12: let g:loaded_matchparen = 1
line 13: 
line 14: if !exists("g:matchparen_timeout")
line 15:   let g:matchparen_timeout = 300
line 16: endif
line 17: if !exists("g:matchparen_insert_timeout")
line 18:   let g:matchparen_insert_timeout = 60
line 19: endif
line 20: 
line 21: let s:has_matchaddpos = exists('*matchaddpos')
line 22: 
line 23: augroup matchparen
line 24:   " Replace all matchparen autocommands
line 25:   autocmd! CursorMoved,CursorMovedI,WinEnter,WinScrolled * call s:Highlight_Matching_Pair()
line 26:   autocmd! BufWinEnter * autocmd SafeState * ++once call s:Highlight_Matching_Pair()
line 27:   autocmd! WinLeave,BufLeave * call s:Remove_Matches()
line 28:   if exists('##TextChanged')
line 29:     autocmd! TextChanged,TextChangedI * call s:Highlight_Matching_Pair()
line 30:     autocmd! TextChangedP * call s:Remove_Matches()
line 31:   endif
line 32: augroup END
line 33: 
line 34: " Skip the rest if it was already done.
line 35: if exists("*s:Highlight_Matching_Pair")
line 36:   finish
line 37: endif
line 38: 
line 39: let s:cpo_save = &cpo
line 40: set cpo-=C
line 41: 
line 42: " The function that is invoked (very often) to define a ":match" highlighting
line 43: " for any matching paren.
line 44: func s:Highlight_Matching_Pair()
line 201: 
line 202: func s:Remove_Matches()
line 210: 
line 211: " Define commands that will disable and enable the plugin.
line 212: command DoMatchParen call s:DoMatchParen()
line 213: command NoMatchParen call s:NoMatchParen()
line 214: 
line 215: func s:NoMatchParen()
line 222: 
line 223: func s:DoMatchParen()
line 229: 
line 230: let &cpo = s:cpo_save
line 231: unlet s:cpo_save
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/matchparen.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/netrwPlugin.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/netrwPlugin.vim"
line 1: " netrwPlugin.vim: Handles file transfer and remote directory listing across a network
line 2: "            PLUGIN SECTION
line 3: " Maintainer:^IThis runtime file is looking for a new maintainer.
line 4: " Date:^I^IFeb 09, 2021
line 5: " Last Change:
line 6: "   2024 May 08 by Vim Project: cleanup legacy Win9X checks
line 7: " Former Maintainer:   Charles E Campbell
line 8: " GetLatestVimScripts: 1075 1 :AutoInstall: netrw.vim
line 9: " Copyright:    Copyright (C) 1999-2021 Charles E. Campbell {{{1
line 10: "               Permission is hereby granted to use and distribute this code,
line 11: "               with or without modifications, provided that this copyright
line 12: "               notice is copied with it. Like anything else that's free,
line 13: "               netrw.vim, netrwPlugin.vim, and netrwSettings.vim are provided
line 14: "               *as is* and comes with no warranty of any kind, either
line 15: "               expressed or implied. By using this plugin, you agree that
line 16: "               in no event will the copyright holder be liable for any damages
line 17: "               resulting from the use of this software.
line 18: "
line 19: "  But be doers of the Word, and not only hearers, deluding your own selves {{{1
line 20: "  (James 1:22 RSV)
line 21: " =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
line 22: " Load Once: {{{1
line 23: if &cp || exists("g:loaded_netrwPlugin")
line 24:  finish
line 25: endif
line 26: let g:loaded_netrwPlugin = "v173"
line 27: let s:keepcpo = &cpo
line 28: set cpo&vim
line 29: "DechoRemOn
line 30: 
line 31: " ---------------------------------------------------------------------
line 32: " Public Interface: {{{1
line 33: 
line 34: " Local Browsing Autocmds: {{{2
line 35: augroup FileExplorer
line 36:  au!
line 37:  au BufLeave *  if &ft != "netrw"|let w:netrw_prvfile= expand("%:p")|endif
line 38:  au BufEnter *^Isil call s:LocalBrowse(expand("<amatch>"))
line 39:  au VimEnter *^Isil call s:VimEnter(expand("<amatch>"))
line 40:  if has("win32")
line 41:   au BufEnter .* sil call s:LocalBrowse(expand("<amatch>"))
line 42:  endif
line 43: augroup END
line 44: 
line 45: " Network Browsing Reading Writing: {{{2
line 46: augroup Network
line 47:  au!
line 48:  au BufReadCmd   file://*^I^I^I^I^I^I^I^I^I^I^Icall netrw#FileUrlEdit(expand("<amatch>"))
line 49:  au BufReadCmd   ftp://*,rcp://*,scp://*,http://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
line 50:  au FileReadCmd  ftp://*,rcp://*,scp://*,http://*,file://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
line 51:  au BufWriteCmd  ftp://*,rcp://*,scp://*,http://*,file://*,dav://*,davs://*,rsync://*,sftp://*^I^I^Iexe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
line 52:  au FileWriteCmd ftp://*,rcp://*,scp://*,http://*,file://*,dav://*,davs://*,rsync://*,sftp://*^I^I^Iexe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
line 53:  try
line 54:   au SourceCmd   ftp://*,rcp://*,scp://*,http://*,file://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe 'Nsource '.fnameescape(expand("<amatch>"))
line 55:  catch /^Vim\%((\a\+)\)\=:E216/
line 56:   au SourcePre   ftp://*,rcp://*,scp://*,http://*,file://*,https://*,dav://*,davs://*,rsync://*,sftp://*^Iexe 'Nsource '.fnameescape(expand("<amatch>"))
line 57:  endtry
line 58: augroup END
line 59: 
line 60: " Commands: :Nread, :Nwrite, :NetUserPass {{{2
line 61: com! -count=1 -nargs=*^INread^I^Ilet s:svpos= winsaveview()<bar>call netrw#NetRead(<count>,<f-args>)<bar>call winrestview(s:svpos)
line 62: com! -range=% -nargs=*^INwrite^I^Ilet s:svpos= winsaveview()<bar><line1>,<line2>call netrw#NetWrite(<f-args>)<bar>call winrestview(s:svpos)
line 63: com! -nargs=*^I^INetUserPass^Icall NetUserPass(<f-args>)
line 64: com! -nargs=*^I        Nsource^I^Ilet s:svpos= winsaveview()<bar>call netrw#NetSource(<f-args>)<bar>call winrestview(s:svpos)
line 65: com! -nargs=?^I^INtree^I^Icall netrw#SetTreetop(1,<q-args>)
line 66: 
line 67: " Commands: :Explore, :Sexplore, Hexplore, Vexplore, Lexplore {{{2
line 68: com! -nargs=* -bar -bang -count=0 -complete=dir^IExplore^I^Icall netrw#Explore(<count>,0,0+<bang>0,<q-args>)
line 69: com! -nargs=* -bar -bang -count=0 -complete=dir^ISexplore^Icall netrw#Explore(<count>,1,0+<bang>0,<q-args>)
line 70: com! -nargs=* -bar -bang -count=0 -complete=dir^IHexplore^Icall netrw#Explore(<count>,1,2+<bang>0,<q-args>)
line 71: com! -nargs=* -bar -bang -count=0 -complete=dir^IVexplore^Icall netrw#Explore(<count>,1,4+<bang>0,<q-args>)
line 72: com! -nargs=* -bar       -count=0 -complete=dir^ITexplore^Icall netrw#Explore(<count>,0,6        ,<q-args>)
line 73: com! -nargs=* -bar -bang^I^I^INexplore^Icall netrw#Explore(-1,0,0,<q-args>)
line 74: com! -nargs=* -bar -bang^I^I^IPexplore^Icall netrw#Explore(-2,0,0,<q-args>)
line 75: com! -nargs=* -bar -bang -count=0 -complete=dir Lexplore^Icall netrw#Lexplore(<count>,<bang>0,<q-args>)
line 76: 
line 77: " Commands: NetrwSettings {{{2
line 78: com! -nargs=0^INetrwSettings^Icall netrwSettings#NetrwSettings()
line 79: com! -bang^INetrwClean^Icall netrw#Clean(<bang>0)
line 80: 
line 81: " Maps:
line 82: if !exists("g:netrw_nogx")
line 83:  if maparg('gx','n') == ""
line 84:   if !hasmapto('<Plug>NetrwBrowseX')
line 85:    nmap <unique> gx <Plug>NetrwBrowseX
line 86:   endif
line 87:   nno <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(netrw#GX(),netrw#CheckIfRemote(netrw#GX()))<cr>
line 88:  endif
line 89:  if maparg('gx','x') == ""
line 90:   if !hasmapto('<Plug>NetrwBrowseXVis')
line 91:    xmap <unique> gx <Plug>NetrwBrowseXVis
line 92:   endif
line 93:   xno <silent> <Plug>NetrwBrowseXVis :<c-u>call netrw#BrowseXVis()<cr>
line 94:  endif
line 95: endif
line 96: if exists("g:netrw_usetab") && g:netrw_usetab
line 97:  if maparg('<c-tab>','n') == ""
line 98:   nmap <unique> <c-tab> <Plug>NetrwShrink
line 99:  endif
line 100:  nno <silent> <Plug>NetrwShrink :call netrw#Shrink()<cr>
line 101: endif
line 102: 
line 103: " ---------------------------------------------------------------------
line 104: " LocalBrowse: invokes netrw#LocalBrowseCheck() on directory buffers {{{2
line 105: fun! s:LocalBrowse(dirname)
line 149: 
line 150: " ---------------------------------------------------------------------
line 151: " s:VimEnter: after all vim startup stuff is done, this function is called. {{{2
line 152: "             Its purpose: to look over all windows and run s:LocalBrowse() on
line 153: "             them, which checks if they're directories and will create a directory
line 154: "             listing when appropriate.
line 155: "             It also sets s:vimentered, letting s:LocalBrowse() know that s:VimEnter()
line 156: "             has already been called.
line 157: fun! s:VimEnter(dirname)
line 177: 
line 178: " ---------------------------------------------------------------------
line 179: " NetrwStatusLine: {{{1
line 180: fun! NetrwStatusLine()
line 191: 
line 192: " ------------------------------------------------------------------------
line 193: " NetUserPass: set username and password for subsequent ftp transfer {{{1
line 194: "   Usage:  :call NetUserPass()^I^I^I-- will prompt for userid and password
line 195: "^I    :call NetUserPass("uid")^I^I-- will prompt for password
line 196: "^I    :call NetUserPass("uid","password") -- sets global userid and password
line 197: fun! NetUserPass(...)
line 221: 
line 222: " ------------------------------------------------------------------------
line 223: " Modelines And Restoration: {{{1
line 224: let &cpo= s:keepcpo
line 225: unlet s:keepcpo
line 226: " vim:ts=8 fdm=marker
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/netrwPlugin.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/osc52.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/osc52.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/osc52.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/rplugin.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/rplugin.vim"
line 1: if exists('g:loaded_remote_plugins')
line 2:   finish
line 3: endif
line 4: let g:loaded_remote_plugins = '/path/to/manifest'
line 5: 
line 6: " Get the path to the rplugin manifest file.
line 7: function! s:GetManifestPath() abort
line 26: 
line 27: " Old manifest file based on known script locations.
line 28: function! s:GetOldManifestPaths() abort
line 43: 
line 44: function! s:GetManifest() abort
line 57: 
line 58: function! s:LoadRemotePlugins() abort
line 64: 
line 65: command! -bar UpdateRemotePlugins call remote#host#UpdateRemotePlugins()
line 66: 
line 67: if index(v:argv, "--clean") < 0
line 68:   call s:LoadRemotePlugins()
calling <SNR>59_LoadRemotePlugins()

line 1:   let g:loaded_remote_plugins = s:GetManifest()
calling <SNR>59_GetManifest()

line 1:   let manifest = s:GetManifestPath()
calling <SNR>59_GetManifestPath()

line 1:   let manifest_base = ''
line 2: 
line 3:   if exists('$NVIM_RPLUGIN_MANIFEST')
line 4:     return fnamemodify($NVIM_RPLUGIN_MANIFEST, ':p')
line 5:   endif
line 6: 
line 7:   let dest = stdpath('data')
line 8:   if !empty(dest)
line 9:     if !isdirectory(dest)
line 10:       if getftype(dest) != "link"
line 11:         call mkdir(dest, 'p', 0700)
line 12:       endif
line 13:     endif
line 14:     let manifest_base = dest
line 15:   endif
line 16: 
line 17:   return manifest_base.'/rplugin.vim'
<SNR>59_GetManifestPath returning '/Users/embe221ed/.local/share/nvim/rplugin.vim'

continuing in <SNR>59_GetManifest

line 2:   if !filereadable(manifest)
line 3:     " Check if an old manifest file exists and move it to the new location.
line 4:     for old_manifest in s:GetOldManifestPaths()
line 5:       if filereadable(old_manifest)
line 6:         call rename(old_manifest, manifest)
line 7:         break
line 8:       endif
line 9:     endfor
line 10:   endif
line 11:   return manifest
<SNR>59_GetManifest returning '/Users/embe221ed/.local/share/nvim/rplugin.vim'

continuing in <SNR>59_LoadRemotePlugins

line 2:   if filereadable(g:loaded_remote_plugins)
line 3:     execute 'source' fnameescape(g:loaded_remote_plugins)
line 3: source /Users/embe221ed/.local/share/nvim/rplugin.vim
line 3: sourcing "/Users/embe221ed/.local/share/nvim/rplugin.vim"
line 1: " perl plugins
line 2: 
line 3: 
line 4: " node plugins
line 5: 
line 6: 
line 7: " python3 plugins
line 8: 
line 9: 
line 10: " ruby plugins
line 11: 
line 12: 
line 13: " python plugins
line 14: 
line 15: 
finished sourcing /Users/embe221ed/.local/share/nvim/rplugin.vim
continuing in <SNR>59_LoadRemotePlugins
line 4:   endif
<SNR>59_LoadRemotePlugins returning #0

continuing in /opt/neovim/out/share/nvim/runtime/plugin/rplugin.vim

line 69: endif
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/rplugin.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/shada.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/shada.vim"
line 1: if exists('g:loaded_shada_plugin')
line 2:   finish
line 3: endif
line 4: let g:loaded_shada_plugin = 1
line 5: 
line 6: augroup ShaDaCommands
line 7:   autocmd!
line 8:   autocmd BufReadCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call setline('.', shada#get_strings(readfile(expand('<afile>'),'b'))) |setlocal filetype=shada
line 12:   autocmd FileReadCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call append("'[", shada#get_strings(readfile(expand('<afile>'), 'b')))
line 15:   autocmd BufWriteCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |if writefile(shada#get_binstrings(getline(1, '$')),expand('<afile>'), 'b') == 0 |  let &l:modified = (expand('<afile>') is# bufname(+expand('<abuf>'))? 0: stridx(&cpoptions, '+') != -1) |endif
line 23:   autocmd FileWriteCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'b')
line 30:   autocmd FileAppendCmd *.shada,*.shada.tmp.[a-z] :if !empty(v:cmdarg)|throw '++opt not supported'|endif |call writefile(shada#get_binstrings(getline(min([line("'["), line("']")]),max([line("'["), line("']")]))),expand('<afile>'),'ab')
line 37:   autocmd SourceCmd *.shada,*.shada.tmp.[a-z] :execute 'rshada' fnameescape(expand('<afile>'))
line 39: augroup END
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/shada.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/spellfile.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/spellfile.vim"
line 1: " Vim plugin for downloading spell files
line 2: 
line 3: if exists("loaded_spellfile_plugin") || &cp || exists("#SpellFileMissing")
line 4:   finish
line 5: endif
line 6: let loaded_spellfile_plugin = 1
line 7: 
line 8: autocmd SpellFileMissing * call spellfile#LoadFile(expand('<amatch>'))
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/spellfile.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/tarPlugin.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/tarPlugin.vim"
line 1: " tarPlugin.vim -- a Vim plugin for browsing tarfiles
line 2: " Original was copyright (c) 2002, Michael C. Toren <mct@toren.net>
line 3: " Modified by Charles E. Campbell
line 4: " Distributed under the GNU General Public License.
line 5: "
line 6: " Updates are available from <http://michael.toren.net/code/>.  If you
line 7: " find this script useful, or have suggestions for improvements, please
line 8: " let me know.
line 9: " Also look there for further comments and documentation.
line 10: "
line 11: " This part only sets the autocommands.  The functions are in autoload/tar.vim.
line 12: " ---------------------------------------------------------------------
line 13: "  Load Once: {{{1
line 14: if &cp || exists("g:loaded_tarPlugin")
line 15:  finish
line 16: endif
line 17: let g:loaded_tarPlugin = "v32"
line 18: let s:keepcpo          = &cpo
line 19: set cpo&vim
line 20: 
line 21: " ---------------------------------------------------------------------
line 22: "  Public Interface: {{{1
line 23: augroup tar
line 24:   au!
line 25:   au BufReadCmd   tarfile::*^Icall tar#Read(expand("<amatch>"), 1)
line 26:   au FileReadCmd  tarfile::*^Icall tar#Read(expand("<amatch>"), 0)
line 27:   au BufWriteCmd  tarfile::*^Icall tar#Write(expand("<amatch>"))
line 28:   au FileWriteCmd tarfile::*^Icall tar#Write(expand("<amatch>"))
line 29: 
line 30:   if has("unix")
line 31:    au BufReadCmd   tarfile::*/*^Icall tar#Read(expand("<amatch>"), 1)
line 32:    au FileReadCmd  tarfile::*/*^Icall tar#Read(expand("<amatch>"), 0)
line 33:    au BufWriteCmd  tarfile::*/*^Icall tar#Write(expand("<amatch>"))
line 34:    au FileWriteCmd tarfile::*/*^Icall tar#Write(expand("<amatch>"))
line 35:   endif
line 36: 
line 37:   au BufReadCmd   *.tar.gz^I^Icall tar#Browse(expand("<amatch>"))
line 38:   au BufReadCmd   *.tar^I^I^Icall tar#Browse(expand("<amatch>"))
line 39:   au BufReadCmd   *.lrp^I^I^Icall tar#Browse(expand("<amatch>"))
line 40:   au BufReadCmd   *.tar.bz2^I^Icall tar#Browse(expand("<amatch>"))
line 41:   au BufReadCmd   *.tar.Z^I^Icall tar#Browse(expand("<amatch>"))
line 42:   au BufReadCmd   *.tbz^I^I^Icall tar#Browse(expand("<amatch>"))
line 43:   au BufReadCmd   *.tgz^I^I^Icall tar#Browse(expand("<amatch>"))
line 44:   au BufReadCmd   *.tar.lzma^Icall tar#Browse(expand("<amatch>"))
line 45:   au BufReadCmd   *.tar.xz^I^Icall tar#Browse(expand("<amatch>"))
line 46:   au BufReadCmd   *.txz^I^I^Icall tar#Browse(expand("<amatch>"))
line 47:   au BufReadCmd   *.tar.zst^I^Icall tar#Browse(expand("<amatch>"))
line 48:   au BufReadCmd   *.tzst^I^I^Icall tar#Browse(expand("<amatch>"))
line 49: augroup END
line 50: 
line 51: " ---------------------------------------------------------------------
line 52: " Restoration And Modelines: {{{1
line 53: " vim: fdm=marker
line 54: let &cpo= s:keepcpo
line 55: unlet s:keepcpo
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/tarPlugin.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/tohtml.lua
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/tohtml.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/tohtml.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/tutor.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/tutor.vim"
line 1: if exists('g:loaded_tutor_mode_plugin') || &compatible
line 2:     finish
line 3: endif
line 4: let g:loaded_tutor_mode_plugin = 1
line 5: 
line 6: command! -nargs=? -complete=custom,tutor#TutorCmdComplete Tutor call tutor#TutorCmd(<q-args>)
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/tutor.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /opt/neovim/out/share/nvim/runtime/plugin/zipPlugin.vim
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/plugin/zipPlugin.vim"
line 1: " zipPlugin.vim: Handles browsing zipfiles
line 2: "            PLUGIN PORTION
line 3: " Date:^I^I^IDec 07, 2021
line 4: " Maintainer:^IThis runtime file is looking for a new maintainer.
line 5: " Former Maintainer:^ICharles E Campbell
line 6: " License:^I^IVim License  (see vim's :help license)
line 7: " Copyright:    Copyright (C) 2005-2016 Charles E. Campbell {{{1
line 8: "               Permission is hereby granted to use and distribute this code,
line 9: "               with or without modifications, provided that this copyright
line 10: "               notice is copied with it. Like anything else that's free,
line 11: "               zipPlugin.vim is provided *as is* and comes with no warranty
line 12: "               of any kind, either expressed or implied. By using this
line 13: "               plugin, you agree that in no event will the copyright
line 14: "               holder be liable for any damages resulting from the use
line 15: "               of this software.
line 16: "
line 17: " (James 4:8 WEB) Draw near to God, and he will draw near to you.
line 18: " Cleanse your hands, you sinners; and purify your hearts, you double-minded.
line 19: " ---------------------------------------------------------------------
line 20: " Load Once: {{{1
line 21: if &cp || exists("g:loaded_zipPlugin")
line 22:  finish
line 23: endif
line 24: let g:loaded_zipPlugin = "v33"
line 25: let s:keepcpo          = &cpo
line 26: set cpo&vim
line 27: 
line 28: " ---------------------------------------------------------------------
line 29: " Options: {{{1
line 30: if !exists("g:zipPlugin_ext")
line 31:  let g:zipPlugin_ext='*.aar,*.apk,*.celzip,*.crtx,*.docm,*.docx,*.dotm,*.dotx,*.ear,*.epub,*.gcsx,*.glox,*.gqsx,*.ja,*.jar,*.kmz,*.odb,*.odc,*.odf,*.odg,*.odi,*.odm,*.odp,*.ods,*.odt,*.otc,*.otf,*.otg,*.oth,*.oti,*.otp,*.ots,*.ott,*.oxt,*.potm,*.potx,*.ppam,*.ppsm,*.ppsx,*.pptm,*.pptx,*.sldx,*.thmx,*.vdw,*.war,*.wsz,*.xap,*.xlam,*.xlsb,*.xlsm,*.xlsx,*.xltm,*.xltx,*.xpi,*.zip'
line 32: endif
line 33: 
line 34: " ---------------------------------------------------------------------
line 35: " Public Interface: {{{1
line 36: augroup zip
line 37:  au!
line 38:  au BufReadCmd   zipfile:*^Icall zip#Read(expand("<amatch>"), 1)
line 39:  au FileReadCmd  zipfile:*^Icall zip#Read(expand("<amatch>"), 0)
line 40:  au BufWriteCmd  zipfile:*^Icall zip#Write(expand("<amatch>"))
line 41:  au FileWriteCmd zipfile:*^Icall zip#Write(expand("<amatch>"))
line 42: 
line 43:  if has("unix")
line 44:   au BufReadCmd   zipfile:*/*^Icall zip#Read(expand("<amatch>"), 1)
line 45:   au FileReadCmd  zipfile:*/*^Icall zip#Read(expand("<amatch>"), 0)
line 46:   au BufWriteCmd  zipfile:*/*^Icall zip#Write(expand("<amatch>"))
line 47:   au FileWriteCmd zipfile:*/*^Icall zip#Write(expand("<amatch>"))
line 48:  endif
line 49: 
line 50:  exe "au BufReadCmd ".g:zipPlugin_ext.' call zip#Browse(expand("<amatch>"))'
line 50: au BufReadCmd *.aar,*.apk,*.celzip,*.crtx,*.docm,*.docx,*.dotm,*.dotx,*.ear,*.epub,*.gcsx,*.glox,*.gqsx,*.ja,*.jar,*.kmz,*.odb,*.odc,*.odf,*.odg,*.odi,*.odm,*.odp,*.ods,*.odt,*.otc,*.otf,*.otg,*.oth,*.oti,*.otp,*.ots,*.ott,*.oxt,*.potm,*.potx,*.ppam,*.ppsm,*.ppsx,*.pptm,*.pptx,*.sldx,*.thmx,*.vdw,*.war,*.wsz,*.xap,*.xlam,*.xlsb,*.xlsm,*.xlsx,*.xltm,*.xltx,*.xpi,*.zip call zip#Browse(expand("<amatch>"))
line 51: augroup END
line 52: 
line 53: " ---------------------------------------------------------------------
line 54: "  Restoration And Modelines: {{{1
line 55: "  vim: fdm=marker
line 56: let &cpo= s:keepcpo
line 57: unlet s:keepcpo
finished sourcing /opt/neovim/out/share/nvim/runtime/plugin/zipPlugin.vim
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/plugin/cmp_path.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/plugin/cmp_path.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/plugin/cmp_path.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/plugin/cmp_buffer.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/plugin/cmp_buffer.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/plugin/cmp_buffer.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/plugin/cmp_cmdline.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/plugin/cmp_cmdline.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/plugin/cmp_cmdline.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing: source /Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/plugin/commands.lua
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/plugin/commands.lua"
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/plugin/commands.lua
continuing in nvim_exec2() called at /opt/scripts/configs/nvim/init.lua:0
Executing User Autocommands for "LazyDone"
autocommand <Lua 44: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/util.lua:183>

Executing: 
Executing: augroup lualine | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: highlight! lualine_c_normal guifg=#bbc2cf guibg=#303447 gui=None ctermfg=07 ctermbg=237 cterm=None
Executing: highlight! lualine_c_inactive guifg=#bbc2cf guibg=#303447 gui=None ctermfg=07 ctermbg=237 cterm=None
Executing: autocmd lualine ColorScheme * lua require'lualine'.setup()
Executing:     autocmd lualine OptionSet background lua require'lualine'.setup()
Executing: highlight! lualine_x_selectioncount_normal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_insert guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_visual guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_replace guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_command guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_terminal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_selectioncount_inactive guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_x_diff_added_normal guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_insert guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_visual guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_replace guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_command guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_terminal guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_added_inactive guifg=#a6d18a guibg=#303447 gui=None ctermfg=150 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_normal guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_insert guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_visual guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_replace guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_command guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_terminal guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_modified_inactive guifg=#eef1f8 guibg=#303447 gui=None ctermfg=255 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_normal guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_insert guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_visual guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_replace guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_command guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_terminal guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: highlight! lualine_x_diff_removed_inactive guifg=#e78285 guibg=#303447 gui=None ctermfg=174 ctermbg=237 cterm=None
Executing: au lualine BufEnter *
--- Autocommands ---
Executing: autocmd lualine BufEnter * lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing: au lualine BufWritePost *
--- Autocommands ---
Executing: autocmd lualine BufWritePost * lua require'lualine.components.diff.git_diff'.update_git_diff()
Executing: highlight! lualine_c_4_normal guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_4_insert guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_4_visual guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_4_replace guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_4_command guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_4_terminal guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_4_inactive guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_5_normal guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_5_insert guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_5_visual guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_5_replace guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_5_command guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_5_terminal guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_5_inactive guifg=#f4b8e5 guibg=#303447 gui=None ctermfg=218 ctermbg=237 cterm=None
Executing: highlight! lualine_c_filename_normal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_insert guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_visual guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_replace guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_command guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_terminal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_inactive guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_8_normal guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_8_insert guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_8_visual guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_8_replace guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_8_command guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_8_terminal guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_8_inactive guifg=#f4b8e5 guibg=#303447 gui=bold ctermfg=218 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_9_normal guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_insert guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_visual guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_replace guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_command guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_terminal guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_9_inactive guifg=#ca9ee7 guibg=#303447 gui=None ctermfg=182 ctermbg=237 cterm=None
Executing: highlight! lualine_c_filename_0_normal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_insert guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_visual guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_replace guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_command guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_terminal guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: highlight! lualine_c_filename_0_inactive guifg=#c678dd guibg=#303447 gui=bold ctermfg=176 ctermbg=237 cterm=bold
Executing: augroup lualine_stl_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: au lualine WinEnter,BufEnter,BufWritePost,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,CursorMovedI,ModeChanged *
--- Autocommands ---
Executing: autocmd lualine_stl_refresh WinEnter,BufEnter,BufWritePost,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,CursorMovedI,ModeChanged * call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing: augroup lualine_tal_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: augroup lualine_wb_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <Lua 286: ~/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua:15>

Executing: 
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <Lua 286: ~/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua:15>

Executing: 
Executing:     augroup goto-preview
Executing:       au!
Executing:       au WinClosed * lua require('goto-preview').remove_win()
Executing:       au BufEnter * lua require('goto-preview').buffer_entered()
Executing:       au BufLeave * lua require('goto-preview').buffer_left()
Executing:     augroup end
Executing:   
Executing: augroup filetypedetect
Executing: augroup END
Executing: silent! autocmd! FileExplorer *
Executing: autocmd VimEnter * ++once silent! autocmd! FileExplorer *
Executing: hi def NvimTreeFolderIcon guifg=#8094b4 ctermfg=Blue
Executing: hi def NvimTreeWindowPicker guifg=#ededed guibg=#4493c8 gui=bold ctermfg=White ctermbg=DarkBlue
Executing: hi def link NvimTreeNormal Normal
Executing: hi def link NvimTreeNormalFloat NormalFloat
Executing: hi def link NvimTreeNormalFloatBorder FloatBorder
Executing: hi def link NvimTreeNormalNC NvimTreeNormal
Executing: hi def link NvimTreeLineNr LineNr
Executing: hi def link NvimTreeWinSeparator WinSeparator
Executing: hi def link NvimTreeEndOfBuffer EndOfBuffer
Executing: hi def link NvimTreePopup Normal
Executing: hi def link NvimTreeSignColumn NvimTreeNormal
Executing: hi def link NvimTreeCursorColumn CursorColumn
Executing: hi def link NvimTreeCursorLine CursorLine
Executing: hi def link NvimTreeCursorLineNr CursorLineNr
Executing: hi def link NvimTreeStatusLine StatusLine
Executing: hi def link NvimTreeStatusLineNC StatusLineNC
Executing: hi def link NvimTreeExecFile Question
Executing: hi def link NvimTreeImageFile Question
Executing: hi def link NvimTreeSpecialFile Title
Executing: hi def link NvimTreeSymlink Underlined
Executing: hi def link NvimTreeRootFolder Title
Executing: hi def link NvimTreeFolderName Directory
Executing: hi def link NvimTreeEmptyFolderName Directory
Executing: hi def link NvimTreeOpenedFolderName Directory
Executing: hi def link NvimTreeSymlinkFolderName Directory
Executing: hi def link NvimTreeFileIcon NvimTreeNormal
Executing: hi def link NvimTreeSymlinkIcon NvimTreeNormal
Executing: hi def link NvimTreeOpenedFolderIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeClosedFolderIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeFolderArrowClosed NvimTreeIndentMarker
Executing: hi def link NvimTreeFolderArrowOpen NvimTreeIndentMarker
Executing: hi def link NvimTreeIndentMarker NvimTreeFolderIcon
Executing: hi def link NvimTreeLiveFilterPrefix PreProc
Executing: hi def link NvimTreeLiveFilterValue ModeMsg
Executing: hi def link NvimTreeCutHL SpellBad
Executing: hi def link NvimTreeCopiedHL SpellRare
Executing: hi def link NvimTreeBookmarkIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeBookmarkHL SpellLocal
Executing: hi def link NvimTreeModifiedIcon Type
Executing: hi def link NvimTreeModifiedFileHL NvimTreeModifiedIcon
Executing: hi def link NvimTreeModifiedFolderHL NvimTreeModifiedFileHL
Executing: hi def link NvimTreeHiddenIcon Conceal
Executing: hi def link NvimTreeHiddenFileHL NvimTreeHiddenIcon
Executing: hi def link NvimTreeHiddenFolderHL NvimTreeHiddenFileHL
Executing: hi def link NvimTreeHiddenDisplay Conceal
Executing: hi def link NvimTreeOpenedHL Special
Executing: hi def link NvimTreeGitDeletedIcon Statement
Executing: hi def link NvimTreeGitDirtyIcon Statement
Executing: hi def link NvimTreeGitIgnoredIcon Comment
Executing: hi def link NvimTreeGitMergeIcon Constant
Executing: hi def link NvimTreeGitNewIcon PreProc
Executing: hi def link NvimTreeGitRenamedIcon PreProc
Executing: hi def link NvimTreeGitStagedIcon Constant
Executing: hi def link NvimTreeGitFileDeletedHL NvimTreeGitDeletedIcon
Executing: hi def link NvimTreeGitFileDirtyHL NvimTreeGitDirtyIcon
Executing: hi def link NvimTreeGitFileIgnoredHL NvimTreeGitIgnoredIcon
Executing: hi def link NvimTreeGitFileMergeHL NvimTreeGitMergeIcon
Executing: hi def link NvimTreeGitFileNewHL NvimTreeGitNewIcon
Executing: hi def link NvimTreeGitFileRenamedHL NvimTreeGitRenamedIcon
Executing: hi def link NvimTreeGitFileStagedHL NvimTreeGitStagedIcon
Executing: hi def link NvimTreeGitFolderDeletedHL NvimTreeGitFileDeletedHL
Executing: hi def link NvimTreeGitFolderDirtyHL NvimTreeGitFileDirtyHL
Executing: hi def link NvimTreeGitFolderIgnoredHL NvimTreeGitFileIgnoredHL
Executing: hi def link NvimTreeGitFolderMergeHL NvimTreeGitFileMergeHL
Executing: hi def link NvimTreeGitFolderNewHL NvimTreeGitFileNewHL
Executing: hi def link NvimTreeGitFolderRenamedHL NvimTreeGitFileRenamedHL
Executing: hi def link NvimTreeGitFolderStagedHL NvimTreeGitFileStagedHL
Executing: hi def link NvimTreeDiagnosticErrorIcon DiagnosticError
Executing: hi def link NvimTreeDiagnosticWarnIcon DiagnosticWarn
Executing: hi def link NvimTreeDiagnosticInfoIcon DiagnosticInfo
Executing: hi def link NvimTreeDiagnosticHintIcon DiagnosticHint
Executing: hi def link NvimTreeDiagnosticErrorFileHL DiagnosticUnderlineError
Executing: hi def link NvimTreeDiagnosticWarnFileHL DiagnosticUnderlineWarn
Executing: hi def link NvimTreeDiagnosticInfoFileHL DiagnosticUnderlineInfo
Executing: hi def link NvimTreeDiagnosticHintFileHL DiagnosticUnderlineHint
Executing: hi def link NvimTreeDiagnosticErrorFolderHL NvimTreeDiagnosticErrorFileHL
Executing: hi def link NvimTreeDiagnosticWarnFolderHL NvimTreeDiagnosticWarnFileHL
Executing: hi def link NvimTreeDiagnosticInfoFolderHL NvimTreeDiagnosticInfoFileHL
Executing: hi def link NvimTreeDiagnosticHintFolderHL NvimTreeDiagnosticHintFileHL
Searching for "data/plenary/filetypes/base.lua" in runtime path
Searching for "/Users/embe221ed/.config/nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/site/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/data/plenary/filetypes/base.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/data/plenary/filetypes/base.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/data/plenary/filetypes/base.lua"
Searching for "/opt/neovim/out/lib/nvim/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/data/plenary/filetypes/base.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/data/plenary/filetypes/base.lua"
Searching for "data/plenary/filetypes/builtin.lua" in runtime path
Searching for "/Users/embe221ed/.config/nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/site/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/data/plenary/filetypes/builtin.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/data/plenary/filetypes/builtin.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/data/plenary/filetypes/builtin.lua"
Searching for "/opt/neovim/out/lib/nvim/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/data/plenary/filetypes/builtin.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/data/plenary/filetypes/builtin.lua"
Searching for "data/plenary/filetypes/move.lua" in runtime path
Searching for "/Users/embe221ed/.config/nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/site/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/data/plenary/filetypes/move.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/data/plenary/filetypes/move.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/data/plenary/filetypes/move.lua"
Searching for "/opt/neovim/out/lib/nvim/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/data/plenary/filetypes/move.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/data/plenary/filetypes/move.lua"
Searching for "package.json" in runtime path
Searching for "/Users/embe221ed/.config/nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/site/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/package.json"
Searching for "/opt/neovim/out/share/nvim/runtime/package.json"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/package.json"
Searching for "/opt/neovim/out/lib/nvim/package.json"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/package.json"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/package.json"
Searching for "package.jsonc" in runtime path
Searching for "/Users/embe221ed/.config/nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/site/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/package.jsonc"
Searching for "/opt/neovim/out/share/nvim/runtime/package.jsonc"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/package.jsonc"
Searching for "/opt/neovim/out/lib/nvim/package.jsonc"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/package.jsonc"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/package.jsonc"
not found in runtime path: "package.jsonc"
Executing ColorSchemePre Autocommands for "*"
autocommand <Lua 45: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/loader.lua:31>

Executing: 
Searching for "colors/catppuccin.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/colors/catppuccin.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/colors/catppuccin.*"
line 0: sourcing "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/colors/catppuccin.vim"
line 1: lua require("catppuccin").load()
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/catppuccin/colors/catppuccin.vim
continuing in /opt/scripts/configs/nvim/init.lua
Executing ColorScheme Autocommands for "*"
autocommand lua require('illuminate').set_highlight_defaults()

Executing: lua require('illuminate').set_highlight_defaults()
Executing:     hi def IlluminatedWordText guifg=none guibg=none gui=underline
Executing:     hi def IlluminatedWordRead guifg=none guibg=none gui=underline
Executing:     hi def IlluminatedWordWrite guifg=none guibg=none gui=underline
Executing:     
Executing ColorScheme Autocommands for "*"
autocommand <Lua 130: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:31>

Executing: 
Executing ColorScheme Autocommands for "*"
autocommand <Lua 169: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing ColorScheme Autocommands for "*"
autocommand lua require'lualine'.setup()

Executing: lua require'lualine'.setup()
Executing: augroup lualine | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: highlight clear lualine_x_selectioncount_command
Executing: highlight clear lualine_x_command
Executing: highlight clear lualine_x_selectioncount_terminal
Executing: highlight clear lualine_x_terminal
Executing: highlight clear lualine_x_selectioncount_inactive
Executing: highlight clear lualine_x_inactive
Executing: highlight clear lualine_c_filename_normal
Executing: highlight clear lualine_c_filename_insert
Executing: highlight clear lualine_c_filename_visual
Executing: highlight clear lualine_c_filename_replace
Executing: highlight clear lualine_c_filename_command
Executing: highlight clear lualine_c_filename_terminal
Executing: highlight clear lualine_c_filename_inactive
Executing: highlight clear lualine_c_8_normal
Executing: highlight clear lualine_c_8_insert
Executing: highlight clear lualine_c_8_visual
Executing: highlight clear lualine_c_8_replace
Executing: highlight clear lualine_c_8_command
Executing: highlight clear lualine_c_8_terminal
Executing: highlight clear lualine_x_diff_added_normal
Executing: highlight clear lualine_c_8_inactive
Executing: highlight clear lualine_c_9_normal
Executing: highlight clear lualine_c_9_insert
Executing: highlight clear lualine_x_diff_added_insert
Executing: highlight clear lualine_c_9_visual
Executing: highlight clear lualine_x_diff_added_visual
Executing: highlight clear lualine_c_9_replace
Executing: highlight clear lualine_x_diff_added_replace
Executing: highlight clear lualine_c_9_command
Executing: highlight clear lualine_x_diff_added_command
Executing: highlight clear lualine_c_9_terminal
Executing: highlight clear lualine_x_diff_added_terminal
Executing: highlight clear lualine_c_9_inactive
Executing: highlight clear lualine_x_diff_added_inactive
Executing: highlight clear lualine_c_filename_0_normal
Executing: highlight clear lualine_x_diff_modified_normal
Executing: highlight clear lualine_c_filename_0_insert
Executing: highlight clear lualine_c_4_normal
Executing: highlight clear lualine_x_diff_modified_insert
Executing: highlight clear lualine_x_diff_modified_visual
Executing: highlight clear lualine_x_diff_modified_replace
Executing: highlight clear lualine_c_4_insert
Executing: highlight clear lualine_x_diff_modified_command
Executing: highlight clear lualine_x_diff_modified_terminal
Executing: highlight clear lualine_c_visual
Executing: highlight clear lualine_x_diff_modified_inactive
Executing: highlight clear lualine_c_4_replace
Executing: highlight clear lualine_c_replace
Executing: highlight clear lualine_x_diff_removed_normal
Executing: highlight clear lualine_c_command
Executing: highlight clear lualine_c_4_terminal
Executing: highlight clear lualine_c_terminal
Executing: highlight clear lualine_x_diff_removed_insert
Executing: highlight clear lualine_c_4_inactive
Executing: highlight clear lualine_x_diff_removed_visual
Executing: highlight clear lualine_x_diff_removed_replace
Executing: highlight clear lualine_c_normal
Executing: highlight clear lualine_x_diff_removed_terminal
Executing: highlight clear lualine_x_diff_removed_inactive
Executing: highlight clear lualine_c_5_insert
Executing: highlight clear lualine_c_5_visual
Executing: highlight clear lualine_c_5_replace
Executing: highlight clear lualine_c_filename_0_inactive
Executing: highlight clear lualine_c_5_command
Executing: highlight clear lualine_c_filename_0_terminal
Executing: highlight clear lualine_c_5_terminal
Executing: highlight clear lualine_c_filename_0_command
Executing: highlight clear lualine_c_5_inactive
Executing: highlight clear lualine_x_normal
Executing: highlight clear lualine_c_filename_0_replace
Executing: highlight clear lualine_c_filename_0_visual
Executing: highlight clear lualine_c_4_visual
Executing: highlight clear lualine_x_diff_removed_command
Executing: highlight clear lualine_c_5_normal
Executing: highlight clear lualine_c_inactive
Executing: highlight clear lualine_c_insert
Executing: highlight clear lualine_x_selectioncount_insert
Executing: highlight clear lualine_x_insert
Executing: highlight clear lualine_x_selectioncount_normal
Executing: highlight clear lualine_x_selectioncount_visual
Executing: highlight clear lualine_x_visual
Executing: highlight clear lualine_c_4_command
Executing: highlight clear lualine_x_selectioncount_replace
Executing: highlight clear lualine_x_replace
Executing: highlight! lualine_c_normal guifg=#bbc2cf guibg=#303447 gui=None
Executing: highlight! lualine_c_inactive guifg=#bbc2cf guibg=#303447 gui=None
Executing: autocmd lualine ColorScheme * lua require'lualine'.setup()
Executing:     autocmd lualine OptionSet background lua require'lualine'.setup()
Executing: highlight! lualine_x_selectioncount_normal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_insert guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_visual guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_replace guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_command guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_terminal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_selectioncount_inactive guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_x_diff_added_normal guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_insert guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_visual guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_replace guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_command guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_terminal guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_added_inactive guifg=#a6d18a guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_normal guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_insert guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_visual guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_replace guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_command guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_terminal guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_modified_inactive guifg=#e5c891 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_normal guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_insert guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_visual guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_replace guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_command guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_terminal guifg=#e78285 guibg=#303447 gui=None
Executing: highlight! lualine_x_diff_removed_inactive guifg=#e78285 guibg=#303447 gui=None
Executing: au lualine BufEnter *
--- Autocommands ---
Executing: autocmd lualine BufEnter * lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing: au lualine BufWritePost *
--- Autocommands ---
Executing: autocmd lualine BufWritePost * lua require'lualine.components.diff.git_diff'.update_git_diff()
Executing: highlight! lualine_c_4_normal guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_4_insert guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_4_visual guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_4_replace guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_4_command guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_4_terminal guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_4_inactive guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_5_normal guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_5_insert guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_5_visual guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_5_replace guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_5_command guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_5_terminal guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_5_inactive guifg=#f4b8e5 guibg=#303447 gui=None
Executing: highlight! lualine_c_filename_normal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_insert guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_visual guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_replace guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_command guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_terminal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_inactive guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_8_normal guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_8_insert guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_8_visual guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_8_replace guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_8_command guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_8_terminal guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_8_inactive guifg=#f4b8e5 guibg=#303447 gui=bold
Executing: highlight! lualine_c_9_normal guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_insert guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_visual guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_replace guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_command guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_terminal guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_9_inactive guifg=#ca9ee7 guibg=#303447 gui=None
Executing: highlight! lualine_c_filename_0_normal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_insert guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_visual guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_replace guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_command guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_terminal guifg=#c678dd guibg=#303447 gui=bold
Executing: highlight! lualine_c_filename_0_inactive guifg=#c678dd guibg=#303447 gui=bold
Executing: augroup lualine_stl_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: au lualine WinEnter,BufEnter,BufWritePost,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,CursorMovedI,ModeChanged *
--- Autocommands ---
Executing: autocmd lualine_stl_refresh WinEnter,BufEnter,BufWritePost,SessionLoadPost,FileChangedShellPost,VimResized,Filetype,CursorMoved,CursorMovedI,ModeChanged * call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing: augroup lualine_tal_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing: augroup lualine_wb_refresh | exe "autocmd!" | augroup END
Executing:  exe "autocmd!" | augroup END
Executing: autocmd!
Executing:  augroup END
Executing ColorScheme Autocommands for "*"
autocommand <Lua 256: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/options.lua:96>

Executing: 
Executing ColorScheme Autocommands for "*"
autocommand <Lua 221: ~/.local/share/nvim/lazy/nvim-web-devicons/lua/nvim-web-devicons.lua:317>

Executing: 
Executing ColorScheme Autocommands for "*"
autocommand <Lua 223: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:179>

Executing: hi def NvimTreeFolderIcon guifg=#8094b4 ctermfg=Blue
Executing: hi def NvimTreeWindowPicker guifg=#ededed guibg=#4493c8 gui=bold ctermfg=White ctermbg=DarkBlue
Executing: hi def link NvimTreeNormal Normal
Executing: hi def link NvimTreeNormalFloat NormalFloat
Executing: hi def link NvimTreeNormalFloatBorder FloatBorder
Executing: hi def link NvimTreeNormalNC NvimTreeNormal
Executing: hi def link NvimTreeLineNr LineNr
Executing: hi def link NvimTreeWinSeparator WinSeparator
Executing: hi def link NvimTreeEndOfBuffer EndOfBuffer
Executing: hi def link NvimTreePopup Normal
Executing: hi def link NvimTreeSignColumn NvimTreeNormal
Executing: hi def link NvimTreeCursorColumn CursorColumn
Executing: hi def link NvimTreeCursorLine CursorLine
Executing: hi def link NvimTreeCursorLineNr CursorLineNr
Executing: hi def link NvimTreeStatusLine StatusLine
Executing: hi def link NvimTreeStatusLineNC StatusLineNC
Executing: hi def link NvimTreeExecFile Question
Executing: hi def link NvimTreeImageFile Question
Executing: hi def link NvimTreeSpecialFile Title
Executing: hi def link NvimTreeSymlink Underlined
Executing: hi def link NvimTreeRootFolder Title
Executing: hi def link NvimTreeFolderName Directory
Executing: hi def link NvimTreeEmptyFolderName Directory
Executing: hi def link NvimTreeOpenedFolderName Directory
Executing: hi def link NvimTreeSymlinkFolderName Directory
Executing: hi def link NvimTreeFileIcon NvimTreeNormal
Executing: hi def link NvimTreeSymlinkIcon NvimTreeNormal
Executing: hi def link NvimTreeOpenedFolderIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeClosedFolderIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeFolderArrowClosed NvimTreeIndentMarker
Executing: hi def link NvimTreeFolderArrowOpen NvimTreeIndentMarker
Executing: hi def link NvimTreeIndentMarker NvimTreeFolderIcon
Executing: hi def link NvimTreeLiveFilterPrefix PreProc
Executing: hi def link NvimTreeLiveFilterValue ModeMsg
Executing: hi def link NvimTreeCutHL SpellBad
Executing: hi def link NvimTreeCopiedHL SpellRare
Executing: hi def link NvimTreeBookmarkIcon NvimTreeFolderIcon
Executing: hi def link NvimTreeBookmarkHL SpellLocal
Executing: hi def link NvimTreeModifiedIcon Type
Executing: hi def link NvimTreeModifiedFileHL NvimTreeModifiedIcon
Executing: hi def link NvimTreeModifiedFolderHL NvimTreeModifiedFileHL
Executing: hi def link NvimTreeHiddenIcon Conceal
Executing: hi def link NvimTreeHiddenFileHL NvimTreeHiddenIcon
Executing: hi def link NvimTreeHiddenFolderHL NvimTreeHiddenFileHL
Executing: hi def link NvimTreeHiddenDisplay Conceal
Executing: hi def link NvimTreeOpenedHL Special
Executing: hi def link NvimTreeGitDeletedIcon Statement
Executing: hi def link NvimTreeGitDirtyIcon Statement
Executing: hi def link NvimTreeGitIgnoredIcon Comment
Executing: hi def link NvimTreeGitMergeIcon Constant
Executing: hi def link NvimTreeGitNewIcon PreProc
Executing: hi def link NvimTreeGitRenamedIcon PreProc
Executing: hi def link NvimTreeGitStagedIcon Constant
Executing: hi def link NvimTreeGitFileDeletedHL NvimTreeGitDeletedIcon
Executing: hi def link NvimTreeGitFileDirtyHL NvimTreeGitDirtyIcon
Executing: hi def link NvimTreeGitFileIgnoredHL NvimTreeGitIgnoredIcon
Executing: hi def link NvimTreeGitFileMergeHL NvimTreeGitMergeIcon
Executing: hi def link NvimTreeGitFileNewHL NvimTreeGitNewIcon
Executing: hi def link NvimTreeGitFileRenamedHL NvimTreeGitRenamedIcon
Executing: hi def link NvimTreeGitFileStagedHL NvimTreeGitStagedIcon
Executing: hi def link NvimTreeGitFolderDeletedHL NvimTreeGitFileDeletedHL
Executing: hi def link NvimTreeGitFolderDirtyHL NvimTreeGitFileDirtyHL
Executing: hi def link NvimTreeGitFolderIgnoredHL NvimTreeGitFileIgnoredHL
Executing: hi def link NvimTreeGitFolderMergeHL NvimTreeGitFileMergeHL
Executing: hi def link NvimTreeGitFolderNewHL NvimTreeGitFileNewHL
Executing: hi def link NvimTreeGitFolderRenamedHL NvimTreeGitFileRenamedHL
Executing: hi def link NvimTreeGitFolderStagedHL NvimTreeGitFileStagedHL
Executing: hi def link NvimTreeDiagnosticErrorIcon DiagnosticError
Executing: hi def link NvimTreeDiagnosticWarnIcon DiagnosticWarn
Executing: hi def link NvimTreeDiagnosticInfoIcon DiagnosticInfo
Executing: hi def link NvimTreeDiagnosticHintIcon DiagnosticHint
Executing: hi def link NvimTreeDiagnosticErrorFileHL DiagnosticUnderlineError
Executing: hi def link NvimTreeDiagnosticWarnFileHL DiagnosticUnderlineWarn
Executing: hi def link NvimTreeDiagnosticInfoFileHL DiagnosticUnderlineInfo
Executing: hi def link NvimTreeDiagnosticHintFileHL DiagnosticUnderlineHint
Executing: hi def link NvimTreeDiagnosticErrorFolderHL NvimTreeDiagnosticErrorFileHL
Executing: hi def link NvimTreeDiagnosticWarnFolderHL NvimTreeDiagnosticWarnFileHL
Executing: hi def link NvimTreeDiagnosticInfoFolderHL NvimTreeDiagnosticInfoFileHL
Executing: hi def link NvimTreeDiagnosticHintFolderHL NvimTreeDiagnosticHintFileHL
Executing: 
Searching for "parser/c.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/c.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/c.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/c.so"
Searching for "/opt/neovim/out/lib/nvim/parser/c.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/c.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/c.so"
Searching for "parser/cpp.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/cpp.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/cpp.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/cpp.so"
Searching for "/opt/neovim/out/lib/nvim/parser/cpp.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/cpp.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/cpp.so"
Searching for "parser/lua.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/lua.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/lua.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/lua.so"
Searching for "/opt/neovim/out/lib/nvim/parser/lua.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/lua.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/lua.so"
Searching for "parser/rust.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/rust.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/rust.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/rust.so"
Searching for "/opt/neovim/out/lib/nvim/parser/rust.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/rust.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/rust.so"
Searching for "parser/python.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/python.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/python.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/python.so"
Searching for "/opt/neovim/out/lib/nvim/parser/python.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/python.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/python.so"
Searching for "parser/javascript.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/javascript.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/javascript.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/javascript.so"
Searching for "/opt/neovim/out/lib/nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/javascript.so"
Searching for "parser/markdown.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/markdown.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/markdown.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/markdown.so"
Searching for "/opt/neovim/out/lib/nvim/parser/markdown.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/markdown.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/markdown.so"
Searching for "parser/markdown_inline.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/markdown_inline.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/markdown_inline.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/markdown_inline.so"
Searching for "/opt/neovim/out/lib/nvim/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/markdown_inline.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/markdown_inline.so"
Executing:  highlight IndentBlanklineChar                guifg=#51576d 
Executing:  highlight IndentBlanklineSpaceChar           guifg=#51576d 
Executing:  highlight IndentBlanklineSpaceCharBlankline  guifg=#51576d 
Executing:  highlight NormalFloat                        guibg=combine 
Executing:  highlight BufferlineOffsetTitleBase          cterm=bold gui=bold guifg=#8caaee guibg=#292c3c 
Executing:  highlight BufferlineOffsetTitleBright        cterm=bold gui=bold guifg=#8caaee guibg=#292c3c 
Executing:  highlight TreesitterContextBottom            gui=underline, guisp=#51576d                    
finished sourcing /Users/embe221ed/.config/nvim/init.lua
Searching for "filetype.lua filetype.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/filetype.lua"
Searching for "/Users/embe221ed/.config/nvim/filetype.vim"
sourcing "/Users/embe221ed/.config/nvim/filetype.vim"
line 1: " my filetype file
line 2: if exists("did_load_filetypes")
line 3:   finish
finished sourcing /Users/embe221ed/.config/nvim/filetype.vim
Searching for "/Users/embe221ed/.local/share/nvim/site/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/site/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/filetype.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/filetype.lua"
sourcing "/opt/neovim/out/share/nvim/runtime/filetype.lua"
finished sourcing /opt/neovim/out/share/nvim/runtime/filetype.lua
Searching for "/opt/neovim/out/share/nvim/runtime/filetype.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/filetype.lua"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/filetype.vim"
Searching for "/opt/neovim/out/lib/nvim/filetype.lua"
Searching for "/opt/neovim/out/lib/nvim/filetype.vim"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/filetype.lua"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/filetype.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/filetype.lua"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/filetype.vim"
Executing: so $VIMRUNTIME/syntax/syntax.vim
sourcing "/opt/neovim/out/share/nvim/runtime/syntax/syntax.vim"
line 1: " Vim syntax support file
line 2: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 3: " Last Change:^I2023 Aug 10
line 4: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 5: 
line 6: " This file is used for ":syntax on".
line 7: " It installs the autocommands and starts highlighting for all buffers.
line 8: 
line 9: if !has("syntax")
line 10:   finish
line 11: endif
line 12: 
line 13: " If Syntax highlighting appears to be on already, turn it off first, so that
line 14: " any leftovers are cleared.
line 15: if exists("syntax_on") || exists("syntax_manual")
line 16:   so <sfile>:p:h/nosyntax.vim
line 17: endif
line 18: 
line 19: " Load the Syntax autocommands and set the default methods for highlighting.
line 20: runtime syntax/synload.vim
Searching for "syntax/synload.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/site/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/syntax/synload.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/syntax/synload.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/syntax/synload.vim"
line 20: sourcing "/opt/neovim/out/share/nvim/runtime/syntax/synload.vim"
line 1: " Vim syntax support file
line 2: " Maintainer:^IThe Vim Project <https://github.com/vim/vim>
line 3: " Last Change:^I2023 Aug 10
line 4: " Former Maintainer:^IBram Moolenaar <Bram@vim.org>
line 5: 
line 6: " This file sets up for syntax highlighting.
line 7: " It is loaded from "syntax.vim" and "manual.vim".
line 8: " 1. Set the default highlight groups.
line 9: " 2. Install Syntax autocommands for all the available syntax files.
line 10: 
line 11: if !has("syntax")
line 12:   finish
line 13: endif
line 14: 
line 15: " let others know that syntax has been switched on
line 16: let syntax_on = 1
line 17: 
line 18: " Line continuation is used here, remove 'C' from 'cpoptions'
line 19: let s:cpo_save = &cpo
line 20: set cpo&vim
line 21: 
line 22: " First remove all old syntax autocommands.
line 23: au! Syntax
line 24: 
line 25: au Syntax *^I^Icall s:SynSet()
line 26: 
line 27: fun! s:SynSet()
line 58: 
line 59: 
line 60: " Handle adding doxygen to other languages (C, C++, C#, IDL, java, php, DataScript)
line 61: au Syntax c,cpp,cs,idl,java,php,datascript if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
line 66: 
line 67: 
line 68: " Source the user-specified syntax highlighting file
line 69: if exists("mysyntaxfile")
line 70:   let s:fname = expand(mysyntaxfile)
line 71:   if filereadable(s:fname)
line 72:     execute "source " . fnameescape(s:fname)
line 73:   endif
line 74: endif
line 75: 
line 76: " Restore 'cpoptions'
line 77: let &cpo = s:cpo_save
line 78: unlet s:cpo_save
finished sourcing /opt/neovim/out/share/nvim/runtime/syntax/synload.vim
continuing in /opt/neovim/out/share/nvim/runtime/syntax/syntax.vim
line 21: 
line 22: " Load the FileType autocommands if not done yet.
line 23: if exists("did_load_filetypes")
line 24:   let s:did_ft = 1
line 25: else
line 26:   filetype on
line 27:   let s:did_ft = 0
line 28: endif
line 29: 
line 30: " Set up the connection between FileType and Syntax autocommands.
line 31: " This makes the syntax automatically set when the file type is detected
line 32: " unless treesitter highlighting is enabled.
line 33: " Avoid an error when 'verbose' is set and <amatch> expansion fails.
line 34: augroup syntaxset
line 35:   au! FileType *^Iif !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
line 36: augroup END
line 37: 
line 38: " Execute the syntax autocommands for the each buffer.
line 39: " If the filetype wasn't detected yet, do that now.
line 40: " Always do the syntaxset autocommands, for buffers where the 'filetype'
line 41: " already was set manually (e.g., help buffers).
line 42: doautoall syntaxset FileType
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
line 43: if !s:did_ft
line 44:   doautoall filetypedetect BufRead
line 45: endif
finished sourcing /opt/neovim/out/share/nvim/runtime/syntax/syntax.vim
Reading ShaDa file "/Users/embe221ed/.local/state/nvim/shada/main.shada" info marks oldfiles
Found a swap file that is not useful, deleting it
Executing BufReadPre Autocommands for "*"
autocommand <Lua 48: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/handler/event.lua:72>

Executing: augroup filetypedetect
Executing: augroup END
Executing: 
Reading ShaDa file "/Users/embe221ed/.local/state/nvim/shada/main.shada" marks
Executing BufReadPost Autocommands for "*"
autocommand <Lua 52: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/handler/event.lua:72>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 55: /opt/neovim/out/share/nvim/runtime/filetype.lua:10>

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling <SNR>2_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 20: runtime! ftplugin/javascript[.]{vim,lua} ftplugin/javascript_*.{vim,lua} ftplugin/javascript/*.{vim,lua}
Searching for "ftplugin/javascript[.]{vim,lua} ftplugin/javascript_*.{vim,lua} ftplugin/javascript/*.{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/javascript/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/javascript[.]{vim,lua}"
line 20: sourcing "/opt/neovim/out/share/nvim/runtime/ftplugin/javascript.vim"
line 1: " Vim filetype plugin file
line 2: " Language:     Javascript
line 3: " Maintainer:   Doug Kearns <dougkearns@gmail.com>
line 4: " Contributor:  Romain Lafourcade <romainlafourcade@gmail.com>
line 5: " Last Change:^I2024 Jan 14
line 6: " ^I^I2024 May 23 by Riley Bruins <ribru17@gmail.com> ('commentstring')
line 7: 
line 8: if exists("b:did_ftplugin")
line 9:     finish
line 10: endif
line 11: let b:did_ftplugin = 1
line 12: 
line 13: let s:cpo_save = &cpo
line 14: set cpo-=C
line 15: 
line 16: " Set 'formatoptions' to break comment lines but not other lines,
line 17: " and insert the comment leader when hitting <CR> or using "o".
line 18: setlocal formatoptions-=t formatoptions+=croql
line 19: 
line 20: " Set completion with CTRL-X CTRL-O to autoloaded function.
line 21: if exists('&ofu')
line 22:     setlocal omnifunc=javascriptcomplete#CompleteJS
line 23: endif
line 24: 
line 25: " Set 'comments' to format dashed lists in comments.
line 26: setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
line 27: 
line 28: setlocal commentstring=//\ %s
line 29: 
line 30: " Change the :browse e filter to primarily show JavaScript-related files.
line 31: if (has("gui_win32") || has("gui_gtk")) && !exists("b:browsefilter")
line 32:     let b:browsefilter = "JavaScript Files (*.js)\t*.js\n" .. "JSX Files (*.jsx)\t*.jsx\n" .. "JavaScript Modules (*.es, *.es6, *.cjs, *.mjs, *.jsm)\t*.es;*.es6;*.cjs;*.mjs;*.jsm\n" .. "Vue Templates (*.vue)\t*.vue\n" .. "JSON Files (*.json)\t*.json\n"
line 38:     if has("win32")
line 39:         let b:browsefilter ..= "All Files (*.*)\t*\n"
line 40:     else
line 41:         let b:browsefilter ..= "All Files (*)\t*\n"
line 42:     endif
line 43: endif
line 44: 
line 45: " The following suffixes should be implied when resolving filenames
line 46: setlocal suffixesadd+=.js,.jsx,.es,.es6,.cjs,.mjs,.jsm,.vue,.json
line 47: 
line 48: " The following suffixes should have low priority
line 49: "   .snap    jest snapshot
line 50: setlocal suffixes+=.snap
line 51: 
line 52: " Remove irrelevant part of 'path'.
line 53: " User is expected to augment it with contextually-relevant paths
line 54: setlocal path-=/usr/include
line 55: 
line 56: " Matchit configuration
line 57: if exists("loaded_matchit")
line 58:     let b:match_ignorecase = 0
line 59:     let b:match_words = '\<do\>:\<while\>,' .. '<\@<=\([^ \t>/]\+\)\%(\s\+[^>]*\%([^/]>\|$\)\|>\|$\):<\@<=/\1>,' .. '<\@<=\%([^ \t>/]\+\)\%(\s\+[^/>]*\|$\):/>'
line 63: endif
line 64: 
line 65: " Set 'define' to a comprehensive value
line 66: let &l:define = '\(^\s*(*async\s\+function\|(*function\)' .. '\|^\s*\(\*\|static\|async\|get\|set\|\i\+\.\)' .. '\|^\s*\(\ze\i\+\)\(([^)]*).*{$\|\s*[:=,]\)' .. '\|^\s*\(export\s\+\|export\s\+default\s\+\)*\(var\|let\|const\|function\|class\)' .. '\|\<as\>'
line 72: 
line 73: let b:undo_ftplugin = "setl fo< ofu< com< cms< sua< su< def< pa<" .. "| unlet! b:browsefilter b:match_ignorecase b:match_words"
line 76: 
line 77: let &cpo = s:cpo_save
line 78: unlet s:cpo_save
line 79: 
line 80: " vim: textwidth=78 tabstop=8 shiftwidth=4 softtabstop=4 expandtab
finished sourcing /opt/neovim/out/share/nvim/runtime/ftplugin/javascript.vim
continuing in <SNR>2_LoadFTPlugin
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/javascript_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/javascript/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/javascript[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/javascript_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/javascript/*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/javascript[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/javascript_*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/javascript/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/javascript_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/javascript/*.{vim,lua}"
line 21:       endfor
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 21:       endfor
line 22:     endif
<SNR>2_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling <SNR>3_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 15: runtime! indent/javascript[.]{vim,lua}
Searching for "indent/javascript[.]{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/indent/javascript[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/indent/javascript[.]{vim,lua}"
line 15: sourcing "/opt/neovim/out/share/nvim/runtime/indent/javascript.vim"
line 1: " Vim indent file
line 2: " Language: Javascript
line 3: " Maintainer: Chris Paul ( https://github.com/bounceme )
line 4: " URL: https://github.com/pangloss/vim-javascript
line 5: " Last Change: December 4, 2017
line 6: 
line 7: " Only load this indent file when no other was loaded.
line 8: if exists('b:did_indent')
line 9:   finish
line 10: endif
line 11: let b:did_indent = 1
line 12: 
line 13: " Now, set up our indentation expression and keys that trigger it.
line 14: setlocal indentexpr=GetJavascriptIndent()
line 15: setlocal autoindent nolisp nosmartindent
line 16: setlocal indentkeys+=0],0)
line 17: " Testable with something like:
line 18: " vim  -eNs "+filetype plugin indent on" "+syntax on" "+set ft=javascript" \
line 19: "       "+norm! gg=G" '+%print' '+:q!' testfile.js \
line 20: "       | diff -uBZ testfile.js -
line 21: 
line 22: let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'
line 23: 
line 24: " Only define the function once.
line 25: if exists('*GetJavascriptIndent')
line 26:   finish
line 27: endif
line 28: 
line 29: let s:cpo_save = &cpo
line 30: set cpo&vim
line 31: 
line 32: " indent correctly if inside <script>
line 33: " vim/vim@690afe1 for the switch from cindent
line 34: " overridden with b:html_indent_script1
line 35: call extend(g:,{'html_indent_script1': 'inc'},'keep')
line 36: 
line 37: " Regex of syntax group names that are or delimit string or are comments.
line 38: let s:bvars = { 'syng_strcom': 'string\|comment\|regex\|special\|doc\|template\%(braces\)\@!', 'syng_str': 'string\|template\|special' }
line 41: " template strings may want to be excluded when editing graphql:
line 42: " au! Filetype javascript let b:syng_str = '^\%(.*template\)\@!.*string\|special'
line 43: " au! Filetype javascript let b:syng_strcom = '^\%(.*template\)\@!.*string\|comment\|regex\|special\|doc'
line 44: 
line 45: function s:GetVars()
line 48: 
line 49: " Get shiftwidth value
line 50: if exists('*shiftwidth')
line 51:   function s:sw()
line 54: else
line 55:   function s:sw()
line 58: endif
line 59: 
line 60: " Performance for forwards search(): start search at pos rather than masking
line 61: " matches before pos.
line 62: let s:z = has('patch-7.4.984') ? 'z' : ''
line 63: 
line 64: " Expression used to check whether we should skip a match with searchpair().
line 65: let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"
line 66: let s:in_comm = s:skip_expr[:-14] . "'comment\\|doc'"
line 67: 
line 68: let s:rel = has('reltime')
line 69: " searchpair() wrapper
line 70: if s:rel
line 71:   function s:GetPair(start,end,flags,skip)
line 74: else
line 75:   function s:GetPair(start,end,flags,skip)
line 78: endif
line 79: 
line 80: function s:SynAt(l,c)
line 88: 
line 89: function s:ParseCino(f)
line 107: 
line 108: " Optimized {skip} expr, only callable from the search loop which
line 109: " GetJavascriptIndent does to find the containing [[{(] (side-effects)
line 110: function s:SkipFunc()
line 132: 
line 133: function s:AlternatePair()
line 156: 
line 157: function s:Nat(int)
line 160: 
line 161: function s:LookingAt()
line 164: 
line 165: function s:Token()
line 168: 
line 169: function s:PreviousToken(...)
line 193: 
line 194: function s:Pure(f,...)
line 197: 
line 198: function s:SearchLoop(pat,flags,expr)
line 201: 
line 202: function s:ExprCol()
line 228: 
line 229: " configurable regexes that define continuation lines, not including (, {, or [.
line 230: let s:opfirst = '^' . get(g:,'javascript_opfirst', '\C\%([<>=,.?^%|/&]\|\([-:+]\)\1\@!\|\*\+\|!=\|in\%(stanceof\)\=\>\)')
line 232: let s:continuation = get(g:,'javascript_continuation', '\C\%([<=,.~!?/*^%|&:]\|+\@<!+\|-\@<!-\|=\@<!>\|\<\%(typeof\|new\|delete\|void\|in\|instanceof\|await\)\)') . '$'
line 234: 
line 235: function s:Continues()
line 244: 
line 245: " Check if line 'lnum' has a balanced amount of parentheses.
line 246: function s:Balanced(lnum,line)
line 261: 
line 262: function s:OneScope()
line 278: 
line 279: function s:DoWhile()
line 295: 
line 296: " returns total offset from braceless contexts. 'num' is the lineNr which
line 297: " encloses the entire context, 'cont' if whether a:firstline is a continued
line 298: " expression, which could have started in a braceless context
line 299: function s:IsContOne(cont)
line 318: 
line 319: function s:IsSwitch()
line 323: 
line 324: " https://github.com/sweet-js/sweet.js/wiki/design#give-lookbehind-to-the-reader
line 325: function s:IsBlock()
line 351: 
line 352: function GetJavascriptIndent()
line 484: 
line 485: let &cpo = s:cpo_save
line 486: unlet s:cpo_save
finished sourcing /opt/neovim/out/share/nvim/runtime/indent/javascript.vim
continuing in <SNR>3_LoadIndent
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/indent/javascript[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/indent/javascript[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/indent/javascript[.]{vim,lua}"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 16:       endfor
line 17:     endif
<SNR>3_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand <Lua 60: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Searching for "parser/javascript.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/javascript.*"
Searching for "queries/javascript/locals.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/locals.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/locals.scm"
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 131: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:59>

Searching for "parser/javascript.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/javascript.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/javascript.*"
Searching for "queries/javascript/injections.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/injections.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/injections.scm"
Searching for "queries/ecma/injections.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/ecma/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/ecma/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/ecma/injections.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/ecma/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/ecma/injections.scm"
Searching for "queries/jsx/injections.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/jsx/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/jsx/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/jsx/injections.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/jsx/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/jsx/injections.scm"
Searching for "queries/javascript/rainbow-delimiters-react.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/rainbow-delimiters-react.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/rainbow-delimiters-react.scm"
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 179: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:20>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 93: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:86>

Executing: 
Executing FileType Autocommands for "javascript"
autocommand <Lua 160: ~/.local/share/nvim/lazy/nvim-lspconfig/lua/lspconfig/configs.lua:104>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 347: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:77>

Executing: 
Executing FileType Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing FileType Autocommands for "*"
autocommand <Lua 390: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/install.lua:561>

Searching for "parser/javascript.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/javascript.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/javascript.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/javascript.so"
Searching for "/opt/neovim/out/lib/nvim/parser/javascript.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/javascript.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/javascript.so"
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 391: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Searching for "queries/javascript/highlights.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/highlights.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/highlights.scm"
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling <SNR>109_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   0verbose let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 26:         exe $'runtime! syntax/{name}[.]{{vim,lua}} syntax/{name}/*.{{vim,lua}}'
line 27:       endif
line 28:     endfor
line 29:   endif
<SNR>109_SynSet returning #0

continuing in Syntax Autocommands for "*"

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 414: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing: 
autocommand if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing: if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtime! scripts.vim | endif
Executing:  runtime! scripts.vim | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif

Executing: if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
Executing:    unlet b:git_dir | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand <Lua 231: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:130>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 250: /opt/neovim/out/share/nvim/runtime/plugin/editorconfig.lua:4>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 261: ~/.local/share/nvim/lazy/guess-indent.nvim/lua/guess-indent/init.lua:35>

Excluded because of editorconfig settings.
Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 246: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:210>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 386: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:136>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 396: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:130>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 91: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:86>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand autocmd SafeState * ++once call s:Highlight_Matching_Pair()

Executing: autocmd SafeState * ++once call s:Highlight_Matching_Pair()
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 321: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 345: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 411: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif

Executing: if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
Executing:     setlocal nolist linebreak filetype=markdown | endif
Executing:  endif
Executing BufEnter Autocommands for "*"
autocommand <Lua 228: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require('goto-preview').buffer_entered()

Executing: lua require('goto-preview').buffer_entered()
Executing BufEnter Autocommands for "*"
autocommand <Lua 287: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:104>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif

Executing: if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif
Executing:  quit | endif
Executing:  endif
autocommand <Lua 320: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 344: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <Lua 387: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:141>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 393: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing VimEnter Autocommands for "*"
autocommand <Lua 33: vim/_defaults.lua:0>

Executing: 
Executing VimEnter Autocommands for "*"
autocommand <Lua 64: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing VimEnter Autocommands for "*"
autocommand silent! autocmd! FileExplorer *

Executing: silent! autocmd! FileExplorer *
autocommand <Lua 407: ~/.local/share/nvim/lazy/noice.nvim/lua/noice/init.lua:18>

Executing:     hi default link NotifyBackground Normal
Executing:     hi default NotifyERRORBorder guifg=#8A1F1F
Executing:     hi default NotifyWARNBorder guifg=#79491D
Executing:     hi default NotifyINFOBorder guifg=#4F6752
Executing:     hi default NotifyDEBUGBorder guifg=#8B8B8B
Executing:     hi default NotifyTRACEBorder guifg=#4F3552
Executing:     hi default NotifyERRORIcon guifg=#F70067
Executing:     hi default NotifyWARNIcon guifg=#F79000
Executing:     hi default NotifyINFOIcon guifg=#A9FF68
Executing:     hi default NotifyDEBUGIcon guifg=#8B8B8B
Executing:     hi default NotifyTRACEIcon guifg=#D484FF
Executing:     hi default NotifyERRORTitle  guifg=#F70067
Executing:     hi default NotifyWARNTitle guifg=#F79000
Executing:     hi default NotifyINFOTitle guifg=#A9FF68
Executing:     hi default NotifyDEBUGTitle  guifg=#8B8B8B
Executing:     hi default NotifyTRACETitle  guifg=#D484FF
Executing:     hi default link NotifyERRORBody Normal
Executing:     hi default link NotifyWARNBody Normal
Executing:     hi default link NotifyINFOBody Normal
Executing:     hi default link NotifyDEBUGBody Normal
Executing:     hi default link NotifyTRACEBody Normal
Executing: 
Executing:     hi default link NotifyLogTime Comment
Executing:     hi default link NotifyLogTitle Special
Executing:   
Executing:   augroup NvimNotifyRefreshHighlights
Executing:     autocmd!
Executing:     autocmd ColorScheme * lua require('notify.config.highlights').setup()
Executing:   augroup END
Excluded because of editorconfig settings.
Executing: 
Executing VimEnter Autocommands for "*"
autocommand <Lua 408: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/init.lua:98>

Executing: 
Executing UIEnter Autocommands for "*"
autocommand <Lua 42: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/config.lua:326>

Executing: 
Executing UIEnter Autocommands for "*"
autocommand <Lua 142: ~/.local/share/nvim/lazy/dashboard-nvim/plugin/dashboard.lua:14>

Executing: 
Executing UIEnter Autocommands for "*"
autocommand <Lua 170: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing UIEnter Autocommands for "*"
autocommand <Lua 297: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/util.lua:189>

Executing: 
Searching for "autoload/provider/clipboard.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/site/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/autoload/provider/clipboard.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/autoload/provider/clipboard.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/autoload/provider/clipboard.vim"
sourcing "/opt/neovim/out/share/nvim/runtime/autoload/provider/clipboard.vim"
line 1: " The clipboard provider uses shell commands to communicate with the clipboard.
line 2: " The provider function will only be registered if a supported command is
line 3: " available.
line 4: 
line 5: if exists('g:loaded_clipboard_provider')
line 6:   finish
line 7: endif
line 8: " Default to 1.  provider#clipboard#Executable() may set 2.
line 9: " To force a reload:
line 10: "   :unlet g:loaded_clipboard_provider
line 11: "   :runtime autoload/provider/clipboard.vim
line 12: let g:loaded_clipboard_provider = 1
line 13: 
line 14: let s:copy = {}
line 15: let s:paste = {}
line 16: let s:clipboard = {}
line 17: 
line 18: " When caching is enabled, store the jobid of the xclip/xsel process keeping
line 19: " ownership of the selection, so we know how long the cache is valid.
line 20: let s:selection = { 'owner': 0, 'data': [], 'stderr_buffered': v:true }
line 21: 
line 22: function! s:selection.on_exit(jobid, data, event) abort
line 35: 
line 36: let s:selections = { '*': s:selection, '+': copy(s:selection) }
line 37: 
line 38: function! s:try_cmd(cmd, ...) abort
line 51: 
line 52: " Returns TRUE if `cmd` exits with success, else FALSE.
line 53: function! s:cmd_ok(cmd) abort
line 57: 
line 58: function! s:split_cmd(cmd) abort
line 61: 
line 62: let s:cache_enabled = 1
line 63: let s:err = ''
line 64: 
line 65: function! provider#clipboard#Error() abort
line 68: 
line 69: function! provider#clipboard#Executable() abort
line 177: 
line 178: function! s:clipboard.get(reg) abort
line 195: 
line 196: function! s:clipboard.set(lines, regtype, reg) abort
line 254: 
line 255: function! provider#clipboard#Call(method, args) abort
line 266: 
line 267: " eval_has_provider() decides based on this variable.
line 268: let g:loaded_clipboard_provider = empty(provider#clipboard#Executable()) ? 1 : 2
calling provider#clipboard#Executable()

line 1:   " Setting g:clipboard to v:false explicitly opts-in to using the "builtin" clipboard providers below
line 2:   if exists('g:clipboard') && g:clipboard isnot# v:false
line 3:     if type({}) isnot# type(g:clipboard) || type({}) isnot# type(get(g:clipboard, 'copy', v:null)) || type({}) isnot# type(get(g:clipboard, 'paste', v:null))
line 6:       let s:err = 'clipboard: invalid g:clipboard'
line 7:       return ''
line 8:     endif
line 9: 
line 10:     let s:copy = {}
line 11:     let s:copy['+'] = s:split_cmd(get(g:clipboard.copy, '+', v:null))
line 12:     let s:copy['*'] = s:split_cmd(get(g:clipboard.copy, '*', v:null))
line 13: 
line 14:     let s:paste = {}
line 15:     let s:paste['+'] = s:split_cmd(get(g:clipboard.paste, '+', v:null))
line 16:     let s:paste['*'] = s:split_cmd(get(g:clipboard.paste, '*', v:null))
line 17: 
line 18:     let s:cache_enabled = get(g:clipboard, 'cache_enabled', 0)
line 19:     return get(g:clipboard, 'name', 'g:clipboard')
line 20:   elseif has('mac')
line 21:     let s:copy['+'] = ['pbcopy']
line 22:     let s:paste['+'] = ['pbpaste']
line 23:     let s:copy['*'] = s:copy['+']
line 24:     let s:paste['*'] = s:paste['+']
line 25:     let s:cache_enabled = 0
line 26:     return 'pbcopy'
provider#clipboard#Executable returning 'pbcopy'

continuing in /opt/neovim/out/share/nvim/runtime/autoload/provider/clipboard.vim

finished sourcing /opt/neovim/out/share/nvim/runtime/autoload/provider/clipboard.vim
Executing SafeState Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in SafeState Autocommands for "*"

Executing: autocmd User CocDiagnosticChange lua require('bufferline.diagnostics').refresh_coc_diagnostics()
Searching for "parser/comment.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/comment.*"
Searching for "/opt/neovim/out/lib/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/comment.*"
not found in runtime path: "parser/comment.*"
Searching for "parser/regex.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/regex.*"
Searching for "/opt/neovim/out/lib/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/regex.*"
not found in runtime path: "parser/regex.*"
Searching for "queries/javascript/highlights.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/highlights.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/highlights.scm"
Searching for "queries/ecma/highlights.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/ecma/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/ecma/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/ecma/highlights.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/ecma/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/ecma/highlights.scm"
Searching for "queries/jsx/highlights.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/jsx/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/jsx/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/jsx/highlights.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/jsx/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/jsx/highlights.scm"
Executing TermResponse Autocommands for "*"
autocommand <Lua 31: vim/_defaults.lua:0>

Executing: 
Searching for "parser/markdown.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/markdown.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/markdown.*"
Searching for "parser/markdown_inline.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/markdown_inline.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/markdown_inline.*"
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <Lua 286: ~/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua:15>

Executing: 
Executing User Autocommands for "LuasnipSnippetsAdded"
autocommand <Lua 286: ~/.local/share/nvim/lazy/cmp_luasnip/after/plugin/cmp_luasnip.lua:15>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi def TodoBgNOTE guibg=#a6dbff guifg=#303447 gui=BOLD
Executing: hi def TodoFgNOTE guibg=NONE guifg=#a6dbff gui=NONE
Executing: hi def TodoSignNOTE guibg=NONE guifg=#a6dbff gui=NONE
Executing: hi def TodoBgFINDING guibg=#ffc0b9 guifg=#303447 gui=BOLD
Executing: hi def TodoFgFINDING guibg=NONE guifg=#ffc0b9 gui=NONE
Executing: hi def TodoSignFINDING guibg=NONE guifg=#ffc0b9 gui=NONE
Executing: hi def TodoBgPERF guibg=#eebebf guifg=#303447 gui=BOLD
Executing: hi def TodoFgPERF guibg=NONE guifg=#eebebf gui=NONE
Executing: hi def TodoSignPERF guibg=NONE guifg=#eebebf gui=NONE
Executing: hi def TodoBgWARN guibg=#fce094 guifg=#303447 gui=BOLD
Executing: hi def TodoFgWARN guibg=NONE guifg=#fce094 gui=NONE
Executing: hi def TodoSignWARN guibg=NONE guifg=#fce094 gui=NONE
Executing: hi def TodoBgAUDIT guibg=#de85f5 guifg=#303447 gui=BOLD
Executing: hi def TodoFgAUDIT guibg=NONE guifg=#de85f5 gui=NONE
Executing: hi def TodoSignAUDIT guibg=NONE guifg=#de85f5 gui=NONE
Executing: hi def TodoBgHACK guibg=#fce094 guifg=#303447 gui=BOLD
Executing: hi def TodoFgHACK guibg=NONE guifg=#fce094 gui=NONE
Executing: hi def TodoSignHACK guibg=NONE guifg=#fce094 gui=NONE
Executing: hi def TodoBgTEST guibg=#eebebf guifg=#303447 gui=BOLD
Executing: hi def TodoFgTEST guibg=NONE guifg=#eebebf gui=NONE
Executing: hi def TodoSignTEST guibg=NONE guifg=#eebebf gui=NONE
Executing: hi def TodoBgTODO guibg=#8cf8f7 guifg=#303447 gui=BOLD
Executing: hi def TodoFgTODO guibg=NONE guifg=#8cf8f7 gui=NONE
Executing: hi def TodoSignTODO guibg=NONE guifg=#8cf8f7 gui=NONE
Executing: hi def TodoBgIDEA guibg=#ffd600 guifg=#303447 gui=BOLD
Executing: hi def TodoFgIDEA guibg=NONE guifg=#ffd600 gui=NONE
Executing: hi def TodoSignIDEA guibg=NONE guifg=#ffd600 gui=NONE
Executing: hi def TodoBgFIX guibg=#ffc0b9 guifg=#303447 gui=BOLD
Executing: hi def TodoFgFIX guibg=NONE guifg=#ffc0b9 gui=NONE
Executing: hi def TodoSignFIX guibg=NONE guifg=#ffc0b9 gui=NONE
Executing: hi def TodoBgQUESTION guibg=#ffffc6 guifg=#303447 gui=BOLD
Executing: hi def TodoFgQUESTION guibg=NONE guifg=#ffffc6 gui=NONE
Executing: hi def TodoSignQUESTION guibg=NONE guifg=#ffffc6 gui=NONE
Executing: augroup Todo
Executing:         autocmd!
Executing:         autocmd BufWinEnter,WinNew * lua require("todo-comments.highlight").attach()
Executing:         autocmd WinScrolled * lua require("todo-comments.highlight").highlight_win()
Executing:         autocmd ColorScheme * lua vim.defer_fn(require("todo-comments.config").colors, 10)
Executing:       augroup end
Executing User Autocommands for "VeryLazy"
autocommand <Lua 43: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/config.lua:337>

Executing: 
Searching for "queries/javascript/locals.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/locals.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/locals.scm"
Searching for "queries/ecma/locals.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/ecma/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/ecma/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/ecma/locals.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/ecma/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/ecma/locals.scm"
Searching for "queries/jsx/locals.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/jsx/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/jsx/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/jsx/locals.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/jsx/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/jsx/locals.scm"
not found in runtime path: "queries/jsx/locals.scm"


--- Terminal info --- {{{
&term: xterm-kitty
Description: KovIdTTY
Aliases: xterm-kitty
Boolean capabilities:
  auto_left_margin          bw         = false
  auto_right_margin         am         = true
  no_esc_ctlc               xsb        = false
  ceol_standout_glitch      xhp        = false
  eat_newline_glitch        xenl       = true
  erase_overstrike          eo         = false
  generic_type              gn         = false
  hard_copy                 hc         = false
  has_meta_key              km         = true
  has_status_line           hs         = true
  insert_null_glitch        in         = false
  memory_above              da         = false
  memory_below              db         = false
  move_insert_mode          mir        = true
  move_standout_mode        msgr       = true
  over_strike               os         = false
  status_line_esc_ok        eslok      = false
  dest_tabs_magic_smso      xt         = false
  tilde_glitch              hz         = false
  transparent_underline     ul         = false
  xon_xoff                  xon        = false
  needs_xon_xoff            nxon       = false
  prtr_silent               mc5i       = true
  hard_cursor               chts       = false
  non_rev_rmcup             nrrmc      = false
  no_pad_char               npc        = true
  non_dest_scroll_region    ndscr      = false
  can_change                ccc        = true
  back_color_erase          bce        = false
  hue_lightness_saturation  hls        = false
  col_addr_glitch           xhpa       = false
  cr_cancels_micro_mode     crxm       = false
  has_print_wheel           daisy      = false
  row_addr_glitch           xvpa       = false
  semi_auto_right_margin    sam        = false
  cpi_changes_res           cpix       = false
  lpi_changes_res           lpix       = false
  backspaces_with_bs        OTbs       = false
  crt_no_scrolling          OTns       = false
  no_correctly_working_cr   OTnc       = false
  gnu_has_meta_key          OTMT       = false
  linefeed_is_newline       OTNL       = false
  has_hardware_tabs         OTpt       = false
  return_does_clr_eol       OTxr       = false
Numeric capabilities:
  columns                   cols       = 80
  init_tabs                 it         = 8
  lines                     lines      = 24
  lines_of_memory           lm         = -1
  magic_cookie_glitch       xmc        = -1
  padding_baud_rate         pb         = -1
  virtual_terminal          vt         = -1
  width_status_line         wsl        = -1
  num_labels                nlab       = -1
  label_height              lh         = -1
  label_width               lw         = -1
  max_attributes            ma         = -1
  maximum_windows           wnum       = -1
  max_colors                colors     = 256
  max_pairs                 pairs      = 32767
  no_color_video            ncv        = -1
  buffer_capacity           bufsz      = -1
  dot_vert_spacing          spinv      = -1
  dot_horz_spacing          spinh      = -1
  max_micro_address         maddr      = -1
  max_micro_jump            mjump      = -1
  micro_col_size            mcs        = -1
  micro_line_size           mls        = -1
  number_of_pins            npins      = -1
  output_res_char           orc        = -1
  output_res_line           orl        = -1
  output_res_horz_inch      orhi       = -1
  output_res_vert_inch      orvi       = -1
  print_rate                cps        = -1
  wide_char_size            widcs      = -1
  buttons                   btns       = -1
  bit_image_entwining       bitwin     = -1
  bit_image_type            bitype     = -1
  magic_cookie_glitch_ul    OTug       = -1
  carriage_return_delay     OTdC       = -1
  new_line_delay            OTdN       = -1
  backspace_delay           OTdB       = -1
  horizontal_tab_delay      OTdT       = -1
  number_of_function_keys   OTkn       = -1
String capabilities:
  back_tab                  cbt        = ^[[Z
  bell                      bel        = ^G
  carriage_return           cr         = ^M
  change_scroll_region      csr        = ^[[%i%p1%d;%p2%dr
  clear_all_tabs            tbc        = ^[[3g
  clear_screen              clear      = ^[[H^[[2J
  clr_eol                   el         = ^[[K
  clr_eos                   ed         = ^[[J
  column_address            hpa        = ^[[%i%p1%dG
  cursor_address            cup        = ^[[%i%p1%d;%p2%dH
  cursor_down               cud1       = ^@
  cursor_home               home       = ^[[H
  cursor_invisible          civis      = ^[[?25l
  cursor_left               cub1       = ^H
  cursor_normal             cnorm      = ^[[?12h^[[?25h
  cursor_right              cuf1       = ^[[C
  cursor_up                 cuu1       = ^[[A
  cursor_visible            cvvis      = ^[[?12;25h
  delete_character          dch1       = ^[[P
  delete_line               dl1        = ^[[M
  dis_status_line           dsl        = ^[]2;^[\
  enter_alt_charset_mode    smacs      = ^[(0
  enter_bold_mode           bold       = ^[[1m
  enter_ca_mode             smcup      = ^[[?1049h
  enter_dim_mode            dim        = ^[[2m
  enter_insert_mode         smir       = ^[[4h
  enter_reverse_mode        rev        = ^[[7m
  enter_standout_mode       smso       = ^[[7m
  enter_underline_mode      smul       = ^[[4m
  erase_chars               ech        = ^[[%p1%dX
  exit_alt_charset_mode     rmacs      = ^[(B
  exit_attribute_mode       sgr0       = ^[(B^[[m
  exit_ca_mode              rmcup      = ^[[?1049l
  exit_insert_mode          rmir       = ^[[4l
  exit_standout_mode        rmso       = ^[[27m
  exit_underline_mode       rmul       = ^[[24m
  flash_screen              flash      = ^[[?5h$<100/>^[[?5l
  from_status_line          fsl        = ^G
  insert_line               il1        = ^[[L
  key_backspace             kbs        = ^?
  key_dc                    kdch1      = ^[[3~
  key_down                  kcud1      = ^[OB
  key_f1                    kf1        = ^[OP
  key_f10                   kf10       = ^[[21~
  key_f2                    kf2        = ^[OQ
  key_f3                    kf3        = ^[OR
  key_f4                    kf4        = ^[OS
  key_f5                    kf5        = ^[[15~
  key_f6                    kf6        = ^[[17~
  key_f7                    kf7        = ^[[18~
  key_f8                    kf8        = ^[[19~
  key_f9                    kf9        = ^[[20~
  key_home                  khome      = ^[OH
  key_ic                    kich1      = ^[[2~
  key_left                  kcub1      = ^[OD
  key_npage                 knp        = ^[[6~
  key_ppage                 kpp        = ^[[5~
  key_right                 kcuf1      = ^[OC
  key_sf                    kind       = ^[[1;2B
  key_sr                    kri        = ^[[1;2A
  key_up                    kcuu1      = ^[OA
  keypad_local              rmkx       = ^[[?1l
  keypad_xmit               smkx       = ^[[?1h
  parm_dch                  dch        = ^[[%p1%dP
  parm_delete_line          dl         = ^[[%p1%dM
  parm_down_cursor          cud        = ^[[%p1%dB
  parm_ich                  ich        = ^[[%p1%d@
  parm_index                indn       = ^[[%p1%dS
  parm_insert_line          il         = ^[[%p1%dL
  parm_left_cursor          cub        = ^[[%p1%dD
  parm_right_cursor         cuf        = ^[[%p1%dC
  parm_rindex               rin        = ^[[%p1%dT
  parm_up_cursor            cuu        = ^[[%p1%dA
  repeat_char               rep        = %p1%c^[[%p2%{1}%-%db
  reset_1string             rs1        = ^[]^[\^[c
  restore_cursor            rc         = ^[8
  row_address               vpa        = ^[[%i%p1%dd
  save_cursor               sc         = ^[7
  scroll_forward            ind        = ^@
  scroll_reverse            ri         = ^[M
  set_attributes            sgr        = %?%p9%t^[(0%e^[(B%;^[[0%?%p6%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m
  set_tab                   hts        = ^[H
  tab                       ht         = 	
  to_status_line            tsl        = ^[]2;
  key_a1                    ka1        = 
  key_a3                    ka3        = 
  key_c1                    kc1        = 
  key_c3                    kc3        = 
  acs_chars                 acsc       = ++,,--..00``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~
  key_btab                  kcbt       = ^[[Z
  enter_am_mode             smam       = ^[[?7h
  exit_am_mode              rmam       = ^[[?7l
  key_beg                   kbeg       = ^[OE
  key_end                   kend       = ^[OF
  key_help                  khlp       = 
  key_undo                  kund       = 
  key_sbeg                  kBEG       = ^[[1;2E
  key_sdc                   kDC        = ^[[3;2~
  key_send                  kEND       = ^[[1;2F
  key_shome                 kHOM       = ^[[1;2H
  key_sic                   kIC        = ^[[2;2~
  key_sleft                 kLFT       = ^[[1;2D
  key_snext                 kNXT       = ^[[6;2~
  key_sprevious             kPRV       = ^[[5;2~
  key_sright                kRIT       = ^[[1;2C
  key_f11                   kf11       = ^[[23~
  key_f12                   kf12       = ^[[24~
  key_f13                   kf13       = ^[[1;2P
  key_f14                   kf14       = ^[[1;2Q
  key_f15                   kf15       = ^[[13;2~
  key_f16                   kf16       = ^[[1;2S
  key_f17                   kf17       = ^[[15;2~
  key_f18                   kf18       = ^[[17;2~
  key_f19                   kf19       = ^[[18;2~
  key_f20                   kf20       = ^[[19;2~
  key_f21                   kf21       = ^[[20;2~
  key_f22                   kf22       = ^[[21;2~
  key_f23                   kf23       = ^[[23;2~
  key_f24                   kf24       = ^[[24;2~
  key_f25                   kf25       = ^[[1;5P
  key_f26                   kf26       = ^[[1;5Q
  key_f27                   kf27       = ^[[13;5~
  key_f28                   kf28       = ^[[1;5S
  key_f29                   kf29       = ^[[15;5~
  key_f30                   kf30       = ^[[17;5~
  key_f31                   kf31       = ^[[18;5~
  key_f32                   kf32       = ^[[19;5~
  key_f33                   kf33       = ^[[20;5~
  key_f34                   kf34       = ^[[21;5~
  key_f35                   kf35       = ^[[23;5~
  key_f36                   kf36       = ^[[24;5~
  key_f37                   kf37       = ^[[1;6P
  key_f38                   kf38       = ^[[1;6Q
  key_f39                   kf39       = ^[[13;6~
  key_f40                   kf40       = ^[[1;6S
  key_f41                   kf41       = ^[[15;6~
  key_f42                   kf42       = ^[[17;6~
  key_f43                   kf43       = ^[[18;6~
  key_f44                   kf44       = ^[[19;6~
  key_f45                   kf45       = ^[[20;6~
  key_f46                   kf46       = ^[[21;6~
  key_f47                   kf47       = ^[[23;6~
  key_f48                   kf48       = ^[[24;6~
  key_f49                   kf49       = ^[[1;3P
  key_f50                   kf50       = ^[[1;3Q
  key_f51                   kf51       = ^[[13;3~
  key_f52                   kf52       = ^[[1;3S
  key_f53                   kf53       = ^[[15;3~
  key_f54                   kf54       = ^[[17;3~
  key_f55                   kf55       = ^[[18;3~
  key_f56                   kf56       = ^[[19;3~
  key_f57                   kf57       = ^[[20;3~
  key_f58                   kf58       = ^[[21;3~
  key_f59                   kf59       = ^[[23;3~
  key_f60                   kf60       = ^[[24;3~
  key_f61                   kf61       = ^[[1;4P
  key_f62                   kf62       = ^[[1;4Q
  key_f63                   kf63       = ^[[13;4~
  clr_bol                   el1        = ^[[1K
  user6                     u6         = ^[[%i%d;%dR
  user7                     u7         = ^[[6n
  user8                     u8         = ^[[?%[;0123456789]c
  user9                     u9         = ^[[c
  orig_pair                 op         = ^[[39;49m
  orig_colors               oc         = ^[]104^G
  initialize_color          initc      = ^[]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X^[\
  enter_italics_mode        sitm       = ^[[3m
  exit_italics_mode         ritm       = ^[[23m
  key_mouse                 kmous      = ^[[M
  set_a_foreground          setaf      = ^[[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m
  set_a_background          setab      = ^[[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m
  set_tb_margin             smgtb      = ^[[%i%p1%d;%p2%dr
Extended boolean capabilities:
  Su                        = true
  Tc                        = true
  XF                        = true
  fullkbd                   = true
Extended string capabilities:
  BD                        = ^[[?2004l
  BE                        = ^[[?2004h
  Cr                        = ^[]112^G
  Cs                        = ^[]12;%p1%s^G
  Ms                        = ^[]52;%p1%s;%p2%s^[\
  PE                        = ^[[201~
  PS                        = ^[[200~
  RV                        = ^[[>c
  Se                        = ^[[2 q
  Setulc                    = ^[[58:2:%p1%{65536}%/%d:%p1%{256}%/%{255}%&%d:%p1%{255}%&%d%;m
  Smulx                     = ^[[4:%p1%dm
  Ss                        = ^[[%p1%d q
  Sync                      = ^[P=%p1%ds^[\
  XR                        = ^[[>0q
  fd                        = ^[[?1004l
  fe                        = ^[[?1004h
  kBEG3                     = ^[[1;3E
  kBEG4                     = ^[[1;4E
  kBEG5                     = ^[[1;5E
  kBEG6                     = ^[[1;6E
  kBEG7                     = ^[[1;7E
  kDC3                      = ^[[3;3~
  kDC4                      = ^[[3;4~
  kDC5                      = ^[[3;5~
  kDC6                      = ^[[3;6~
  kDC7                      = ^[[3;7~
  kDN                       = ^[[1;2B
  kDN3                      = ^[[1;3B
  kDN4                      = ^[[1;4B
  kDN5                      = ^[[1;5B
  kDN6                      = ^[[1;6B
  kDN7                      = ^[[1;7B
  kEND3                     = ^[[1;3F
  kEND4                     = ^[[1;4F
  kEND5                     = ^[[1;5F
  kEND6                     = ^[[1;6F
  kEND7                     = ^[[1;7F
  kHOM3                     = ^[[1;3H
  kHOM4                     = ^[[1;4H
  kHOM5                     = ^[[1;5H
  kHOM6                     = ^[[1;6H
  kHOM7                     = ^[[1;7H
  kIC3                      = ^[[2;3~
  kIC4                      = ^[[2;4~
  kIC5                      = ^[[2;5~
  kIC6                      = ^[[2;6~
  kIC7                      = ^[[2;7~
  kLFT3                     = ^[[1;3D
  kLFT4                     = ^[[1;4D
  kLFT5                     = ^[[1;5D
  kLFT6                     = ^[[1;6D
  kLFT7                     = ^[[1;7D
  kNXT3                     = ^[[6;3~
  kNXT4                     = ^[[6;4~
  kNXT5                     = ^[[6;5~
  kNXT6                     = ^[[6;6~
  kNXT7                     = ^[[6;7~
  kPRV3                     = ^[[5;3~
  kPRV4                     = ^[[5;4~
  kPRV5                     = ^[[5;5~
  kPRV6                     = ^[[5;6~
  kPRV7                     = ^[[5;7~
  kRIT3                     = ^[[1;3C
  kRIT4                     = ^[[1;4C
  kRIT5                     = ^[[1;5C
  kRIT6                     = ^[[1;6C
  kRIT7                     = ^[[1;7C
  kUP                       = ^[[1;2A
  kUP3                      = ^[[1;3A
  kUP4                      = ^[[1;4A
  kUP5                      = ^[[1;5A
  kUP6                      = ^[[1;6A
  kUP7                      = ^[[1;7A
  kxIN                      = ^[[I
  kxOUT                     = ^[[O
  rmxx                      = ^[[29m
  setrgbb                   = ^[[48:2:%p1%d:%p2%d:%p3%dm
  setrgbf                   = ^[[38:2:%p1%d:%p2%d:%p3%dm
  smxx                      = ^[[9m
  ext.resize_screen         = ^[[8;%p1%d;%p2%dt
  ext.reset_scroll_region   = ^[[r
  ext.enter_altfont_mode    = ^[[11m
  ext.save_title            = ^[[22;0t
  ext.restore_title         = ^[[23;0t
  ext.enable_lr_margin      = ^[[?69h
  ext.disable_lr_margin     = ^[[?69l
  ext.enable_bpaste         = ^[[?2004h
  ext.disable_bpaste        = ^[[?2004l
  ext.enable_focus          = ^[[?1004h
  ext.disable_focus         = ^[[?1004l
  ext.enable_mouse          = ^[[?1002h^[[?1006h
  ext.disable_mouse         = ^[[?1002l^[[?1006l
  ext.enable_mouse_move     = ^[[?1003h
  ext.disable_mouse_move    = ^[[?1003l
  ext.set_underline_color   = ^[[58:2::%p1%d:%p2%d:%p3%dm
}}}

Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing LspAttach Autocommands for "*"
autocommand <Lua 49: ~/.local/share/nvim/lazy/lazy.nvim/lua/lazy/core/handler/event.lua:72>

Executing: 
Executing LspAttach Autocommands for "*"
autocommand <Lua 147: ~/.config/nvim/lua/lsp/configs.lua:62>

Executing: IlluminationDisable!
Exception thrown: Vim:E492: Not an editor command: IlluminationDisable!

Exception discarded: Vim:E492: Not an editor command: IlluminationDisable!

Executing: augroup vim_illuminate_lsp1
Executing: autocmd!
Executing: autocmd CursorMoved,CursorMovedI <buffer=1> lua require"illuminate".on_cursor_moved(1)
Executing: augroup END
Executing: 
Executing LspAttach Autocommands for "*"
autocommand <Lua 257: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing LspAttach Autocommands for "*"
autocommand <Lua 501: ~/.local/share/nvim/lazy/noice.nvim/lua/noice/lsp/signature.lua:56>

Executing: 
Executing LspNotify Autocommands for "*"
autocommand <Lua 208: /opt/neovim/out/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:263>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: unlet! b:keymap_name
Executing: unlet! b:keymap_name
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 411: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 418: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 423: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 418: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 423: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 418: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 418: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 418: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 418: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
/module_name             
/module_name        [1/1]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: unlet! b:keymap_name
Executing: unlet! b:keymap_name
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 425: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing: IBLEnableScope
/module_name             
/module_name        [1/1]
/module_name             
/module_name        [1/1]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 413: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
/\<module_ident\>             
/\<module_ident\>        [2/2]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 247: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 411: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: vsp queries/highlights.scm
Executing WinLeave Autocommands for "*"
autocommand <Lua 236: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinLeave Autocommands for "*"
autocommand <Lua 401: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinNew Autocommands for "*"
autocommand lua require("todo-comments.highlight").attach()

Executing: lua require("todo-comments.highlight").attach()
Executing WinEnter Autocommands for "*"
autocommand <Lua 229: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing WinEnter Autocommands for "*"
autocommand <Lua 319: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
autocommand <Lua 323: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:26>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing WinEnter Autocommands for "*"
autocommand <Lua 394: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand <Lua 235: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in BufLeave Autocommands for "*"

Executing BufLeave Autocommands for "*"
autocommand lua require('goto-preview').buffer_left()

Executing: lua require('goto-preview').buffer_left()
Executing BufLeave Autocommands for "*"
autocommand <Lua 400: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Reading ShaDa file "/Users/embe221ed/.local/state/nvim/shada/main.shada" marks
Executing BufReadPost Autocommands for "*"
autocommand <Lua 55: /opt/neovim/out/share/nvim/runtime/filetype.lua:10>

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling <SNR>2_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 20: runtime! ftplugin/query[.]{vim,lua} ftplugin/query_*.{vim,lua} ftplugin/query/*.{vim,lua}
Searching for "ftplugin/query[.]{vim,lua} ftplugin/query_*.{vim,lua} ftplugin/query/*.{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/query/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/query[.]{vim,lua}"
line 20: sourcing "/opt/neovim/out/share/nvim/runtime/ftplugin/query.lua"
Searching for "parser/query.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/query.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/query.*"
Searching for "queries/query/injections.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/injections.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/injections.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/injections.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/injections.scm"
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling <SNR>109_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   0verbose let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 26:         exe $'runtime! syntax/{name}[.]{{vim,lua}} syntax/{name}/*.{{vim,lua}}'
line 27:       endif
line 28:     endfor
line 29:   endif
<SNR>109_SynSet returning #0

continuing in Syntax Autocommands for "*"

Executing: runtime! ftplugin/lisp.vim
Searching for "ftplugin/lisp.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/lisp.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/lisp.vim"
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/ftplugin/lisp.vim"
line 1: " Vim filetype plugin
line 2: " Language:      Lisp
line 3: " Maintainer:    Sergey Khorev <sergey.khorev@gmail.com>
line 4: " URL:^I^I http://sites.google.com/site/khorser/opensource/vim
line 5: " Original author:    Dorai Sitaram <ds26@gte.com>
line 6: " Original URL:^I^I http://www.ccs.neu.edu/~dorai/vimplugins/vimplugins.html
line 7: " Last Change:   Mar 10, 2021
line 8: "                May 23, 2024 by Riley Bruins <ribru17@gmail.com> ('commentstring')
line 9: 
line 10: " Only do this when not done yet for this buffer
line 11: if exists("b:did_ftplugin")
line 12:   finish
line 13: endif
line 14: 
line 15: " Don't load another plugin for this buffer
line 16: let b:did_ftplugin = 1
line 17: 
line 18: setl comments=:;;;;,:;;;,:;;,:;,sr:#\|,mb:\|,ex:\|#
line 19: setl define=^\\s*(def\\k*
line 20: setl formatoptions-=t
line 21: setl iskeyword+=+,-,*,/,%,<,=,>,:,$,?,!,@-@,94
line 22: setl lisp
line 23: setl commentstring=;\ %s
line 24: 
line 25: let b:undo_ftplugin = "setlocal comments< define< formatoptions< iskeyword< lisp< commentstring<"
finished sourcing /opt/neovim/out/share/nvim/runtime/ftplugin/lisp.vim
continuing in nvim_exec2() called at /opt/neovim/out/share/nvim/runtime/ftplugin/query.lua:0
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/lisp.vim"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/lisp.vim"
finished sourcing /opt/neovim/out/share/nvim/runtime/ftplugin/query.lua
continuing in <SNR>2_LoadFTPlugin
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/query_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/query/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/query[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/query_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/query/*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/query[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/query_*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/query[.]{vim,lua}"
line 20: sourcing "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/query.vim"
line 1: setlocal omnifunc=v:lua.require'nvim_treesitter_playground_query_omnifunc'.omnifunc
finished sourcing /Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/query.vim
continuing in <SNR>2_LoadFTPlugin
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/query/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/query_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/query/*.{vim,lua}"
line 21:       endfor
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 21:       endfor
line 22:     endif
<SNR>2_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling <SNR>3_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 15: runtime! indent/query[.]{vim,lua}
Searching for "indent/query[.]{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/indent/query[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/indent/query[.]{vim,lua}"
line 15: sourcing "/opt/neovim/out/share/nvim/runtime/indent/query.lua"
Executing: runtime! indent/lisp.vim
Searching for "indent/lisp.vim" in runtime path
Searching for "/Users/embe221ed/.config/nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/site/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/indent/lisp.vim"
Searching for "/opt/neovim/out/share/nvim/runtime/indent/lisp.vim"
line 0: sourcing "/opt/neovim/out/share/nvim/runtime/indent/lisp.vim"
line 1: " Vim indent file
line 2: " Language:^ILisp
line 3: " Maintainer:^ISergey Khorev <sergey.khorev@gmail.com>
line 4: " URL:^I^Ihttp://sites.google.com/site/khorser/opensource/vim
line 5: " Last Change:^I2012 Jan 10
line 6: 
line 7: " Only load this indent file when no other was loaded.
line 8: if exists("b:did_indent")
line 9:    finish
line 10: endif
line 11: let b:did_indent = 1
line 12: 
line 13: setlocal ai nosi
line 14: 
line 15: let b:undo_indent = "setl ai< si<"
finished sourcing /opt/neovim/out/share/nvim/runtime/indent/lisp.vim
continuing in nvim_exec2() called at /opt/neovim/out/share/nvim/runtime/indent/query.lua:0
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/indent/lisp.vim"
Searching for "/opt/neovim/out/lib/nvim/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/indent/lisp.vim"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/indent/lisp.vim"
finished sourcing /opt/neovim/out/share/nvim/runtime/indent/query.lua
continuing in <SNR>3_LoadIndent
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/indent/query[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/indent/query[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/indent/query[.]{vim,lua}"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 16:       endfor
line 17:     endif
<SNR>3_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "query"
autocommand <Lua 51: ~/.local/share/nvim/lazy/nvim-treesitter/plugin/nvim-treesitter.lua:19>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 60: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Searching for "queries/query/locals.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/locals.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/locals.scm"
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 131: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:59>

Searching for "queries/query/rainbow-delimiters.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/rainbow-delimiters.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/rainbow-delimiters.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/rainbow-delimiters.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/rainbow-delimiters.scm"
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 179: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:20>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 93: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:86>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 347: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:77>

Executing: 
Executing FileType Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing FileType Autocommands for "*"
autocommand <Lua 390: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/install.lua:561>

Searching for "parser/query.so" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/query.so"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/query.so"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/query.so"
Searching for "/opt/neovim/out/lib/nvim/parser/query.so"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/query.so"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/query.so"
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 391: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Searching for "queries/query/highlights.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/highlights.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/highlights.scm"
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

Executing: call s:SynSet()
calling <SNR>109_SynSet()

line 1:   " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
line 2:   syn clear
line 3:   if exists("b:current_syntax")
line 4:     unlet b:current_syntax
line 5:   endif
line 6: 
line 7:   0verbose let s = expand("<amatch>")
line 8:   if s == "ON"
line 9:     " :set syntax=ON
line 10:     if &filetype == ""
line 11:       echohl ErrorMsg
line 12:       echo "filetype unknown"
line 13:       echohl None
line 14:     endif
line 15:     let s = &filetype
line 16:   elseif s == "OFF"
line 17:     let s = ""
line 18:   endif
line 19: 
line 20:   if s != ""
line 21:     " Load the syntax file(s).  When there are several, separated by dots,
line 22:     " load each in sequence.  Skip empty entries.
line 23:     for name in split(s, '\.')
line 24:       if !empty(name)
line 25:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 26:         exe $'runtime! syntax/{name}[.]{{vim,lua}} syntax/{name}/*.{{vim,lua}}'
line 27:       endif
line 28:     endfor
line 29:   endif
<SNR>109_SynSet returning #0

continuing in Syntax Autocommands for "*"

Executing: 
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing FileType Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing: 
autocommand if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing: if !did_filetype() && expand('<amatch>') !~ g:ft_ignore_pat | runtime! scripts.vim | endif
Executing:  runtime! scripts.vim | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif

Executing: if exists('b:git_dir') && b:git_dir =~# '^$\|' . s:bad_git_dir |   unlet b:git_dir | endif
Executing:    unlet b:git_dir | endif
Executing:  endif
Executing BufReadPost Autocommands for "*"
autocommand <Lua 231: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:130>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 250: /opt/neovim/out/share/nvim/runtime/plugin/editorconfig.lua:4>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 261: ~/.local/share/nvim/lazy/guess-indent.nvim/lua/guess-indent/init.lua:35>

File type: query
Buffer type: 
Guess Indent
Lines using tabs: 0
Lines using spaces: 32
2 space: 29
4 space: 3
Lines loaded: 172
Lines iterated: 172
Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 246: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:210>

Executing: 
Executing BufReadPost Autocommands for "*"
autocommand <Lua 396: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:130>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif

Executing: if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
Executing:     setlocal nolist linebreak filetype=markdown | endif
Executing:  endif
Executing BufEnter Autocommands for "*"
autocommand <Lua 228: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require('goto-preview').buffer_entered()

Executing: lua require('goto-preview').buffer_entered()
Executing BufEnter Autocommands for "*"
autocommand <Lua 287: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:104>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif

Executing: if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif
Executing:  quit | endif
Executing:  endif
autocommand <Lua 320: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 344: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <Lua 387: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:141>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 393: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "<buffer=12>"
autocommand <Lua 590: /opt/neovim/out/share/nvim/runtime/ftplugin/query.lua:27>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 91: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:86>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand autocmd SafeState * ++once call s:Highlight_Matching_Pair()

Executing: autocmd SafeState * ++once call s:Highlight_Matching_Pair()
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 321: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 345: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufWinEnter Autocommands for "*"
autocommand lua require("todo-comments.highlight").attach()

Executing: lua require("todo-comments.highlight").attach()
Executing BufWinEnter Autocommands for "*"
autocommand <Lua 574: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing: unlet! b:keymap_name
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 411: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing SafeState Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in SafeState Autocommands for "*"

Searching for "parser/comment.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/comment.*"
Searching for "/opt/neovim/out/lib/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/comment.*"
not found in runtime path: "parser/comment.*"
Searching for "parser/regex.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/regex.*"
Searching for "/opt/neovim/out/lib/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/regex.*"
not found in runtime path: "parser/regex.*"
Searching for "queries/query/highlights.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/highlights.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/highlights.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/highlights.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/highlights.scm"
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: command! Notifications :lua require("notify")._print_history()<CR>
Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling <SNR>2_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 20: runtime! ftplugin/notify[.]{vim,lua} ftplugin/notify_*.{vim,lua} ftplugin/notify/*.{vim,lua}
Searching for "ftplugin/notify[.]{vim,lua} ftplugin/notify_*.{vim,lua} ftplugin/notify/*.{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/notify/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/notify_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/notify/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/notify_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/notify/*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/notify/*.{vim,lua}"
not found in runtime path: "ftplugin/notify[.]{vim,lua} ftplugin/notify_*.{vim,lua} ftplugin/notify/*.{vim,lua}"
line 21:       endfor
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 21:       endfor
line 22:     endif
<SNR>2_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling <SNR>3_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 15: runtime! indent/notify[.]{vim,lua}
Searching for "indent/notify[.]{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/indent/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/indent/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/indent/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/indent/notify[.]{vim,lua}"
not found in runtime path: "indent/notify[.]{vim,lua}"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 16:       endfor
line 17:     endif
<SNR>3_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand <Lua 60: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Searching for "parser/notify.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/notify.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/notify.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/notify.*"
Searching for "/opt/neovim/out/lib/nvim/parser/notify.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/notify.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/notify.*"
not found in runtime path: "parser/notify.*"
Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 131: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:59>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 179: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:20>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 93: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:86>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 347: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:77>

Executing: 
Executing FileType Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing FileType Autocommands for "*"
autocommand <Lua 390: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/install.lua:561>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 391: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Executing: 
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing FileType Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#303447
Executing: hi NotifyINFOIcon13 guifg=#303447
Executing: hi NotifyINFOBorder13 guifg=#303447
Executing: hi NotifyINFOBody13 guifg=#303447 guibg=#303447
Executing: unlet! b:keymap_name
Executing: hi NotifyINFOTitle13 guifg=#323848
Executing: hi NotifyINFOIcon13 guifg=#323848
Executing: hi NotifyINFOBorder13 guifg=#313547
Executing: hi NotifyINFOBody13 guifg=#33374a guibg=#303447
Executing: redraw
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#384249
Executing: hi NotifyINFOIcon13 guifg=#384249
Executing: hi NotifyINFOBorder13 guifg=#323748
Executing: hi NotifyINFOBody13 guifg=#3a3e53 guibg=#303447
Searching for "queries/query/locals.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/locals.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/locals.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/locals.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/locals.scm"
Executing: hi NotifyINFOTitle13 guifg=#404f4b
Executing: hi NotifyINFOIcon13 guifg=#404f4b
Executing: hi NotifyINFOBorder13 guifg=#343b48
Executing: hi NotifyINFOBody13 guifg=#44485e guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#495e4e
Executing: hi NotifyINFOIcon13 guifg=#495e4e
Executing: hi NotifyINFOBorder13 guifg=#363e49
Executing: hi NotifyINFOBody13 guifg=#4f546b guibg=#303447
Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: hi NotifyINFOTitle13 guifg=#526d50
Executing: hi NotifyINFOIcon13 guifg=#526d50
Executing: hi NotifyINFOBorder13 guifg=#39424a
Executing: hi NotifyINFOBody13 guifg=#5a6078 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#5b7d53
Executing: hi NotifyINFOIcon13 guifg=#5b7d53
Executing: hi NotifyINFOBorder13 guifg=#3b464b
Executing: hi NotifyINFOBody13 guifg=#666c86 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#648b55
Executing: hi NotifyINFOIcon13 guifg=#648b55
Executing: hi NotifyINFOBorder13 guifg=#3d4a4c
Executing: hi NotifyINFOBody13 guifg=#717792 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#6c9957
Executing: hi NotifyINFOIcon13 guifg=#6c9957
Executing: hi NotifyINFOBorder13 guifg=#3f4d4c
Executing: hi NotifyINFOBody13 guifg=#7b829e guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#74a65a
Executing: hi NotifyINFOIcon13 guifg=#74a65a
Executing: hi NotifyINFOBorder13 guifg=#41514d
Executing: hi NotifyINFOBody13 guifg=#848ca9 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#7bb25b
Executing: hi NotifyINFOIcon13 guifg=#7bb25b
Executing: hi NotifyINFOBorder13 guifg=#43544e
Executing: hi NotifyINFOBody13 guifg=#8d95b3 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#81bc5d
Executing: hi NotifyINFOIcon13 guifg=#81bc5d
Executing: hi NotifyINFOBorder13 guifg=#45564e
Executing: hi NotifyINFOBody13 guifg=#959dbc guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#87c55f
Executing: hi NotifyINFOIcon13 guifg=#87c55f
Executing: hi NotifyINFOBorder13 guifg=#46584f
Executing: hi NotifyINFOBody13 guifg=#9ba4c4 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#8bcd60
Executing: hi NotifyINFOIcon13 guifg=#8bcd60
Executing: hi NotifyINFOBorder13 guifg=#475b4f
Executing: hi NotifyINFOBody13 guifg=#a1aacb guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#90d461
Executing: hi NotifyINFOIcon13 guifg=#90d461
Executing: hi NotifyINFOBorder13 guifg=#495c50
Executing: hi NotifyINFOBody13 guifg=#a7afd1 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#93db62
Executing: hi NotifyINFOIcon13 guifg=#93db62
Executing: hi NotifyINFOBorder13 guifg=#495e50
Executing: hi NotifyINFOBody13 guifg=#abb4d7 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#97e063
Executing: hi NotifyINFOIcon13 guifg=#97e063
Executing: hi NotifyINFOBorder13 guifg=#4a5f50
Executing: hi NotifyINFOBody13 guifg=#afb8db guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#99e564
Executing: hi NotifyINFOIcon13 guifg=#99e564
Executing: hi NotifyINFOBorder13 guifg=#4b6051
Executing: hi NotifyINFOBody13 guifg=#b3bcdf guibg=#303447
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#9ce964
Executing: hi NotifyINFOIcon13 guifg=#9ce964
Executing: hi NotifyINFOBorder13 guifg=#4c6151
Executing: hi NotifyINFOBody13 guifg=#b6bfe3 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#9eec65
Executing: hi NotifyINFOIcon13 guifg=#9eec65
Executing: hi NotifyINFOBorder13 guifg=#4c6251
Executing: hi NotifyINFOBody13 guifg=#b8c1e6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#9fef65
Executing: hi NotifyINFOIcon13 guifg=#9fef65
Executing: hi NotifyINFOBorder13 guifg=#4d6351
Executing: hi NotifyINFOBody13 guifg=#bac4e8 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a1f266
Executing: hi NotifyINFOIcon13 guifg=#a1f266
Executing: hi NotifyINFOBorder13 guifg=#4d6451
Executing: hi NotifyINFOBody13 guifg=#bcc6ea guibg=#303447
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a2f466
Executing: hi NotifyINFOIcon13 guifg=#a2f466
Executing: hi NotifyINFOBorder13 guifg=#4d6451
Executing: hi NotifyINFOBody13 guifg=#bec7ec guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a3f566
Executing: hi NotifyINFOIcon13 guifg=#a3f566
Executing: hi NotifyINFOBorder13 guifg=#4e6551
Executing: hi NotifyINFOBody13 guifg=#bfc9ee guibg=#303447
Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: hi NotifyINFOTitle13 guifg=#a4f767
Executing: hi NotifyINFOIcon13 guifg=#a4f767
Executing: hi NotifyINFOBorder13 guifg=#4e6552
Executing: hi NotifyINFOBody13 guifg=#c0caef guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a5f867
Executing: hi NotifyINFOIcon13 guifg=#a5f867
Executing: hi NotifyINFOBorder13 guifg=#4e6552
Executing: hi NotifyINFOBody13 guifg=#c1cbf0 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a6f967
Executing: hi NotifyINFOIcon13 guifg=#a6f967
Executing: hi NotifyINFOBorder13 guifg=#4e6652
Executing: hi NotifyINFOBody13 guifg=#c2ccf1 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a6fa67
Executing: hi NotifyINFOIcon13 guifg=#a6fa67
Executing: hi NotifyINFOBorder13 guifg=#4e6652
Executing: hi NotifyINFOBody13 guifg=#c3ccf2 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a7fb67
Executing: hi NotifyINFOIcon13 guifg=#a7fb67
Executing: hi NotifyINFOBorder13 guifg=#4e6652
Executing: hi NotifyINFOBody13 guifg=#c3cdf3 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a7fc67
Executing: hi NotifyINFOIcon13 guifg=#a7fc67
Executing: hi NotifyINFOBorder13 guifg=#4e6652
Executing: hi NotifyINFOBody13 guifg=#c4cdf3 guibg=#303447
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: noh
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9fe68
Executing: hi NotifyINFOIcon13 guifg=#a9fe68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f5 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9fe68
Executing: hi NotifyINFOIcon13 guifg=#a9fe68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing BufLeave Autocommands for "*"
autocommand <Lua 235: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in BufLeave Autocommands for "*"

Executing BufLeave Autocommands for "*"
autocommand lua require('goto-preview').buffer_left()

Executing: lua require('goto-preview').buffer_left()
Executing BufLeave Autocommands for "*"
autocommand <Lua 400: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand <Lua 236: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinLeave Autocommands for "*"
autocommand <Lua 401: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand <Lua 229: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing WinEnter Autocommands for "*"
autocommand <Lua 319: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
autocommand <Lua 323: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:26>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing WinEnter Autocommands for "*"
autocommand <Lua 394: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif

Executing: if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
Executing:     setlocal nolist linebreak filetype=markdown | endif
Executing:  endif
Executing BufEnter Autocommands for "*"
autocommand <Lua 228: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require('goto-preview').buffer_entered()

Executing: lua require('goto-preview').buffer_entered()
Executing BufEnter Autocommands for "*"
autocommand <Lua 287: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:104>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif

Executing: if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif
Executing:  quit | endif
Executing:  endif
autocommand <Lua 320: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 344: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <Lua 387: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:141>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 393: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "<buffer=1>"
autocommand <Lua 498: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 416: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
/path             
/path        [1/5]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: unlet! b:keymap_name
Executing: unlet! b:keymap_name
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 574: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 414: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
/module             
/module       [1/37]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 414: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a9ff68
Executing: hi NotifyINFOIcon13 guifg=#a9ff68
Executing: hi NotifyINFOBorder13 guifg=#4f6752
Executing: hi NotifyINFOBody13 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#a1f166
Executing: hi NotifyINFOIcon13 guifg=#a1f166
Executing: hi NotifyINFOBorder13 guifg=#4d6451
Executing: hi NotifyINFOBody13 guifg=#bcc6ea guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#90d561
Executing: hi NotifyINFOIcon13 guifg=#90d561
Executing: hi NotifyINFOBorder13 guifg=#495d50
Executing: hi NotifyINFOBody13 guifg=#a7b0d2 guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#7eb65c
Executing: hi NotifyINFOIcon13 guifg=#7eb65c
Executing: hi NotifyINFOBorder13 guifg=#44554e
Executing: hi NotifyINFOBody13 guifg=#9098b7 guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#6d9a58
Executing: hi NotifyINFOIcon13 guifg=#6d9a58
Executing: hi NotifyINFOBorder13 guifg=#404e4d
Executing: hi NotifyINFOBody13 guifg=#7b829f guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#5e8154
Executing: hi NotifyINFOIcon13 guifg=#5e8154
Executing: hi NotifyINFOBorder13 guifg=#3c474b
Executing: hi NotifyINFOBody13 guifg=#696f8a guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#526e50
Executing: hi NotifyINFOIcon13 guifg=#526e50
Executing: hi NotifyINFOBorder13 guifg=#39434a
Executing: hi NotifyINFOBody13 guifg=#5b6079 guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: hi NotifyINFOTitle13 guifg=#495f4e
Executing: hi NotifyINFOIcon13 guifg=#495f4e
Executing: hi NotifyINFOBorder13 guifg=#363f49
Executing: hi NotifyINFOBody13 guifg=#4f556c guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
/module             
/module       [2/37]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 414: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#42534c
Executing: hi NotifyINFOIcon13 guifg=#42534c
Executing: hi NotifyINFOBorder13 guifg=#353c49
Executing: hi NotifyINFOBody13 guifg=#474c62 guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#3d4a4b
Executing: hi NotifyINFOIcon13 guifg=#3d4a4b
Executing: hi NotifyINFOBorder13 guifg=#333a48
Executing: hi NotifyINFOBody13 guifg=#40455a guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#3a444a
Executing: hi NotifyINFOIcon13 guifg=#3a444a
Executing: hi NotifyINFOBorder13 guifg=#323848
Executing: hi NotifyINFOBody13 guifg=#3c4055 guibg=#303447
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOTitle13 guifg=#373f49
Executing: hi NotifyINFOIcon13 guifg=#373f49
Executing: hi NotifyINFOBorder13 guifg=#323748
Executing: hi NotifyINFOBody13 guifg=#383d51 guibg=#303447
Executing: hi NotifyINFOTitle13 guifg=#353c48
Executing: hi NotifyINFOIcon13 guifg=#353c48
Executing: hi NotifyINFOBorder13 guifg=#313647
Executing: hi NotifyINFOBody13 guifg=#363a4e guibg=#303447
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
/module             
/module       [3/37]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: unlet! b:keymap_name
Executing: unlet! b:keymap_name
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 570: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 570: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
/module             
/module       [4/37]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 642: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
/module             
/module       [5/37]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
/module             
/module       [6/37]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 609: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
/module:             
/module:        [1/2]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
/module:             
/module:        [2/2]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 572: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: noh
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand <Lua 235: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in BufLeave Autocommands for "*"

Executing BufLeave Autocommands for "*"
autocommand lua require('goto-preview').buffer_left()

Executing: lua require('goto-preview').buffer_left()
Executing BufLeave Autocommands for "*"
autocommand <Lua 400: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand <Lua 236: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinLeave Autocommands for "*"
autocommand <Lua 401: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand <Lua 229: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: 
Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing WinEnter Autocommands for "*"
autocommand <Lua 319: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
autocommand <Lua 323: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:26>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing WinEnter Autocommands for "*"
autocommand <Lua 394: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif

Executing: if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
Executing:     setlocal nolist linebreak filetype=markdown | endif
Executing:  endif
Executing BufEnter Autocommands for "*"
autocommand <Lua 228: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require('goto-preview').buffer_entered()

Executing: lua require('goto-preview').buffer_entered()
Executing BufEnter Autocommands for "*"
autocommand <Lua 287: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:104>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif

Executing: if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif
Executing:  quit | endif
Executing:  endif
autocommand <Lua 320: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 344: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <Lua 387: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:141>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 393: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "<buffer=12>"
autocommand <Lua 590: /opt/neovim/out/share/nvim/runtime/ftplugin/query.lua:27>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
line 33:     endif
line 34:   endif
line 35: 
line 36:   " Figure out the arguments for searchpairpos().
line 37:   if i % 2 == 0
line 38:     let s_flags = 'nW'
line 39:     let c2 = plist[i + 1]
line 40:   else
line 41:     let s_flags = 'nbW'
line 42:     let c2 = c
line 43:     let c = plist[i - 1]
line 44:   endif
line 45:   if c == '['
line 46:     let c = '\['
line 47:     let c2 = '\]'
line 48:   endif
line 49: 
line 50:   " Find the match.  When it was just before the cursor move it there for a
line 51:   " moment.
line 52:   if before > 0
line 53:     let has_getcurpos = exists("*getcurpos")
line 54:     if has_getcurpos
line 55:       " getcurpos() is more efficient but doesn't exist before 7.4.313.
line 56:       let save_cursor = getcurpos()
line 57:     else
line 58:       let save_cursor = winsaveview()
line 59:     endif
line 60:     call cursor(c_lnum, c_col - before)
line 61:   endif
line 62: 
line 63:   if !has("syntax") || !exists("g:syntax_on")
line 64:     let s_skip = "0"
line 65:   else
line 66:     " Build an expression that detects whether the current cursor position is
line 67:     " in certain syntax types (string, comment, etc.), for use as
line 68:     " searchpairpos()'s skip argument.
line 69:     " We match "escape" for special items, such as lispEscapeSpecial, and
line 70:     " match "symbol" for lispBarSymbol.
line 71:     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
line 74:     " If executing the expression determines that the cursor is currently in
line 75:     " one of the syntax types, then we want searchpairpos() to find the pair
line 76:     " within those syntax types (i.e., not skip).  Otherwise, the cursor is
line 77:     " outside of the syntax types and s_skip should keep its value so we skip
line 78:     " any matching pair inside the syntax types.
line 79:     " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
line 80:     try
line 81:       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
line 81: if synstack(".", col("."))->indexof({_, id -> synIDattr(id, "name") =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0 | let s_skip = "0" | endif
line 81:  let s_skip = "0" | endif
line 81:  endif
line 82:     catch /^Vim\%((\a\+)\)\=:E363/
line 83:       " We won't find anything, so skip searching, should keep Vim responsive.
line 84:       return
line 85:     endtry
line 86:   endif
line 87: 
line 88:   " Limit the search to lines visible in the window.
line 89:   let stoplinebottom = line('w$')
line 90:   let stoplinetop = line('w0')
line 91:   if i % 2 == 0
line 92:     let stopline = stoplinebottom
line 93:   else
line 94:     let stopline = stoplinetop
line 95:   endif
line 96: 
line 97:   " Limit the search time to 300 msec to avoid a hang on very long lines.
line 98:   " This fails when a timeout is not supported.
line 99:   if mode() == 'i' || mode() == 'R'
line 100:     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
line 101:   else
line 102:     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
line 103:   endif
line 104:   try
line 105:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
line 106:   catch /E118/
line 107:     " Can't use the timeout, restrict the stopline a bit more to avoid taking
line 108:     " a long time on closed folds and long lines.
line 109:     " The "viewable" variables give a range in which we can scroll while
line 110:     " keeping the cursor at the same position.
line 111:     " adjustedScrolloff accounts for very large numbers of scrolloff.
line 112:     let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
line 113:     let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
line 114:     let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
line 115:     " one of these stoplines will be adjusted below, but the current values are
line 116:     " minimal boundaries within the current window
line 117:     if i % 2 == 0
line 118:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 119: ^Ilet stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
line 120: ^Ilet stopline = min([bottom_viewable, byte2line(stopbyte)])
line 121:       else
line 122: ^Ilet stopline = min([bottom_viewable, c_lnum + 100])
line 123:       endif
line 124:       let stoplinebottom = stopline
line 125:     else
line 126:       if has("byte_offset") && has("syntax_items") && &smc > 0
line 127: ^Ilet stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
line 128: ^Ilet stopline = max([top_viewable, byte2line(stopbyte)])
line 129:       else
line 130: ^Ilet stopline = max([top_viewable, c_lnum - 100])
line 131:       endif
line 132:       let stoplinetop = stopline
line 133:     endif
line 134:     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
line 135:   endtry
line 136: 
line 137:   if before > 0
line 138:     if has_getcurpos
line 139:       call setpos('.', save_cursor)
line 140:     else
line 141:       call winrestview(save_cursor)
line 142:     endif
line 143:   endif
line 144: 
line 145:   " If a match is found setup match highlighting.
line 146:   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
line 147:     if s:has_matchaddpos
line 148:       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
line 149:     else
line 150:       exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
line 152:       call add(w:matchparen_ids, 3)
line 153:     endif
line 154:     let w:paren_hl_on = 1
line 155:   endif
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 419: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand <Lua 235: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in BufLeave Autocommands for "*"

Executing BufLeave Autocommands for "*"
autocommand lua require('goto-preview').buffer_left()

Executing: lua require('goto-preview').buffer_left()
Executing BufLeave Autocommands for "*"
autocommand <Lua 400: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand <Lua 236: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinLeave Autocommands for "*"
autocommand <Lua 401: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand <Lua 229: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: unlet! b:keymap_name
Executing: unlet! b:keymap_name
Executing: IBLEnableScope
Executing: 
Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing WinEnter Autocommands for "*"
autocommand <Lua 319: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
autocommand <Lua 323: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:26>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing WinEnter Autocommands for "*"
autocommand <Lua 394: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif

Executing: if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
Executing:     setlocal nolist linebreak filetype=markdown | endif
Executing:  endif
Executing BufEnter Autocommands for "*"
autocommand <Lua 228: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require('goto-preview').buffer_entered()

Executing: lua require('goto-preview').buffer_entered()
Executing BufEnter Autocommands for "*"
autocommand <Lua 287: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:104>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif

Executing: if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif
Executing:  quit | endif
Executing:  endif
autocommand <Lua 320: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 344: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <Lua 387: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:141>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 393: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "<buffer=1>"
autocommand <Lua 498: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 413: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 418: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 415: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 413: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing BufLeave Autocommands for "*"
autocommand <Lua 235: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in BufLeave Autocommands for "*"

Executing BufLeave Autocommands for "*"
autocommand lua require('goto-preview').buffer_left()

Executing: lua require('goto-preview').buffer_left()
Executing BufLeave Autocommands for "*"
autocommand <Lua 400: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand <Lua 236: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinLeave Autocommands for "*"
autocommand <Lua 401: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand <Lua 229: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: 
Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing WinEnter Autocommands for "*"
autocommand <Lua 319: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
autocommand <Lua 323: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:26>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing WinEnter Autocommands for "*"
autocommand <Lua 394: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif

Executing: if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
Executing:     setlocal nolist linebreak filetype=markdown | endif
Executing:  endif
Executing BufEnter Autocommands for "*"
autocommand <Lua 228: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require('goto-preview').buffer_entered()

Executing: lua require('goto-preview').buffer_entered()
Executing BufEnter Autocommands for "*"
autocommand <Lua 287: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:104>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif

Executing: if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif
Executing:  quit | endif
Executing:  endif
autocommand <Lua 320: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 344: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <Lua 387: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:141>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 393: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "<buffer=12>"
autocommand <Lua 590: /opt/neovim/out/share/nvim/runtime/ftplugin/query.lua:27>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
calling provider#clipboard#Call('set', [['m'], 'v', '+'])

line 1:   if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
line 2:     return 0
line 3:   endif
line 4:   let s:here = v:true
line 5:   try
line 6:     return call(s:clipboard[a:method],a:args,s:clipboard)
calling 3(['m'], 'v', '+')

line 1:   if a:reg == '"'
line 2:     call s:clipboard.set(a:lines,a:regtype,'+')
line 3:     if s:copy['*'] != s:copy['+']
line 4:       call s:clipboard.set(a:lines,a:regtype,'*')
line 5:     end
line 6:     return 0
line 7:   end
line 8: 
line 9:   if type(s:copy[a:reg]) == v:t_func
line 10:     call s:copy[a:reg](a:lines, a:regtype)
line 11:     return 0
line 12:   end
line 13: 
line 14:   if s:cache_enabled == 0
line 15:     call s:try_cmd(s:copy[a:reg], a:lines)
calling <SNR>123_try_cmd(['pbcopy'], ['m'])

line 1:   let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
Executing command: "'/usr/bin/pbcopy'"


line 2:   if v:shell_error
line 3:     if !exists('s:did_error_try_cmd')
line 4:       echohl WarningMsg
line 5:       echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
line 6:       echohl None
line 7:       let s:did_error_try_cmd = 1
line 8:     endif
line 9:     return 0
line 10:   endif
line 11:   return out
<SNR>123_try_cmd returning []

continuing in 3

line 16:     "Cache it anyway we can compare it later to get regtype of the yank
line 17:     let s:selections[a:reg] = copy(s:selection)
line 18:     let s:selections[a:reg].data = [a:lines, a:regtype]
line 19:     return 0
3 returning #0

continuing in provider#clipboard#Call

:return 0 made pending

line 7:   finally
line 8:     let s:here = v:false
line 9:   endtry
:return 0 resumed

provider#clipboard#Call returning #0

Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand <Lua 72: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Searching for "parser/comment.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/comment.*"
Searching for "/opt/neovim/out/lib/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/comment.*"
not found in runtime path: "parser/comment.*"
Searching for "parser/regex.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/regex.*"
Searching for "/opt/neovim/out/lib/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/regex.*"
not found in runtime path: "parser/regex.*"
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
calling provider#clipboard#Call('set', [['o'], 'v', '+'])

line 1:   if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
line 2:     return 0
line 3:   endif
line 4:   let s:here = v:true
line 5:   try
line 6:     return call(s:clipboard[a:method],a:args,s:clipboard)
calling 3(['o'], 'v', '+')

line 1:   if a:reg == '"'
line 2:     call s:clipboard.set(a:lines,a:regtype,'+')
line 3:     if s:copy['*'] != s:copy['+']
line 4:       call s:clipboard.set(a:lines,a:regtype,'*')
line 5:     end
line 6:     return 0
line 7:   end
line 8: 
line 9:   if type(s:copy[a:reg]) == v:t_func
line 10:     call s:copy[a:reg](a:lines, a:regtype)
line 11:     return 0
line 12:   end
line 13: 
line 14:   if s:cache_enabled == 0
line 15:     call s:try_cmd(s:copy[a:reg], a:lines)
calling <SNR>123_try_cmd(['pbcopy'], ['o'])

line 1:   let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
Executing command: "'/usr/bin/pbcopy'"


line 2:   if v:shell_error
line 3:     if !exists('s:did_error_try_cmd')
line 4:       echohl WarningMsg
line 5:       echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
line 6:       echohl None
line 7:       let s:did_error_try_cmd = 1
line 8:     endif
line 9:     return 0
line 10:   endif
line 11:   return out
<SNR>123_try_cmd returning []

continuing in 3

line 16:     "Cache it anyway we can compare it later to get regtype of the yank
line 17:     let s:selections[a:reg] = copy(s:selection)
line 18:     let s:selections[a:reg].data = [a:lines, a:regtype]
line 19:     return 0
3 returning #0

continuing in provider#clipboard#Call

:return 0 made pending

line 7:   finally
line 8:     let s:here = v:false
line 9:   endtry
:return 0 resumed

provider#clipboard#Call returning #0

Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand <Lua 72: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
calling provider#clipboard#Call('set', [['d'], 'v', '+'])

line 1:   if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
line 2:     return 0
line 3:   endif
line 4:   let s:here = v:true
line 5:   try
line 6:     return call(s:clipboard[a:method],a:args,s:clipboard)
calling 3(['d'], 'v', '+')

line 1:   if a:reg == '"'
line 2:     call s:clipboard.set(a:lines,a:regtype,'+')
line 3:     if s:copy['*'] != s:copy['+']
line 4:       call s:clipboard.set(a:lines,a:regtype,'*')
line 5:     end
line 6:     return 0
line 7:   end
line 8: 
line 9:   if type(s:copy[a:reg]) == v:t_func
line 10:     call s:copy[a:reg](a:lines, a:regtype)
line 11:     return 0
line 12:   end
line 13: 
line 14:   if s:cache_enabled == 0
line 15:     call s:try_cmd(s:copy[a:reg], a:lines)
calling <SNR>123_try_cmd(['pbcopy'], ['d'])

line 1:   let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
Executing command: "'/usr/bin/pbcopy'"


line 2:   if v:shell_error
line 3:     if !exists('s:did_error_try_cmd')
line 4:       echohl WarningMsg
line 5:       echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
line 6:       echohl None
line 7:       let s:did_error_try_cmd = 1
line 8:     endif
line 9:     return 0
line 10:   endif
line 11:   return out
<SNR>123_try_cmd returning []

continuing in 3

line 16:     "Cache it anyway we can compare it later to get regtype of the yank
line 17:     let s:selections[a:reg] = copy(s:selection)
line 18:     let s:selections[a:reg].data = [a:lines, a:regtype]
line 19:     return 0
3 returning #0

continuing in provider#clipboard#Call

:return 0 made pending

line 7:   finally
line 8:     let s:here = v:false
line 9:   endtry
:return 0 resumed

provider#clipboard#Call returning #0

Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand <Lua 72: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
calling provider#clipboard#Call('set', [['u'], 'v', '+'])

line 1:   if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
line 2:     return 0
line 3:   endif
line 4:   let s:here = v:true
line 5:   try
line 6:     return call(s:clipboard[a:method],a:args,s:clipboard)
calling 3(['u'], 'v', '+')

line 1:   if a:reg == '"'
line 2:     call s:clipboard.set(a:lines,a:regtype,'+')
line 3:     if s:copy['*'] != s:copy['+']
line 4:       call s:clipboard.set(a:lines,a:regtype,'*')
line 5:     end
line 6:     return 0
line 7:   end
line 8: 
line 9:   if type(s:copy[a:reg]) == v:t_func
line 10:     call s:copy[a:reg](a:lines, a:regtype)
line 11:     return 0
line 12:   end
line 13: 
line 14:   if s:cache_enabled == 0
line 15:     call s:try_cmd(s:copy[a:reg], a:lines)
calling <SNR>123_try_cmd(['pbcopy'], ['u'])

line 1:   let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
Executing command: "'/usr/bin/pbcopy'"


line 2:   if v:shell_error
line 3:     if !exists('s:did_error_try_cmd')
line 4:       echohl WarningMsg
line 5:       echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
line 6:       echohl None
line 7:       let s:did_error_try_cmd = 1
line 8:     endif
line 9:     return 0
line 10:   endif
line 11:   return out
<SNR>123_try_cmd returning []

continuing in 3

line 16:     "Cache it anyway we can compare it later to get regtype of the yank
line 17:     let s:selections[a:reg] = copy(s:selection)
line 18:     let s:selections[a:reg].data = [a:lines, a:regtype]
line 19:     return 0
3 returning #0

continuing in provider#clipboard#Call

:return 0 made pending

line 7:   finally
line 8:     let s:here = v:false
line 9:   endtry
:return 0 resumed

provider#clipboard#Call returning #0

Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand <Lua 72: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
calling provider#clipboard#Call('set', [['l'], 'v', '+'])

line 1:   if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
line 2:     return 0
line 3:   endif
line 4:   let s:here = v:true
line 5:   try
line 6:     return call(s:clipboard[a:method],a:args,s:clipboard)
calling 3(['l'], 'v', '+')

line 1:   if a:reg == '"'
line 2:     call s:clipboard.set(a:lines,a:regtype,'+')
line 3:     if s:copy['*'] != s:copy['+']
line 4:       call s:clipboard.set(a:lines,a:regtype,'*')
line 5:     end
line 6:     return 0
line 7:   end
line 8: 
line 9:   if type(s:copy[a:reg]) == v:t_func
line 10:     call s:copy[a:reg](a:lines, a:regtype)
line 11:     return 0
line 12:   end
line 13: 
line 14:   if s:cache_enabled == 0
line 15:     call s:try_cmd(s:copy[a:reg], a:lines)
calling <SNR>123_try_cmd(['pbcopy'], ['l'])

line 1:   let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
Executing command: "'/usr/bin/pbcopy'"


line 2:   if v:shell_error
line 3:     if !exists('s:did_error_try_cmd')
line 4:       echohl WarningMsg
line 5:       echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
line 6:       echohl None
line 7:       let s:did_error_try_cmd = 1
line 8:     endif
line 9:     return 0
line 10:   endif
line 11:   return out
<SNR>123_try_cmd returning []

continuing in 3

line 16:     "Cache it anyway we can compare it later to get regtype of the yank
line 17:     let s:selections[a:reg] = copy(s:selection)
line 18:     let s:selections[a:reg].data = [a:lines, a:regtype]
line 19:     return 0
3 returning #0

continuing in provider#clipboard#Call

:return 0 made pending

line 7:   finally
line 8:     let s:here = v:false
line 9:   endtry
:return 0 resumed

provider#clipboard#Call returning #0

Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand <Lua 72: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
calling provider#clipboard#Call('set', [['e'], 'v', '+'])

line 1:   if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
line 2:     return 0
line 3:   endif
line 4:   let s:here = v:true
line 5:   try
line 6:     return call(s:clipboard[a:method],a:args,s:clipboard)
calling 3(['e'], 'v', '+')

line 1:   if a:reg == '"'
line 2:     call s:clipboard.set(a:lines,a:regtype,'+')
line 3:     if s:copy['*'] != s:copy['+']
line 4:       call s:clipboard.set(a:lines,a:regtype,'*')
line 5:     end
line 6:     return 0
line 7:   end
line 8: 
line 9:   if type(s:copy[a:reg]) == v:t_func
line 10:     call s:copy[a:reg](a:lines, a:regtype)
line 11:     return 0
line 12:   end
line 13: 
line 14:   if s:cache_enabled == 0
line 15:     call s:try_cmd(s:copy[a:reg], a:lines)
calling <SNR>123_try_cmd(['pbcopy'], ['e'])

line 1:   let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
Executing command: "'/usr/bin/pbcopy'"


line 2:   if v:shell_error
line 3:     if !exists('s:did_error_try_cmd')
line 4:       echohl WarningMsg
line 5:       echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
line 6:       echohl None
line 7:       let s:did_error_try_cmd = 1
line 8:     endif
line 9:     return 0
line 10:   endif
line 11:   return out
<SNR>123_try_cmd returning []

continuing in 3

line 16:     "Cache it anyway we can compare it later to get regtype of the yank
line 17:     let s:selections[a:reg] = copy(s:selection)
line 18:     let s:selections[a:reg].data = [a:lines, a:regtype]
line 19:     return 0
3 returning #0

continuing in provider#clipboard#Call

:return 0 made pending

line 7:   finally
line 8:     let s:here = v:false
line 9:   endtry
:return 0 resumed

provider#clipboard#Call returning #0

Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand <Lua 72: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Searching for "parser/comment.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/comment.*"
Searching for "/opt/neovim/out/lib/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/comment.*"
not found in runtime path: "parser/comment.*"
Searching for "parser/regex.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/regex.*"
Searching for "/opt/neovim/out/lib/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/regex.*"
not found in runtime path: "parser/regex.*"
Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
calling provider#clipboard#Call('set', [['_'], 'v', '+'])

line 1:   if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
line 2:     return 0
line 3:   endif
line 4:   let s:here = v:true
line 5:   try
line 6:     return call(s:clipboard[a:method],a:args,s:clipboard)
calling 3(['_'], 'v', '+')

line 1:   if a:reg == '"'
line 2:     call s:clipboard.set(a:lines,a:regtype,'+')
line 3:     if s:copy['*'] != s:copy['+']
line 4:       call s:clipboard.set(a:lines,a:regtype,'*')
line 5:     end
line 6:     return 0
line 7:   end
line 8: 
line 9:   if type(s:copy[a:reg]) == v:t_func
line 10:     call s:copy[a:reg](a:lines, a:regtype)
line 11:     return 0
line 12:   end
line 13: 
line 14:   if s:cache_enabled == 0
line 15:     call s:try_cmd(s:copy[a:reg], a:lines)
calling <SNR>123_try_cmd(['pbcopy'], ['_'])

line 1:   let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
Executing command: "'/usr/bin/pbcopy'"


line 2:   if v:shell_error
line 3:     if !exists('s:did_error_try_cmd')
line 4:       echohl WarningMsg
line 5:       echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
line 6:       echohl None
line 7:       let s:did_error_try_cmd = 1
line 8:     endif
line 9:     return 0
line 10:   endif
line 11:   return out
<SNR>123_try_cmd returning []

continuing in 3

line 16:     "Cache it anyway we can compare it later to get regtype of the yank
line 17:     let s:selections[a:reg] = copy(s:selection)
line 18:     let s:selections[a:reg].data = [a:lines, a:regtype]
line 19:     return 0
3 returning #0

continuing in provider#clipboard#Call

:return 0 made pending

line 7:   finally
line 8:     let s:here = v:false
line 9:   endtry
:return 0 resumed

provider#clipboard#Call returning #0

Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand <Lua 72: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand <Lua 410: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing InsertEnter Autocommands for "*"
autocommand <Lua 273: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing InsertEnter Autocommands for "*"
autocommand <Lua 283: ~/.local/share/nvim/lazy/cmp-nvim-lsp/lua/cmp_nvim_lsp/init.lua:101>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})-- INSERT --

Executing: lua require"cmp.utils.feedkeys".run(1)
Executing: highlight! lualine_c_5_insert guifg=#c678dd guibg=#303447 gui=None
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 70: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing CursorMovedI Autocommands for "*"
autocommand <Lua 277: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChangedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand <Lua 274: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Searching for "queries/query/rainbow-delimiters.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/rainbow-delimiters.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/rainbow-delimiters.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/rainbow-delimiters.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/rainbow-delimiters.scm"
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: -- INSERT --
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing InsertLeave Autocommands for "*"
autocommand <Lua 87: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/init.lua:485>

Executing: 
Executing InsertLeave Autocommands for "*"
autocommand <Lua 278: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing InsertLeave Autocommands for "*"
autocommand <Lua 318: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing InsertEnter Autocommands for "*"
autocommand <Lua 273: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing InsertEnter Autocommands for "*"
autocommand <Lua 283: ~/.local/share/nvim/lazy/cmp-nvim-lsp/lua/cmp_nvim_lsp/init.lua:101>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})-- INSERT --

Executing: lua require"cmp.utils.feedkeys".run(2)
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 70: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing CursorMovedI Autocommands for "*"
autocommand <Lua 277: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 70: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing CursorMovedI Autocommands for "*"
autocommand <Lua 277: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChangedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand <Lua 274: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Searching for "parser/comment.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/comment.*"
Searching for "/opt/neovim/out/lib/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/comment.*"
not found in runtime path: "parser/comment.*"
Searching for "parser/regex.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/regex.*"
Searching for "/opt/neovim/out/lib/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/regex.*"
not found in runtime path: "parser/regex.*"
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 70: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing CursorMovedI Autocommands for "*"
autocommand <Lua 277: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChangedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand <Lua 274: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 70: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing CursorMovedI Autocommands for "*"
autocommand <Lua 277: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChangedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand <Lua 274: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 70: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing CursorMovedI Autocommands for "*"
autocommand <Lua 277: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChangedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand <Lua 274: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 70: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMovedI Autocommands for "*"

Executing CursorMovedI Autocommands for "*"
autocommand <Lua 277: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing CursorMovedI Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMovedI Autocommands for "*"
autocommand <Lua 420: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChangedI Autocommands for "*"

Executing TextChangedI Autocommands for "*"
autocommand <Lua 274: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing TextChangedI Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing InsertLeave Autocommands for "*"
autocommand <Lua 87: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/init.lua:485>

Executing: 
Executing InsertLeave Autocommands for "*"
autocommand <Lua 278: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing InsertLeave Autocommands for "*"
autocommand <Lua 318: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: w
Executing BufWritePre Autocommands for "<buffer=12>"
autocommand <Lua 591: /opt/neovim/out/share/nvim/runtime/ftplugin/query.lua:27>

Executing: 
Executing BufWritePre Autocommands for "<buffer=12>"
autocommand <Lua 608: /opt/neovim/out/share/nvim/runtime/lua/editorconfig.lua:156>

Executing: silent! undojoin
Executing: silent keepjumps keeppatterns %s/\s\+$//e
Executing: 
"queries/highlights.scm" 
"queries/highlights.scm" 172L, 3885B written
Executing BufWritePost Autocommands for "*"
autocommand <Lua 73: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:59>

Executing: 
Executing BufWritePost Autocommands for "*"
autocommand <Lua 85: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/loaders/fs_watchers.lua:66>

Executing: 
Executing BufWritePost Autocommands for "*"
autocommand <Lua 245: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:202>

Executing: 
Executing BufWritePost Autocommands for "*"
autocommand <Lua 322: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufWritePost Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_git_diff()

Executing: lua require'lualine.components.diff.git_diff'.update_git_diff()
Executing BufWritePost Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufWritePost Autocommands for "<buffer=12>"
autocommand <Lua 595: ~/.local/share/nvim/lazy/nvim-treesitter/plugin/nvim-treesitter.lua:27>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling <SNR>2_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 20: runtime! ftplugin/notify[.]{vim,lua} ftplugin/notify_*.{vim,lua} ftplugin/notify/*.{vim,lua}
Searching for "ftplugin/notify[.]{vim,lua} ftplugin/notify_*.{vim,lua} ftplugin/notify/*.{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/notify/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/notify_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/notify/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/notify_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/notify/*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/notify/*.{vim,lua}"
not found in runtime path: "ftplugin/notify[.]{vim,lua} ftplugin/notify_*.{vim,lua} ftplugin/notify/*.{vim,lua}"
line 21:       endfor
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 21:       endfor
line 22:     endif
<SNR>2_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling <SNR>3_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 15: runtime! indent/notify[.]{vim,lua}
Searching for "indent/notify[.]{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/indent/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/indent/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/indent/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/indent/notify[.]{vim,lua}"
not found in runtime path: "indent/notify[.]{vim,lua}"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 16:       endfor
line 17:     endif
<SNR>3_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand <Lua 60: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 131: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:59>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 179: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:20>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 93: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:86>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 347: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:77>

Executing: 
Executing FileType Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing FileType Autocommands for "*"
autocommand <Lua 390: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/install.lua:561>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 391: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Executing: 
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing FileType Autocommands for "*"
autocommand <Lua 418: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#303447
Executing: hi NotifyINFOBorder34 guifg=#303447
Executing: hi NotifyINFOBody34 guifg=#303447 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#303447
Executing: unlet! b:keymap_name
Executing: hi NotifyINFOIcon34 guifg=#323848
Executing: hi NotifyINFOBorder34 guifg=#313547
Executing: hi NotifyINFOBody34 guifg=#33374a guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#323848
Executing: redraw
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#384249
Executing: hi NotifyINFOBorder34 guifg=#323748
Executing: hi NotifyINFOBody34 guifg=#3a3e53 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#384249
Executing: hi NotifyINFOIcon34 guifg=#404f4b
Executing: hi NotifyINFOBorder34 guifg=#343b48
Executing: hi NotifyINFOBody34 guifg=#44485e guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#404f4b
Executing: hi NotifyINFOIcon34 guifg=#495e4e
Executing: hi NotifyINFOBorder34 guifg=#363e49
Executing: hi NotifyINFOBody34 guifg=#4f546b guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#495e4e
Executing: hi NotifyINFOIcon34 guifg=#526d50
Executing: hi NotifyINFOBorder34 guifg=#39424a
Executing: hi NotifyINFOBody34 guifg=#5a6078 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#526d50
Executing: hi NotifyINFOIcon34 guifg=#5b7d53
Executing: hi NotifyINFOBorder34 guifg=#3b464b
Executing: hi NotifyINFOBody34 guifg=#666c86 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#5b7d53
Executing: hi NotifyINFOIcon34 guifg=#648b55
Executing: hi NotifyINFOBorder34 guifg=#3d4a4c
Executing: hi NotifyINFOBody34 guifg=#717792 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#648b55
Executing: hi NotifyINFOIcon34 guifg=#6c9957
Executing: hi NotifyINFOBorder34 guifg=#3f4d4c
Executing: hi NotifyINFOBody34 guifg=#7b829e guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#6c9957
Executing: hi NotifyINFOIcon34 guifg=#74a65a
Executing: hi NotifyINFOBorder34 guifg=#41514d
Executing: hi NotifyINFOBody34 guifg=#848ca9 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#74a65a
Executing: hi NotifyINFOIcon34 guifg=#7bb25b
Executing: hi NotifyINFOBorder34 guifg=#43544e
Executing: hi NotifyINFOBody34 guifg=#8d95b3 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#7bb25b
Executing: hi NotifyINFOIcon34 guifg=#81bc5d
Executing: hi NotifyINFOBorder34 guifg=#45564e
Executing: hi NotifyINFOBody34 guifg=#959dbc guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#81bc5d
Executing: hi NotifyINFOIcon34 guifg=#87c55f
Executing: hi NotifyINFOBorder34 guifg=#46584f
Executing: hi NotifyINFOBody34 guifg=#9ba4c4 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#87c55f
Executing: hi NotifyINFOIcon34 guifg=#8bcd60
Executing: hi NotifyINFOBorder34 guifg=#475b4f
Executing: hi NotifyINFOBody34 guifg=#a1aacb guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#8bcd60
Executing: hi NotifyINFOIcon34 guifg=#90d461
Executing: hi NotifyINFOBorder34 guifg=#495c50
Executing: hi NotifyINFOBody34 guifg=#a7afd1 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#90d461
Executing: hi NotifyINFOIcon34 guifg=#93db62
Executing: hi NotifyINFOBorder34 guifg=#495e50
Executing: hi NotifyINFOBody34 guifg=#abb4d7 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#93db62
Executing: hi NotifyINFOIcon34 guifg=#97e063
Executing: hi NotifyINFOBorder34 guifg=#4a5f50
Executing: hi NotifyINFOBody34 guifg=#afb8db guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#97e063
Executing: hi NotifyINFOIcon34 guifg=#99e564
Executing: hi NotifyINFOBorder34 guifg=#4b6051
Executing: hi NotifyINFOBody34 guifg=#b3bcdf guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#99e564
Executing: hi NotifyINFOIcon34 guifg=#9ce964
Executing: hi NotifyINFOBorder34 guifg=#4c6151
Executing: hi NotifyINFOBody34 guifg=#b6bfe3 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#9ce964
Executing: hi NotifyINFOIcon34 guifg=#9eec65
Executing: hi NotifyINFOBorder34 guifg=#4c6251
Executing: hi NotifyINFOBody34 guifg=#b8c1e6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#9eec65
Executing: hi NotifyINFOIcon34 guifg=#9fef65
Executing: hi NotifyINFOBorder34 guifg=#4d6351
Executing: hi NotifyINFOBody34 guifg=#bac4e8 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#9fef65
Executing: hi NotifyINFOIcon34 guifg=#a1f266
Executing: hi NotifyINFOBorder34 guifg=#4d6451
Executing: hi NotifyINFOBody34 guifg=#bcc6ea guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a1f266
Executing: hi NotifyINFOIcon34 guifg=#a2f466
Executing: hi NotifyINFOBorder34 guifg=#4d6451
Executing: hi NotifyINFOBody34 guifg=#bec7ec guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a2f466
Executing: hi NotifyINFOIcon34 guifg=#a3f566
Executing: hi NotifyINFOBorder34 guifg=#4e6551
Executing: hi NotifyINFOBody34 guifg=#bfc9ee guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a3f566
Executing: hi NotifyINFOIcon34 guifg=#a4f767
Executing: hi NotifyINFOBorder34 guifg=#4e6552
Executing: hi NotifyINFOBody34 guifg=#c0caef guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a4f767
Executing: hi NotifyINFOIcon34 guifg=#a5f867
Executing: hi NotifyINFOBorder34 guifg=#4e6552
Executing: hi NotifyINFOBody34 guifg=#c1cbf0 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a5f867
Executing: hi NotifyINFOIcon34 guifg=#a6f967
Executing: hi NotifyINFOBorder34 guifg=#4e6652
Executing: hi NotifyINFOBody34 guifg=#c2ccf1 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a6f967
Executing: hi NotifyINFOIcon34 guifg=#a6fa67
Executing: hi NotifyINFOBorder34 guifg=#4e6652
Executing: hi NotifyINFOBody34 guifg=#c3ccf2 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a6fa67
Executing: hi NotifyINFOIcon34 guifg=#a7fb67
Executing: hi NotifyINFOBorder34 guifg=#4e6652
Executing: hi NotifyINFOBody34 guifg=#c3cdf3 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a7fb67
Executing: hi NotifyINFOIcon34 guifg=#a7fc67
Executing: hi NotifyINFOBorder34 guifg=#4e6652
Executing: hi NotifyINFOBody34 guifg=#c4cdf3 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a7fc67
Executing: hi NotifyINFOIcon34 guifg=#a7fc68
Executing: hi NotifyINFOBorder34 guifg=#4f6652
Executing: hi NotifyINFOBody34 guifg=#c4cef4 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a7fc68
Executing: hi NotifyINFOIcon34 guifg=#a8fd68
Executing: hi NotifyINFOBorder34 guifg=#4f6652
Executing: hi NotifyINFOBody34 guifg=#c4cef4 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a8fd68
Executing: hi NotifyINFOIcon34 guifg=#a8fd68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c5cff4 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a8fd68
Executing: hi NotifyINFOIcon34 guifg=#a8fd68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a8fd68
Executing: hi NotifyINFOIcon34 guifg=#a8fe68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a8fe68
Executing: hi NotifyINFOIcon34 guifg=#a8fe68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a8fe68
Executing: hi NotifyINFOIcon34 guifg=#a8fe68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a8fe68
Executing: hi NotifyINFOIcon34 guifg=#a9fe68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9fe68
Executing: hi NotifyINFOIcon34 guifg=#a9fe68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f5 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9fe68
Executing: hi NotifyINFOIcon34 guifg=#a9fe68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9fe68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a9ff68
Executing: hi NotifyINFOBorder34 guifg=#4f6752
Executing: hi NotifyINFOBody34 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a9ff68
Executing: hi NotifyINFOIcon34 guifg=#a1f166
Executing: hi NotifyINFOBorder34 guifg=#4d6451
Executing: hi NotifyINFOBody34 guifg=#bcc6ea guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#a1f166
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#90d561
Executing: hi NotifyINFOBorder34 guifg=#495d50
Executing: hi NotifyINFOBody34 guifg=#a7b0d2 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#90d561
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#7eb65c
Executing: hi NotifyINFOBorder34 guifg=#44554e
Executing: hi NotifyINFOBody34 guifg=#9098b7 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#7eb65c
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#6d9a58
Executing: hi NotifyINFOBorder34 guifg=#404e4d
Executing: hi NotifyINFOBody34 guifg=#7b829f guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#6d9a58
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#5e8154
Executing: hi NotifyINFOBorder34 guifg=#3c474b
Executing: hi NotifyINFOBody34 guifg=#696f8a guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#5e8154
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#526e50
Executing: hi NotifyINFOBorder34 guifg=#39434a
Executing: hi NotifyINFOBody34 guifg=#5b6079 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#526e50
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#495f4e
Executing: hi NotifyINFOBorder34 guifg=#363f49
Executing: hi NotifyINFOBody34 guifg=#4f556c guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#495f4e
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#42534c
Executing: hi NotifyINFOBorder34 guifg=#353c49
Executing: hi NotifyINFOBody34 guifg=#474c62 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#42534c
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#3d4a4b
Executing: hi NotifyINFOBorder34 guifg=#333a48
Executing: hi NotifyINFOBody34 guifg=#40455a guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#3d4a4b
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#3a444a
Executing: hi NotifyINFOBorder34 guifg=#323848
Executing: hi NotifyINFOBody34 guifg=#3c4055 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#3a444a
Executing WinResized Autocommands for "*"
autocommand <Lua 180: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:27>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "*"
autocommand <Lua 634: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing: hi NotifyINFOIcon34 guifg=#373f49
Executing: hi NotifyINFOBorder34 guifg=#323748
Executing: hi NotifyINFOBody34 guifg=#383d51 guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#373f49
Executing: hi NotifyINFOIcon34 guifg=#353c48
Executing: hi NotifyINFOBorder34 guifg=#313647
Executing: hi NotifyINFOBody34 guifg=#363a4e guibg=#303447
Executing: hi NotifyINFOTitle34 guifg=#353c48
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing BufLeave Autocommands for "*"
autocommand <Lua 235: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in BufLeave Autocommands for "*"

Executing BufLeave Autocommands for "*"
autocommand lua require('goto-preview').buffer_left()

Executing: lua require('goto-preview').buffer_left()
Executing BufLeave Autocommands for "*"
autocommand <Lua 400: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand <Lua 236: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinLeave Autocommands for "*"
autocommand <Lua 401: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand <Lua 229: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: unlet! b:keymap_name
Executing: unlet! b:keymap_name
Executing: IBLEnableScope
Executing: 
Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing WinEnter Autocommands for "*"
autocommand <Lua 319: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
autocommand <Lua 323: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:26>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing WinEnter Autocommands for "*"
autocommand <Lua 394: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif

Executing: if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
Executing:     setlocal nolist linebreak filetype=markdown | endif
Executing:  endif
Executing BufEnter Autocommands for "*"
autocommand <Lua 228: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require('goto-preview').buffer_entered()

Executing: lua require('goto-preview').buffer_entered()
Executing BufEnter Autocommands for "*"
autocommand <Lua 287: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:104>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif

Executing: if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif
Executing:  quit | endif
Executing:  endif
autocommand <Lua 320: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 344: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <Lua 387: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:141>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 393: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "<buffer=1>"
autocommand <Lua 498: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing CursorMoved Autocommands for "*"
autocommand <Lua 409: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: IBLEnableScope
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
/\<_module_path\>             
/\<_module_path\>        [2/2]
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: IBLEnableScope
Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "<buffer=1>"
autocommand lua require"illuminate".on_cursor_moved(1)

Executing: lua require"illuminate".on_cursor_moved(1)
Executing WinScrolled Autocommands for "*"
autocommand <Lua 227: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinScrolled Autocommands for "*"

Executing WinScrolled Autocommands for "*"
autocommand <Lua 392: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand lua require("todo-comments.highlight").highlight_win()

Executing: lua require("todo-comments.highlight").highlight_win()
Executing WinScrolled Autocommands for "<buffer=1>"
autocommand <Lua 117: ~/.local/share/nvim/lazy/symbol-usage.nvim/lua/symbol-usage/utils.lua:190>

Executing: 
Executing WinScrolled Autocommands for "*"
autocommand <Lua 609: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:40>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Searching for "queries/javascript/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/javascript/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/javascript/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/javascript/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/javascript/context.scm"
Executing: IBLEnableScope
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: noh
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand <Lua 235: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing BufLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in BufLeave Autocommands for "*"

Executing BufLeave Autocommands for "*"
autocommand lua require('goto-preview').buffer_left()

Executing: lua require('goto-preview').buffer_left()
Executing BufLeave Autocommands for "*"
autocommand <Lua 400: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand <Lua 236: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing: call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in WinLeave Autocommands for "*"

Executing WinLeave Autocommands for "*"
autocommand <Lua 401: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:38>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand <Lua 229: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Searching for "queries/query/context.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/context.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/context.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/context.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/context.scm"
not found in runtime path: "queries/query/context.scm"
Executing: 
Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in WinEnter Autocommands for "*"

Executing WinEnter Autocommands for "*"
autocommand <Lua 319: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
autocommand <Lua 323: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:26>

Executing: 
Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing WinEnter Autocommands for "*"
autocommand <Lua 394: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif

Executing: if expand('%') ==# '' && &previewwindow && pumvisible() && getbufvar('#', '&omnifunc') ==# 'rhubarb#omnifunc' |    setlocal nolist linebreak filetype=markdown | endif
Executing:     setlocal nolist linebreak filetype=markdown | endif
Executing:  endif
Executing BufEnter Autocommands for "*"
autocommand <Lua 228: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require('goto-preview').buffer_entered()

Executing: lua require('goto-preview').buffer_entered()
Executing BufEnter Autocommands for "*"
autocommand <Lua 287: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:104>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif

Executing: if winnr('$') == 1 && bufname() == 'NvimTree_' . tabpagenr() | quit | endif
Executing:  quit | endif
Executing:  endif
autocommand <Lua 320: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 344: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:61>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_diff_args()

Executing: lua require'lualine.components.diff.git_diff'.update_diff_args()
Executing BufEnter Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufEnter Autocommands for "*"
autocommand <Lua 387: ~/.local/share/nvim/lazy/bufferline.nvim/lua/bufferline.lua:141>

Executing: 
Executing BufEnter Autocommands for "*"
autocommand <Lua 393: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing BufEnter Autocommands for "<buffer=12>"
autocommand <Lua 590: /opt/neovim/out/share/nvim/runtime/ftplugin/query.lua:27>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 415: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
calling provider#clipboard#Call('set', [['_module_path'], 'v', '+'])

line 1:   if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
line 2:     return 0
line 3:   endif
line 4:   let s:here = v:true
line 5:   try
line 6:     return call(s:clipboard[a:method],a:args,s:clipboard)
calling 3(['_module_path'], 'v', '+')

line 1:   if a:reg == '"'
line 2:     call s:clipboard.set(a:lines,a:regtype,'+')
line 3:     if s:copy['*'] != s:copy['+']
line 4:       call s:clipboard.set(a:lines,a:regtype,'*')
line 5:     end
line 6:     return 0
line 7:   end
line 8: 
line 9:   if type(s:copy[a:reg]) == v:t_func
line 10:     call s:copy[a:reg](a:lines, a:regtype)
line 11:     return 0
line 12:   end
line 13: 
line 14:   if s:cache_enabled == 0
line 15:     call s:try_cmd(s:copy[a:reg], a:lines)
calling <SNR>123_try_cmd(['pbcopy'], ['_module_path'])

line 1:   let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
Executing command: "'/usr/bin/pbcopy'"


line 2:   if v:shell_error
line 3:     if !exists('s:did_error_try_cmd')
line 4:       echohl WarningMsg
line 5:       echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
line 6:       echohl None
line 7:       let s:did_error_try_cmd = 1
line 8:     endif
line 9:     return 0
line 10:   endif
line 11:   return out
<SNR>123_try_cmd returning []

continuing in 3

line 16:     "Cache it anyway we can compare it later to get regtype of the yank
line 17:     let s:selections[a:reg] = copy(s:selection)
line 18:     let s:selections[a:reg].data = [a:lines, a:regtype]
line 19:     return 0
3 returning #0

continuing in provider#clipboard#Call

:return 0 made pending

line 7:   finally
line 8:     let s:here = v:false
line 9:   endtry
:return 0 resumed

provider#clipboard#Call returning #0

Executing InsertEnter Autocommands for "*"
autocommand <Lua 273: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing InsertEnter Autocommands for "*"
autocommand <Lua 283: ~/.local/share/nvim/lazy/cmp-nvim-lsp/lua/cmp_nvim_lsp/init.lua:101>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: lua require"cmp.utils.feedkeys".run(3)
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing InsertLeave Autocommands for "*"
autocommand <Lua 87: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/init.lua:485>

Executing: 
Executing InsertLeave Autocommands for "*"
autocommand <Lua 278: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/autocmd.lua:22>

Executing: 
Executing InsertLeave Autocommands for "*"
autocommand <Lua 318: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 68: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 233: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in CursorMoved Autocommands for "*"

Executing CursorMoved Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing CursorMoved Autocommands for "*"
autocommand <Lua 398: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:21>

Executing: 
Executing CursorMoved Autocommands for "*"
autocommand <Lua 415: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand <Lua 72: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing: call s:Highlight_Matching_Pair()
calling <SNR>56_Highlight_Matching_Pair()

line 1:   if !exists("w:matchparen_ids")
line 2:     let w:matchparen_ids = []
line 3:   endif
line 4:   " Remove any previous match.
line 5:   call s:Remove_Matches()
calling <SNR>56_Remove_Matches()

line 1:   if exists('w:paren_hl_on') && w:paren_hl_on
line 2:     while !empty(w:matchparen_ids)
line 3:       silent! call remove(w:matchparen_ids, 0)->matchdelete()
line 4:     endwhile
line 5:     let w:paren_hl_on = 0
line 6:   endif
<SNR>56_Remove_Matches returning #0

continuing in <SNR>56_Highlight_Matching_Pair

line 6: 
line 7:   " Avoid that we remove the popup menu.
line 8:   " Return when there are no colors (looks like the cursor jumps).
line 9:   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
line 10:     return
line 11:   endif
line 12: 
line 13:   " Get the character under the cursor and check if it's in 'matchpairs'.
line 14:   let c_lnum = line('.')
line 15:   let c_col = col('.')
line 16:   let before = 0
line 17: 
line 18:   let text = getline(c_lnum)
line 19:   let c_before = text->strpart(0, c_col - 1)->slice(-1)
line 20:   let c = text->strpart(c_col - 1)->slice(0, 1)
line 21:   let plist = split(&matchpairs, '.\zs[:,]')
line 22:   let i = index(plist, c)
line 23:   if i < 0
line 24:     " not found, in Insert mode try character before the cursor
line 25:     if c_col > 1 && (mode() == 'i' || mode() == 'R')
line 26:       let before = strlen(c_before)
line 27:       let c = c_before
line 28:       let i = index(plist, c)
line 29:     endif
line 30:     if i < 0
line 31:       " not found, nothing to do
line 32:       return
<SNR>56_Highlight_Matching_Pair returning #0

continuing in TextChanged Autocommands for "*"

Executing TextChanged Autocommands for "*"
autocommand <Lua 418: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Searching for "queries/query/rainbow-delimiters.scm" in runtime path
Searching for "/Users/embe221ed/.config/nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/site/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/queries/query/rainbow-delimiters.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/queries/query/rainbow-delimiters.scm"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/queries/query/rainbow-delimiters.scm"
Searching for "/opt/neovim/out/lib/nvim/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/queries/query/rainbow-delimiters.scm"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/queries/query/rainbow-delimiters.scm"
Searching for "parser/comment.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/comment.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/comment.*"
Searching for "/opt/neovim/out/lib/nvim/parser/comment.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/comment.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/comment.*"
not found in runtime path: "parser/comment.*"
Searching for "parser/regex.*" in runtime path
Searching for "/Users/embe221ed/.config/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/site/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/parser/regex.*"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/parser/regex.*"
Searching for "/opt/neovim/out/lib/nvim/parser/regex.*"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/parser/regex.*"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/parser/regex.*"
not found in runtime path: "parser/regex.*"
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: w
Executing BufWritePre Autocommands for "<buffer=12>"
autocommand <Lua 591: /opt/neovim/out/share/nvim/runtime/ftplugin/query.lua:27>

Executing: 
Executing BufWritePre Autocommands for "<buffer=12>"
autocommand <Lua 608: /opt/neovim/out/share/nvim/runtime/lua/editorconfig.lua:156>

Executing: silent! undojoin
Executing: silent keepjumps keeppatterns %s/\s\+$//e
Executing: 
"queries/highlights.scm" 
"queries/highlights.scm" 172L, 3879B written
Executing BufWritePost Autocommands for "*"
autocommand <Lua 73: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:59>

Executing: 
Executing BufWritePost Autocommands for "*"
autocommand <Lua 85: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/loaders/fs_watchers.lua:66>

Executing: 
Executing BufWritePost Autocommands for "*"
autocommand <Lua 245: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:202>

Executing: 
Executing BufWritePost Autocommands for "*"
autocommand <Lua 322: ~/.local/share/nvim/lazy/outline.nvim/lua/outline/init.lua:19>

Executing: 
Executing BufWritePost Autocommands for "*"
autocommand lua require'lualine.components.diff.git_diff'.update_git_diff()

Executing: lua require'lualine.components.diff.git_diff'.update_git_diff()
Executing BufWritePost Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing BufWritePost Autocommands for "<buffer=12>"
autocommand <Lua 595: ~/.local/share/nvim/lazy/nvim-treesitter/plugin/nvim-treesitter.lua:27>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

Executing: call s:LoadFTPlugin()
calling <SNR>2_LoadFTPlugin()

line 1:     if exists("b:undo_ftplugin")
line 2:       exe b:undo_ftplugin
line 3:       unlet! b:undo_ftplugin b:did_ftplugin
line 4:     endif
line 5: 
line 6:     let s = expand("<amatch>")
line 7:     if s != ""
line 8:       if &cpo =~# "S" && exists("b:did_ftplugin")
line 9: ^I" In compatible mode options are reset to the global values, need to
line 10: ^I" set the local values also when a plugin was already used.
line 11: ^Iunlet b:did_ftplugin
line 12:       endif
line 13: 
line 14:       " When there is a dot it is used to separate filetype names.  Thus for
line 15:       " "aaa.bbb" load "aaa" and then "bbb".
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 20: runtime! ftplugin/notify[.]{vim,lua} ftplugin/notify_*.{vim,lua} ftplugin/notify/*.{vim,lua}
Searching for "ftplugin/notify[.]{vim,lua} ftplugin/notify_*.{vim,lua} ftplugin/notify/*.{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.config/nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/ftplugin/notify/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/notify_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/ftplugin/notify/*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/notify_*.{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/ftplugin/notify/*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/notify_*.{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/ftplugin/notify/*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/notify_*.{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/ftplugin/notify/*.{vim,lua}"
not found in runtime path: "ftplugin/notify[.]{vim,lua} ftplugin/notify_*.{vim,lua} ftplugin/notify/*.{vim,lua}"
line 21:       endfor
line 16:       for name in split(s, '\.')
line 17:         " Load Lua ftplugins after Vim ftplugins _per directory_
line 18:         " TODO(clason): use nvim__get_runtime when supports globs and modeline
line 19:         " XXX: "[.]" in the first pattern makes it a wildcard on Windows
line 20:         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
line 21:       endfor
line 22:     endif
<SNR>2_LoadFTPlugin returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

Executing: call s:LoadIndent()
calling <SNR>3_LoadIndent()

line 1:     if exists("b:undo_indent")
line 2:       exe b:undo_indent
line 3:       unlet! b:undo_indent b:did_indent
line 4:     endif
line 5:     let s = expand("<amatch>")
line 6:     if s != ""
line 7:       if exists("b:did_indent")
line 8: ^Iunlet b:did_indent
line 9:       endif
line 10: 
line 11:       " When there is a dot it is used to separate filetype names.  Thus for
line 12:       " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 15: runtime! indent/notify[.]{vim,lua}
Searching for "indent/notify[.]{vim,lua}" in runtime path
Searching for "/Users/embe221ed/.config/nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/site/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lazy.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rustaceanvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/persistence.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/obsidian.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/symbol-usage.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter-context/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-cmp/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-notify/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nui.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/noice.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/goto-preview/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-metals/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope-file-browser.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/outline.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/Comment.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dressing.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/friendly-snippets/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/LuaSnip/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/render-markdown.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-autopairs/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-tree.lua/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/dashboard-nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/telescope.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/rainbow-delimiters.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/guess-indent.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/bufferline.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-web-devicons/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lualine.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-rhubarb/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-fugitive/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/no-neck-pain.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/plenary.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/todo-comments.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/lspkind.nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-treesitter/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-lspconfig/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vim-illuminate/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/nvim-jdtls/indent/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/indent/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/share/nvim/runtime/pack/dist/opt/matchit/indent/notify[.]{vim,lua}"
Searching for "/opt/neovim/out/lib/nvim/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/state/nvim/lazy/readme/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-path/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-buffer/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-cmdline/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp-nvim-lsp/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/cmp_luasnip/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/catppuccin/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/indent-blankline.nvim/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/playground/after/indent/notify[.]{vim,lua}"
Searching for "/Users/embe221ed/.local/share/nvim/lazy/vimtex/after/indent/notify[.]{vim,lua}"
not found in runtime path: "indent/notify[.]{vim,lua}"
line 16:       endfor
line 13:       for name in split(s, '\.')
line 14:         " XXX: "[.]" in the pattern makes it a wildcard on Windows
line 15:         exe $'runtime! indent/{name}[.]{{vim,lua}}'
line 16:       endfor
line 17:     endif
<SNR>3_LoadIndent returning #0

continuing in FileType Autocommands for "*"

Executing FileType Autocommands for "*"
autocommand <Lua 60: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 131: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:59>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 179: ~/.local/share/nvim/lazy/render-markdown.nvim/lua/render-markdown/manager.lua:20>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 93: ~/.local/share/nvim/lazy/LuaSnip/plugin/luasnip.lua:86>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 347: ~/.local/share/nvim/lazy/nvim-autopairs/lua/nvim-autopairs.lua:77>

Executing: 
Executing FileType Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})
Executing FileType Autocommands for "*"
autocommand <Lua 390: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/install.lua:561>

Executing: 
Executing FileType Autocommands for "*"
autocommand <Lua 391: ~/.local/share/nvim/lazy/nvim-treesitter/lua/nvim-treesitter/configs.lua:132>

Executing: 
Executing FileType Autocommands for "*"
autocommand if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif

Executing: if !exists('b:ts_highlight') | 0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  0verbose exe "set syntax=" . expand("<amatch>") | endif
Executing:  endif
Executing FileType Autocommands for "*"
autocommand <Lua 421: ~/.local/share/nvim/lazy/indent-blankline.nvim/lua/ibl/autocmds.lua:26>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing: hi NotifyINFOIcon41 guifg=#303447
Executing: hi NotifyINFOBorder41 guifg=#303447
Executing: hi NotifyINFOBody41 guifg=#303447 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#303447
Executing: unlet! b:keymap_name
Executing: hi NotifyINFOIcon41 guifg=#323848
Executing: hi NotifyINFOBorder41 guifg=#313547
Executing: hi NotifyINFOBody41 guifg=#33374a guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#323848
Executing: redraw
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing: hi NotifyINFOIcon41 guifg=#384249
Executing: hi NotifyINFOBorder41 guifg=#323748
Executing: hi NotifyINFOBody41 guifg=#3a3e53 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#384249
Executing: hi NotifyINFOIcon41 guifg=#404f4b
Executing: hi NotifyINFOBorder41 guifg=#343b48
Executing: hi NotifyINFOBody41 guifg=#44485e guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#404f4b
Executing: hi NotifyINFOIcon41 guifg=#495e4e
Executing: hi NotifyINFOBorder41 guifg=#363e49
Executing: hi NotifyINFOBody41 guifg=#4f546b guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#495e4e
Executing: hi NotifyINFOIcon41 guifg=#526d50
Executing: hi NotifyINFOBorder41 guifg=#39424a
Executing: hi NotifyINFOBody41 guifg=#5a6078 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#526d50
Executing: hi NotifyINFOIcon41 guifg=#5b7d53
Executing: hi NotifyINFOBorder41 guifg=#3b464b
Executing: hi NotifyINFOBody41 guifg=#666c86 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#5b7d53
Executing: hi NotifyINFOIcon41 guifg=#648b55
Executing: hi NotifyINFOBorder41 guifg=#3d4a4c
Executing: hi NotifyINFOBody41 guifg=#717792 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#648b55
Executing: hi NotifyINFOIcon41 guifg=#6c9957
Executing: hi NotifyINFOBorder41 guifg=#3f4d4c
Executing: hi NotifyINFOBody41 guifg=#7b829e guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#6c9957
Executing: hi NotifyINFOIcon41 guifg=#74a65a
Executing: hi NotifyINFOBorder41 guifg=#41514d
Executing: hi NotifyINFOBody41 guifg=#848ca9 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#74a65a
Executing: hi NotifyINFOIcon41 guifg=#7bb25b
Executing: hi NotifyINFOBorder41 guifg=#43544e
Executing: hi NotifyINFOBody41 guifg=#8d95b3 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#7bb25b
Executing: hi NotifyINFOIcon41 guifg=#81bc5d
Executing: hi NotifyINFOBorder41 guifg=#45564e
Executing: hi NotifyINFOBody41 guifg=#959dbc guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#81bc5d
Executing: hi NotifyINFOIcon41 guifg=#87c55f
Executing: hi NotifyINFOBorder41 guifg=#46584f
Executing: hi NotifyINFOBody41 guifg=#9ba4c4 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#87c55f
Executing: hi NotifyINFOIcon41 guifg=#8bcd60
Executing: hi NotifyINFOBorder41 guifg=#475b4f
Executing: hi NotifyINFOBody41 guifg=#a1aacb guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#8bcd60
Executing: hi NotifyINFOIcon41 guifg=#90d461
Executing: hi NotifyINFOBorder41 guifg=#495c50
Executing: hi NotifyINFOBody41 guifg=#a7afd1 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#90d461
Executing: hi NotifyINFOIcon41 guifg=#93db62
Executing: hi NotifyINFOBorder41 guifg=#495e50
Executing: hi NotifyINFOBody41 guifg=#abb4d7 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#93db62
Executing: hi NotifyINFOIcon41 guifg=#97e063
Executing: hi NotifyINFOBorder41 guifg=#4a5f50
Executing: hi NotifyINFOBody41 guifg=#afb8db guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#97e063
Executing: hi NotifyINFOIcon41 guifg=#99e564
Executing: hi NotifyINFOBorder41 guifg=#4b6051
Executing: hi NotifyINFOBody41 guifg=#b3bcdf guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#99e564
Executing: hi NotifyINFOIcon41 guifg=#9ce964
Executing: hi NotifyINFOBorder41 guifg=#4c6151
Executing: hi NotifyINFOBody41 guifg=#b6bfe3 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#9ce964
Executing: hi NotifyINFOIcon41 guifg=#9eec65
Executing: hi NotifyINFOBorder41 guifg=#4c6251
Executing: hi NotifyINFOBody41 guifg=#b8c1e6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#9eec65
Executing: hi NotifyINFOIcon41 guifg=#9fef65
Executing: hi NotifyINFOBorder41 guifg=#4d6351
Executing: hi NotifyINFOBody41 guifg=#bac4e8 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#9fef65
Executing: hi NotifyINFOIcon41 guifg=#a1f266
Executing: hi NotifyINFOBorder41 guifg=#4d6451
Executing: hi NotifyINFOBody41 guifg=#bcc6ea guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a1f266
Executing: hi NotifyINFOIcon41 guifg=#a2f466
Executing: hi NotifyINFOBorder41 guifg=#4d6451
Executing: hi NotifyINFOBody41 guifg=#bec7ec guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a2f466
Executing: hi NotifyINFOIcon41 guifg=#a3f566
Executing: hi NotifyINFOBorder41 guifg=#4e6551
Executing: hi NotifyINFOBody41 guifg=#bfc9ee guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a3f566
Executing: hi NotifyINFOIcon41 guifg=#a4f767
Executing: hi NotifyINFOBorder41 guifg=#4e6552
Executing: hi NotifyINFOBody41 guifg=#c0caef guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a4f767
Executing: hi NotifyINFOIcon41 guifg=#a5f867
Executing: hi NotifyINFOBorder41 guifg=#4e6552
Executing: hi NotifyINFOBody41 guifg=#c1cbf0 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a5f867
Executing: hi NotifyINFOIcon41 guifg=#a6f967
Executing: hi NotifyINFOBorder41 guifg=#4e6652
Executing: hi NotifyINFOBody41 guifg=#c2ccf1 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a6f967
Executing: hi NotifyINFOIcon41 guifg=#a6fa67
Executing: hi NotifyINFOBorder41 guifg=#4e6652
Executing: hi NotifyINFOBody41 guifg=#c3ccf2 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a6fa67
Executing: hi NotifyINFOIcon41 guifg=#a7fb67
Executing: hi NotifyINFOBorder41 guifg=#4e6652
Executing: hi NotifyINFOBody41 guifg=#c3cdf3 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a7fb67
Executing: hi NotifyINFOIcon41 guifg=#a7fc67
Executing: hi NotifyINFOBorder41 guifg=#4e6652
Executing: hi NotifyINFOBody41 guifg=#c4cdf3 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a7fc67
Executing: hi NotifyINFOIcon41 guifg=#a7fc68
Executing: hi NotifyINFOBorder41 guifg=#4f6652
Executing: hi NotifyINFOBody41 guifg=#c4cef4 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a7fc68
Executing: hi NotifyINFOIcon41 guifg=#a8fd68
Executing: hi NotifyINFOBorder41 guifg=#4f6652
Executing: hi NotifyINFOBody41 guifg=#c4cef4 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a8fd68
Executing: hi NotifyINFOIcon41 guifg=#a8fd68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c5cff4 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a8fd68
Executing: hi NotifyINFOIcon41 guifg=#a8fd68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a8fd68
Executing: hi NotifyINFOIcon41 guifg=#a8fe68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a8fe68
Executing: hi NotifyINFOIcon41 guifg=#a8fe68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a8fe68
Executing: hi NotifyINFOIcon41 guifg=#a8fe68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a8fe68
Executing: hi NotifyINFOIcon41 guifg=#a9fe68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c5cff5 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9fe68
Executing: hi NotifyINFOIcon41 guifg=#a9fe68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f5 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9fe68
Executing: hi NotifyINFOIcon41 guifg=#a9fe68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9fe68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68
Executing ModeChanged Autocommands for "*"
autocommand <Lua 71: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:49>

Executing: 
Executing ModeChanged Autocommands for "*"
autocommand call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: call v:lua.require'lualine'.refresh({'kind': 'tabpage', 'place': ['statusline'], 'trigger': 'autocmd'})

Executing: qal
Executing QuitPre Autocommands for "*"
autocommand <Lua 612: vim/_editor.lua:0>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 132: ~/.local/share/nvim/lazy/rainbow-delimiters.nvim/plugin/rainbow-delimiters.lua:72>

Executing: 
Executing BufUnload Autocommands for "*"
autocommand <Lua 259: ~/.local/share/nvim/lazy/nvim-tree.lua/lua/nvim-tree.lua:227>

Executing: 
Executing VimLeavePre Autocommands for "*"
autocommand <Lua 40: /opt/neovim/out/share/nvim/runtime/lua/vim/lsp.lua:808>

Executing: 
autocommand <Lua 264: ~/.local/share/nvim/lazy/nvim-cmp/lua/cmp/utils/async.lua:17>

Executing: 
Executing VimLeavePre Autocommands for "*"
autocommand <Lua 469: ~/.local/share/nvim/lazy/persistence.nvim/lua/persistence/init.lua:43>

Executing command: "'/bin/zsh' '-c' 'git branch --show-current'"


Executing: mks! /Users/embe221ed/.local/state/nvim/sessions/\%opt\%tree-sitter-parsers\%tree-sitter-move-on-aptos.vim
chdir(/opt/tree-sitter-parsers/tree-sitter-move-on-aptos)
Executing: 
Executing VimLeavePre Autocommands for "*"
autocommand <Lua 528: ~/.local/share/nvim/lazy/noice.nvim/lua/noice/init.lua:58>

Executing: 
Writing ShaDa file "/Users/embe221ed/.local/state/nvim/shada/main.shada"
Executing VimLeave Autocommands for "*"
autocommand <Lua 74: ~/.local/share/nvim/lazy/vim-illuminate/lua/illuminate/engine.lua:65>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 234: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing OptionSet Autocommands for "*"
autocommand <Lua 399: ~/.local/share/nvim/lazy/nvim-treesitter-context/lua/treesitter-context.lua:143>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing WinClosed Autocommands for "*"
autocommand lua require('goto-preview').remove_win()

Executing: lua require('goto-preview').remove_win()
Executing BufWipeout Autocommands for "*"
autocommand <Lua 90: ~/.local/share/nvim/lazy/LuaSnip/lua/luasnip/config.lua:116>

Executing: 
Executing: hi NotifyINFOIcon41 guifg=#a9ff68
Executing: hi NotifyINFOBorder41 guifg=#4f6752
Executing: hi NotifyINFOBody41 guifg=#c6d0f6 guibg=#303447
Executing: hi NotifyINFOTitle41 guifg=#a9ff68